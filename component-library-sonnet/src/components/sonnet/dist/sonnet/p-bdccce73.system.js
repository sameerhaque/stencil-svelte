var __extends=this&&this.__extends||function(){var t=function(e,r){t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)if(e.hasOwnProperty(r))t[r]=e[r]};return t(e,r)};return function(e,r){t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();System.register([],(function(t){"use strict";return{execute:function(){(function(){if(typeof window!=="object"){return}if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){if(!("isIntersecting"in window.IntersectionObserverEntry.prototype)){Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return this.intersectionRatio>0}})}return}var t=window.document;function e(t){this.time=t.time;this.target=t.target;this.rootBounds=t.rootBounds;this.boundingClientRect=t.boundingClientRect;this.intersectionRect=t.intersectionRect||h();this.isIntersecting=!!t.intersectionRect;var e=this.boundingClientRect;var r=e.width*e.height;var n=this.intersectionRect;var i=n.width*n.height;if(r){this.intersectionRatio=Number((i/r).toFixed(4))}else{this.intersectionRatio=this.isIntersecting?1:0}}function r(t,e){var r=e||{};if(typeof t!="function"){throw new Error("callback must be a function")}if(r.root&&r.root.nodeType!=1){throw new Error("root must be an Element")}this._checkForIntersections=i(this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT);this._callback=t;this._observationTargets=[];this._queuedEntries=[];this._rootMarginValues=this._parseRootMargin(r.rootMargin);this.thresholds=this._initThresholds(r.threshold);this.root=r.root||null;this.rootMargin=this._rootMarginValues.map((function(t){return t.value+t.unit})).join(" ")}r.prototype.THROTTLE_TIMEOUT=100;r.prototype.POLL_INTERVAL=null;r.prototype.USE_MUTATION_OBSERVER=true;r.prototype.observe=function(t){var e=this._observationTargets.some((function(e){return e.element==t}));if(e){return}if(!(t&&t.nodeType==1)){throw new Error("target must be an Element")}this._registerInstance();this._observationTargets.push({element:t,entry:null});this._monitorIntersections();this._checkForIntersections()};r.prototype.unobserve=function(t){this._observationTargets=this._observationTargets.filter((function(e){return e.element!=t}));if(!this._observationTargets.length){this._unmonitorIntersections();this._unregisterInstance()}};r.prototype.disconnect=function(){this._observationTargets=[];this._unmonitorIntersections();this._unregisterInstance()};r.prototype.takeRecords=function(){var t=this._queuedEntries.slice();this._queuedEntries=[];return t};r.prototype._initThresholds=function(t){var e=t||[0];if(!Array.isArray(e))e=[e];return e.sort().filter((function(t,e,r){if(typeof t!="number"||isNaN(t)||t<0||t>1){throw new Error("threshold must be a number between 0 and 1 inclusively")}return t!==r[e-1]}))};r.prototype._parseRootMargin=function(t){var e=t||"0px";var r=e.split(/\s+/).map((function(t){var e=/^(-?\d*\.?\d+)(px|%)$/.exec(t);if(!e){throw new Error("rootMargin must be specified in pixels or percent")}return{value:parseFloat(e[1]),unit:e[2]}}));r[1]=r[1]||r[0];r[2]=r[2]||r[0];r[3]=r[3]||r[1];return r};r.prototype._monitorIntersections=function(){if(!this._monitoringIntersections){this._monitoringIntersections=true;if(this.POLL_INTERVAL){this._monitoringInterval=setInterval(this._checkForIntersections,this.POLL_INTERVAL)}else{o(window,"resize",this._checkForIntersections,true);o(t,"scroll",this._checkForIntersections,true);if(this.USE_MUTATION_OBSERVER&&"MutationObserver"in window){this._domObserver=new MutationObserver(this._checkForIntersections);this._domObserver.observe(t,{attributes:true,childList:true,characterData:true,subtree:true})}}}};r.prototype._unmonitorIntersections=function(){if(this._monitoringIntersections){this._monitoringIntersections=false;clearInterval(this._monitoringInterval);this._monitoringInterval=null;s(window,"resize",this._checkForIntersections,true);s(t,"scroll",this._checkForIntersections,true);if(this._domObserver){this._domObserver.disconnect();this._domObserver=null}}};r.prototype._checkForIntersections=function(){var t=this._rootIsInDom();var r=t?this._getRootRect():h();this._observationTargets.forEach((function(i){var o=i.element;var s=u(o);var c=this._rootContainsTarget(o);var h=i.entry;var a=t&&c&&this._computeTargetAndRootIntersection(o,r);var f=i.entry=new e({time:n(),target:o,boundingClientRect:s,rootBounds:r,intersectionRect:a});if(!h){this._queuedEntries.push(f)}else if(t&&c){if(this._hasCrossedThreshold(h,f)){this._queuedEntries.push(f)}}else{if(h&&h.isIntersecting){this._queuedEntries.push(f)}}}),this);if(this._queuedEntries.length){this._callback(this.takeRecords(),this)}};r.prototype._computeTargetAndRootIntersection=function(e,r){if(window.getComputedStyle(e).display=="none")return;var n=u(e);var i=n;var o=f(e);var s=false;while(!s){var h=null;var a=o.nodeType==1?window.getComputedStyle(o):{};if(a.display=="none")return;if(o==this.root||o==t){s=true;h=r}else{if(o!=t.body&&o!=t.documentElement&&a.overflow!="visible"){h=u(o)}}if(h){i=c(h,i);if(!i)break}o=f(o)}return i};r.prototype._getRootRect=function(){var e;if(this.root){e=u(this.root)}else{var r=t.documentElement;var n=t.body;e={top:0,left:0,right:r.clientWidth||n.clientWidth,width:r.clientWidth||n.clientWidth,bottom:r.clientHeight||n.clientHeight,height:r.clientHeight||n.clientHeight}}return this._expandRectByRootMargin(e)};r.prototype._expandRectByRootMargin=function(t){var e=this._rootMarginValues.map((function(e,r){return e.unit=="px"?e.value:e.value*(r%2?t.width:t.height)/100}));var r={top:t.top-e[0],right:t.right+e[1],bottom:t.bottom+e[2],left:t.left-e[3]};r.width=r.right-r.left;r.height=r.bottom-r.top;return r};r.prototype._hasCrossedThreshold=function(t,e){var r=t&&t.isIntersecting?t.intersectionRatio||0:-1;var n=e.isIntersecting?e.intersectionRatio||0:-1;if(r===n)return;for(var i=0;i<this.thresholds.length;i++){var o=this.thresholds[i];if(o==r||o==n||o<r!==o<n){return true}}};r.prototype._rootIsInDom=function(){return!this.root||a(t,this.root)};r.prototype._rootContainsTarget=function(e){return a(this.root||t,e)};r.prototype._registerInstance=function(){};r.prototype._unregisterInstance=function(){};function n(){return window.performance&&performance.now&&performance.now()}function i(t,e){var r=null;return function(){if(!r){r=setTimeout((function(){t();r=null}),e)}}}function o(t,e,r,n){if(typeof t.addEventListener=="function"){t.addEventListener(e,r,n||false)}else if(typeof t.attachEvent=="function"){t.attachEvent("on"+e,r)}}function s(t,e,r,n){if(typeof t.removeEventListener=="function"){t.removeEventListener(e,r,n||false)}else if(typeof t.detatchEvent=="function"){t.detatchEvent("on"+e,r)}}function c(t,e){var r=Math.max(t.top,e.top);var n=Math.min(t.bottom,e.bottom);var i=Math.max(t.left,e.left);var o=Math.min(t.right,e.right);var s=o-i;var c=n-r;return s>=0&&c>=0&&{top:r,bottom:n,left:i,right:o,width:s,height:c}}function u(t){var e;try{e=t.getBoundingClientRect()}catch(r){}if(!e)return h();if(!(e.width&&e.height)){e={top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.right-e.left,height:e.bottom-e.top}}return e}function h(){return{top:0,bottom:0,left:0,right:0,width:0,height:0}}function a(t,e){var r=e;while(r){if(r==t)return true;r=f(r)}return false}function f(t){var e=t.parentNode;if(e&&e.nodeType==11&&e.host){return e.host}if(e&&e.assignedSlot){return e.assignedSlot.parentNode}return e}window.IntersectionObserver=r;window.IntersectionObserverEntry=e})();var e=function(){function t(){}t.prototype.observe=function(e){var r=new IntersectionObserver(this.onIntersection,{rootMargin:"50px 0px",threshold:.2});window[t.INTERSECTION_OBSERVER_IDENTIFIER_NAME]?r.observe(e):this.observerDoesNotExist(e)};t.prototype.unobserve=function(e){if(window[t.INTERSECTION_OBSERVER_IDENTIFIER_NAME]&&typeof e){e.disconnect()}};return t}();e.INTERSECTION_OBSERVER_IDENTIFIER_NAME="IntersectionObserver";var r=function(t){__extends(e,t);function e(){return t.call(this)||this}e.getInstance=function(){return new e};e.prototype.onIntersection=function(e,r){var n=e[0];if(n.isIntersecting){n.target.querySelector("img").setAttribute("src",n.target.getAttribute("data-src"));n.target.querySelectorAll("source").forEach((function(t){t.setAttribute("srcSet",t.getAttribute("data-srcSet"))}));t.prototype.unobserve.call(this,r)}};e.prototype.observerDoesNotExist=function(t){t.setAttribute("src",t.getAttribute("data-src"))};return e}(e);t("L",r)}}}));