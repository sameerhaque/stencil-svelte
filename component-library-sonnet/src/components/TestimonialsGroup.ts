/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { Components, JSX } from 'component-library';


interface TestimonialsGroupProps {
  
  /**  */
  groupId?: Components.TestimonialsGroup["groupId"]
  
  /**  */
  groupHeadline?: Components.TestimonialsGroup["groupHeadline"]
  
  /**  */
  selected?: Components.TestimonialsGroup["selected"]
  
  /**  */
  slideSelector?: Components.TestimonialsGroup["slideSelector"]
  
  /**  */
  indicatorSelector?: Components.TestimonialsGroup["indicatorSelector"]
  
  /**  */
  prevSelector?: Components.TestimonialsGroup["prevSelector"]
  
  /**  */
  nextSelector?: Components.TestimonialsGroup["nextSelector"]
  
  /**  */
  cycleType?: Components.TestimonialsGroup["cycleType"]
  
  /**  */
  ride?: Components.TestimonialsGroup["ride"]
  
  /**  */
  wrap?: Components.TestimonialsGroup["wrap"]
}

interface TestimonialsGroupEvents {
  
  /**  */
  showSlide: Parameters<JSX.TestimonialsGroup["onShowSlide"]>[0]
  
  /**  */
  hideSlide: Parameters<JSX.TestimonialsGroup["onHideSlide"]>[0]
}

interface TestimonialsGroupSlots {
  default: any
}
  
/* generated by Svelte v3.35.0 */
import {
	SvelteComponent,
	binding_callbacks,
	create_slot,
	detach,
	element,
	init,
	insert,
	listen,
	run_all,
	safe_not_equal,
	set_custom_element_data,
	transition_in,
	transition_out,
	update_slot
} from "svelte/internal";

import { createEventDispatcher, onMount } from "svelte";

function create_fragment(ctx) {
	let testimonials_group;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[18].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[17], null);

	return {
		c() {
			testimonials_group = element("testimonials-group");
			if (default_slot) default_slot.c();
			set_custom_element_data(testimonials_group, "group-id", /*groupId*/ ctx[0]);
			set_custom_element_data(testimonials_group, "group-headline", /*groupHeadline*/ ctx[1]);
			set_custom_element_data(testimonials_group, "selected", /*selected*/ ctx[2]);
			set_custom_element_data(testimonials_group, "slide-selector", /*slideSelector*/ ctx[3]);
			set_custom_element_data(testimonials_group, "indicator-selector", /*indicatorSelector*/ ctx[4]);
			set_custom_element_data(testimonials_group, "prev-selector", /*prevSelector*/ ctx[5]);
			set_custom_element_data(testimonials_group, "next-selector", /*nextSelector*/ ctx[6]);
			set_custom_element_data(testimonials_group, "cycle-type", /*cycleType*/ ctx[7]);
			set_custom_element_data(testimonials_group, "ride", /*ride*/ ctx[8]);
			set_custom_element_data(testimonials_group, "wrap", /*wrap*/ ctx[9]);
		},
		m(target, anchor) {
			insert(target, testimonials_group, anchor);

			if (default_slot) {
				default_slot.m(testimonials_group, null);
			}

			/*testimonials_group_binding*/ ctx[19](testimonials_group);
			current = true;

			if (!mounted) {
				dispose = [
					listen(testimonials_group, "showSlide", /*onEvent*/ ctx[11]),
					listen(testimonials_group, "hideSlide", /*onEvent*/ ctx[11])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 131072) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[17], dirty, null, null);
				}
			}

			if (!current || dirty & /*groupId*/ 1) {
				set_custom_element_data(testimonials_group, "group-id", /*groupId*/ ctx[0]);
			}

			if (!current || dirty & /*groupHeadline*/ 2) {
				set_custom_element_data(testimonials_group, "group-headline", /*groupHeadline*/ ctx[1]);
			}

			if (!current || dirty & /*selected*/ 4) {
				set_custom_element_data(testimonials_group, "selected", /*selected*/ ctx[2]);
			}

			if (!current || dirty & /*slideSelector*/ 8) {
				set_custom_element_data(testimonials_group, "slide-selector", /*slideSelector*/ ctx[3]);
			}

			if (!current || dirty & /*indicatorSelector*/ 16) {
				set_custom_element_data(testimonials_group, "indicator-selector", /*indicatorSelector*/ ctx[4]);
			}

			if (!current || dirty & /*prevSelector*/ 32) {
				set_custom_element_data(testimonials_group, "prev-selector", /*prevSelector*/ ctx[5]);
			}

			if (!current || dirty & /*nextSelector*/ 64) {
				set_custom_element_data(testimonials_group, "next-selector", /*nextSelector*/ ctx[6]);
			}

			if (!current || dirty & /*cycleType*/ 128) {
				set_custom_element_data(testimonials_group, "cycle-type", /*cycleType*/ ctx[7]);
			}

			if (!current || dirty & /*ride*/ 256) {
				set_custom_element_data(testimonials_group, "ride", /*ride*/ ctx[8]);
			}

			if (!current || dirty & /*wrap*/ 512) {
				set_custom_element_data(testimonials_group, "wrap", /*wrap*/ ctx[9]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(testimonials_group);
			if (default_slot) default_slot.d(detaching);
			/*testimonials_group_binding*/ ctx[19](null);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let __ref;
	let __mounted = false;
	const dispatch = createEventDispatcher();
	let { groupId = undefined } = $$props;
	let { groupHeadline = undefined } = $$props;
	let { selected = undefined } = $$props;
	let { slideSelector = undefined } = $$props;
	let { indicatorSelector = undefined } = $$props;
	let { prevSelector = undefined } = $$props;
	let { nextSelector = undefined } = $$props;
	let { cycleType = undefined } = $$props;
	let { ride = undefined } = $$props;
	let { wrap = undefined } = $$props;
	const onShow = (...args) => __ref.onShow(...args);
	const onHide = (...args) => __ref.onHide(...args);
	const next = (...args) => __ref.next(...args);
	const prev = (...args) => __ref.prev(...args);
	const getWebComponent = () => __ref;

	onMount(() => {
		__mounted = true;
	});

	const setProp = (prop, value) => {
		if (__ref) $$invalidate(10, __ref[prop] = value, __ref);
	};

	const onEvent = e => {
		e.stopPropagation();
		dispatch(e.type, e.detail);
	};

	function testimonials_group_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			__ref = $$value;
			$$invalidate(10, __ref);
		});
	}

	$$self.$$set = $$props => {
		if ("groupId" in $$props) $$invalidate(0, groupId = $$props.groupId);
		if ("groupHeadline" in $$props) $$invalidate(1, groupHeadline = $$props.groupHeadline);
		if ("selected" in $$props) $$invalidate(2, selected = $$props.selected);
		if ("slideSelector" in $$props) $$invalidate(3, slideSelector = $$props.slideSelector);
		if ("indicatorSelector" in $$props) $$invalidate(4, indicatorSelector = $$props.indicatorSelector);
		if ("prevSelector" in $$props) $$invalidate(5, prevSelector = $$props.prevSelector);
		if ("nextSelector" in $$props) $$invalidate(6, nextSelector = $$props.nextSelector);
		if ("cycleType" in $$props) $$invalidate(7, cycleType = $$props.cycleType);
		if ("ride" in $$props) $$invalidate(8, ride = $$props.ride);
		if ("wrap" in $$props) $$invalidate(9, wrap = $$props.wrap);
		if ("$$scope" in $$props) $$invalidate(17, $$scope = $$props.$$scope);
	};

	return [
		groupId,
		groupHeadline,
		selected,
		slideSelector,
		indicatorSelector,
		prevSelector,
		nextSelector,
		cycleType,
		ride,
		wrap,
		__ref,
		onEvent,
		onShow,
		onHide,
		next,
		prev,
		getWebComponent,
		$$scope,
		slots,
		testimonials_group_binding
	];
}

class TestimonialsGroup extends SvelteComponent {
  $$prop_def: TestimonialsGroupProps;
  $$events_def: TestimonialsGroupEvents;
  $$slot_def: TestimonialsGroupSlots;

  $on<K extends keyof TestimonialsGroupEvents>(type: K, callback: (e: TestimonialsGroupEvents[K]) => any): () => void {
	  return super.$on(type, callback);
	}

  $set($$props: Partial<TestimonialsGroupProps>): void {
	  super.$set($$props);
	}

	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			groupId: 0,
			groupHeadline: 1,
			selected: 2,
			slideSelector: 3,
			indicatorSelector: 4,
			prevSelector: 5,
			nextSelector: 6,
			cycleType: 7,
			ride: 8,
			wrap: 9,
			onShow: 12,
			onHide: 13,
			next: 14,
			prev: 15,
			getWebComponent: 16
		});
	}

	
  /**  */
 get onShow(): Components.TestimonialsGroup["onShow"] {
		return this.$$.ctx[12];
	}

	
  /**  */
 get onHide(): Components.TestimonialsGroup["onHide"] {
		return this.$$.ctx[13];
	}

	
  /**  */
 get next(): Components.TestimonialsGroup["next"] {
		return this.$$.ctx[14];
	}

	
  /**  */
 get prev(): Components.TestimonialsGroup["prev"] {
		return this.$$.ctx[15];
	}

	get getWebComponent(): HTMLTestimonialsGroupElement | undefined {
		return this.$$.ctx[16];
	}
}

export default TestimonialsGroup;