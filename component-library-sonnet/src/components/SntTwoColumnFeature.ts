/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import { Components, JSX } from 'component-library';


interface SntTwoColumnFeatureProps {
  
  /**  */
  titleString?: Components.SntTwoColumnFeature["titleString"]
  
  /**  */
  copyText?: Components.SntTwoColumnFeature["copyText"]
  
  /**  */
  imagePath?: Components.SntTwoColumnFeature["imagePath"]
  
  /**  */
  imageAltText?: Components.SntTwoColumnFeature["imageAltText"]
  
  /**  */
  imagePosition?: Components.SntTwoColumnFeature["imagePosition"]
  
  /**  */
  primaryButtonText?: Components.SntTwoColumnFeature["primaryButtonText"]
  
  /**  */
  primaryButtonAction?: Components.SntTwoColumnFeature["primaryButtonAction"]
  
  /**  */
  primaryButtonData?: Components.SntTwoColumnFeature["primaryButtonData"]
  
  /**  */
  secondaryButtonText?: Components.SntTwoColumnFeature["secondaryButtonText"]
  
  /**  */
  secondaryButtonAction?: Components.SntTwoColumnFeature["secondaryButtonAction"]
  
  /**  */
  secondaryButtonData?: Components.SntTwoColumnFeature["secondaryButtonData"]
  
  /**  */
  linkTitle?: Components.SntTwoColumnFeature["linkTitle"]
  
  /**  */
  linkUrl?: Components.SntTwoColumnFeature["linkUrl"]
  
  /**  */
  openLinkInNewWindow?: Components.SntTwoColumnFeature["openLinkInNewWindow"]
  
  /**  */
  properties?: Components.SntTwoColumnFeature["properties"]
}

interface SntTwoColumnFeatureEvents {
  
}

interface SntTwoColumnFeatureSlots {
  default: any
}
  
/* generated by Svelte v3.35.0 */
import {
	SvelteComponent,
	binding_callbacks,
	create_slot,
	detach,
	element,
	init,
	insert,
	safe_not_equal,
	set_custom_element_data,
	transition_in,
	transition_out,
	update_slot
} from "svelte/internal";

import { createEventDispatcher, onMount } from "svelte";

function create_fragment(ctx) {
	let snt_two_column_feature;
	let current;
	const default_slot_template = /*#slots*/ ctx[18].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[17], null);

	return {
		c() {
			snt_two_column_feature = element("snt-two-column-feature");
			if (default_slot) default_slot.c();
			set_custom_element_data(snt_two_column_feature, "title-string", /*titleString*/ ctx[0]);
			set_custom_element_data(snt_two_column_feature, "copy-text", /*copyText*/ ctx[1]);
			set_custom_element_data(snt_two_column_feature, "image-path", /*imagePath*/ ctx[2]);
			set_custom_element_data(snt_two_column_feature, "image-alt-text", /*imageAltText*/ ctx[3]);
			set_custom_element_data(snt_two_column_feature, "image-position", /*imagePosition*/ ctx[4]);
			set_custom_element_data(snt_two_column_feature, "primary-button-text", /*primaryButtonText*/ ctx[5]);
			set_custom_element_data(snt_two_column_feature, "primary-button-action", /*primaryButtonAction*/ ctx[6]);
			set_custom_element_data(snt_two_column_feature, "primary-button-data", /*primaryButtonData*/ ctx[7]);
			set_custom_element_data(snt_two_column_feature, "secondary-button-text", /*secondaryButtonText*/ ctx[8]);
			set_custom_element_data(snt_two_column_feature, "secondary-button-action", /*secondaryButtonAction*/ ctx[9]);
			set_custom_element_data(snt_two_column_feature, "secondary-button-data", /*secondaryButtonData*/ ctx[10]);
			set_custom_element_data(snt_two_column_feature, "link-title", /*linkTitle*/ ctx[11]);
			set_custom_element_data(snt_two_column_feature, "link-url", /*linkUrl*/ ctx[12]);
			set_custom_element_data(snt_two_column_feature, "open-link-in-new-window", /*openLinkInNewWindow*/ ctx[13]);
			set_custom_element_data(snt_two_column_feature, "properties", /*properties*/ ctx[14]);
		},
		m(target, anchor) {
			insert(target, snt_two_column_feature, anchor);

			if (default_slot) {
				default_slot.m(snt_two_column_feature, null);
			}

			/*snt_two_column_feature_binding*/ ctx[19](snt_two_column_feature);
			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 131072) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[17], dirty, null, null);
				}
			}

			if (!current || dirty & /*titleString*/ 1) {
				set_custom_element_data(snt_two_column_feature, "title-string", /*titleString*/ ctx[0]);
			}

			if (!current || dirty & /*copyText*/ 2) {
				set_custom_element_data(snt_two_column_feature, "copy-text", /*copyText*/ ctx[1]);
			}

			if (!current || dirty & /*imagePath*/ 4) {
				set_custom_element_data(snt_two_column_feature, "image-path", /*imagePath*/ ctx[2]);
			}

			if (!current || dirty & /*imageAltText*/ 8) {
				set_custom_element_data(snt_two_column_feature, "image-alt-text", /*imageAltText*/ ctx[3]);
			}

			if (!current || dirty & /*imagePosition*/ 16) {
				set_custom_element_data(snt_two_column_feature, "image-position", /*imagePosition*/ ctx[4]);
			}

			if (!current || dirty & /*primaryButtonText*/ 32) {
				set_custom_element_data(snt_two_column_feature, "primary-button-text", /*primaryButtonText*/ ctx[5]);
			}

			if (!current || dirty & /*primaryButtonAction*/ 64) {
				set_custom_element_data(snt_two_column_feature, "primary-button-action", /*primaryButtonAction*/ ctx[6]);
			}

			if (!current || dirty & /*primaryButtonData*/ 128) {
				set_custom_element_data(snt_two_column_feature, "primary-button-data", /*primaryButtonData*/ ctx[7]);
			}

			if (!current || dirty & /*secondaryButtonText*/ 256) {
				set_custom_element_data(snt_two_column_feature, "secondary-button-text", /*secondaryButtonText*/ ctx[8]);
			}

			if (!current || dirty & /*secondaryButtonAction*/ 512) {
				set_custom_element_data(snt_two_column_feature, "secondary-button-action", /*secondaryButtonAction*/ ctx[9]);
			}

			if (!current || dirty & /*secondaryButtonData*/ 1024) {
				set_custom_element_data(snt_two_column_feature, "secondary-button-data", /*secondaryButtonData*/ ctx[10]);
			}

			if (!current || dirty & /*linkTitle*/ 2048) {
				set_custom_element_data(snt_two_column_feature, "link-title", /*linkTitle*/ ctx[11]);
			}

			if (!current || dirty & /*linkUrl*/ 4096) {
				set_custom_element_data(snt_two_column_feature, "link-url", /*linkUrl*/ ctx[12]);
			}

			if (!current || dirty & /*openLinkInNewWindow*/ 8192) {
				set_custom_element_data(snt_two_column_feature, "open-link-in-new-window", /*openLinkInNewWindow*/ ctx[13]);
			}

			if (!current || dirty & /*properties*/ 16384) {
				set_custom_element_data(snt_two_column_feature, "properties", /*properties*/ ctx[14]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(snt_two_column_feature);
			if (default_slot) default_slot.d(detaching);
			/*snt_two_column_feature_binding*/ ctx[19](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let __ref;
	let __mounted = false;
	const dispatch = createEventDispatcher();
	let { titleString } = $$props;
	let { copyText } = $$props;
	let { imagePath } = $$props;
	let { imageAltText = undefined } = $$props;
	let { imagePosition = undefined } = $$props;
	let { primaryButtonText = undefined } = $$props;
	let { primaryButtonAction = undefined } = $$props;
	let { primaryButtonData = undefined } = $$props;
	let { secondaryButtonText = undefined } = $$props;
	let { secondaryButtonAction = undefined } = $$props;
	let { secondaryButtonData = undefined } = $$props;
	let { linkTitle = undefined } = $$props;
	let { linkUrl = undefined } = $$props;
	let { openLinkInNewWindow = undefined } = $$props;
	let { properties = undefined } = $$props;
	const getWebComponent = () => __ref;

	onMount(() => {
		__mounted = true;
	});

	const setProp = (prop, value) => {
		if (__ref) $$invalidate(15, __ref[prop] = value, __ref);
	};

	const onEvent = e => {
		e.stopPropagation();
		dispatch(e.type, e.detail);
	};

	function snt_two_column_feature_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			__ref = $$value;
			$$invalidate(15, __ref);
		});
	}

	$$self.$$set = $$props => {
		if ("titleString" in $$props) $$invalidate(0, titleString = $$props.titleString);
		if ("copyText" in $$props) $$invalidate(1, copyText = $$props.copyText);
		if ("imagePath" in $$props) $$invalidate(2, imagePath = $$props.imagePath);
		if ("imageAltText" in $$props) $$invalidate(3, imageAltText = $$props.imageAltText);
		if ("imagePosition" in $$props) $$invalidate(4, imagePosition = $$props.imagePosition);
		if ("primaryButtonText" in $$props) $$invalidate(5, primaryButtonText = $$props.primaryButtonText);
		if ("primaryButtonAction" in $$props) $$invalidate(6, primaryButtonAction = $$props.primaryButtonAction);
		if ("primaryButtonData" in $$props) $$invalidate(7, primaryButtonData = $$props.primaryButtonData);
		if ("secondaryButtonText" in $$props) $$invalidate(8, secondaryButtonText = $$props.secondaryButtonText);
		if ("secondaryButtonAction" in $$props) $$invalidate(9, secondaryButtonAction = $$props.secondaryButtonAction);
		if ("secondaryButtonData" in $$props) $$invalidate(10, secondaryButtonData = $$props.secondaryButtonData);
		if ("linkTitle" in $$props) $$invalidate(11, linkTitle = $$props.linkTitle);
		if ("linkUrl" in $$props) $$invalidate(12, linkUrl = $$props.linkUrl);
		if ("openLinkInNewWindow" in $$props) $$invalidate(13, openLinkInNewWindow = $$props.openLinkInNewWindow);
		if ("properties" in $$props) $$invalidate(14, properties = $$props.properties);
		if ("$$scope" in $$props) $$invalidate(17, $$scope = $$props.$$scope);
	};

	return [
		titleString,
		copyText,
		imagePath,
		imageAltText,
		imagePosition,
		primaryButtonText,
		primaryButtonAction,
		primaryButtonData,
		secondaryButtonText,
		secondaryButtonAction,
		secondaryButtonData,
		linkTitle,
		linkUrl,
		openLinkInNewWindow,
		properties,
		__ref,
		getWebComponent,
		$$scope,
		slots,
		snt_two_column_feature_binding
	];
}

class SntTwoColumnFeature extends SvelteComponent {
  $$prop_def: SntTwoColumnFeatureProps;
  $$events_def: SntTwoColumnFeatureEvents;
  $$slot_def: SntTwoColumnFeatureSlots;

  $on<K extends keyof SntTwoColumnFeatureEvents>(type: K, callback: (e: SntTwoColumnFeatureEvents[K]) => any): () => void {
	  return super.$on(type, callback);
	}

  $set($$props: Partial<SntTwoColumnFeatureProps>): void {
	  super.$set($$props);
	}

	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			titleString: 0,
			copyText: 1,
			imagePath: 2,
			imageAltText: 3,
			imagePosition: 4,
			primaryButtonText: 5,
			primaryButtonAction: 6,
			primaryButtonData: 7,
			secondaryButtonText: 8,
			secondaryButtonAction: 9,
			secondaryButtonData: 10,
			linkTitle: 11,
			linkUrl: 12,
			openLinkInNewWindow: 13,
			properties: 14,
			getWebComponent: 16
		});
	}

	get getWebComponent(): HTMLSntTwoColumnFeatureElement | undefined {
		return this.$$.ctx[16];
	}
}

export default SntTwoColumnFeature;