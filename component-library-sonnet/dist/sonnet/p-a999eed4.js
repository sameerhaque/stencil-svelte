class t extends class{constructor(){this.configurations=new Map}remove(t){this.configurations.delete(t)}hasConfigurations(){return this.configurations.size>0}getConfigurations(){return this.configurations}values(){return this.configurations.values()}keys(){return this.configurations.keys()}}{add(t){this.configurations.set(t.key,t)}}class s{constructor(t,s,e,a){this.key=t,this.value=s,this.disabled=e,this.selected=a}}class e{static generateConfigurationFromItemOptions(e){const a=new t;return Array.from(e.querySelectorAll("snt-item")).forEach(t=>{a.add(new s(t.hasAttribute("data-key")?t.getAttribute("data-key"):"",t.hasAttribute("value")?t.getAttribute("value"):"",!!t.hasAttribute("disabled")&&Boolean(t.getAttribute("disabled")),!!t.hasAttribute("selected")&&Boolean(t.getAttribute("selected"))))}),a}}export{e as I}