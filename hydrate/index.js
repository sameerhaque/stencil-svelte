'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const XLINK_NS = 'http://www.w3.org/1999/xlink';

const attrHandler = {
  get(obj, prop) {
    if (prop in obj) {
      return obj[prop];
    }
    if (!isNaN(prop)) {
      return obj.__items[prop];
    }
    return undefined;
  },
};
const createAttributeProxy = (caseInsensitive) => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);
class MockAttributeMap {
  constructor(caseInsensitive = false) {
    this.caseInsensitive = caseInsensitive;
    this.__items = [];
  }
  get length() {
    return this.__items.length;
  }
  item(index) {
    return this.__items[index] || null;
  }
  setNamedItem(attr) {
    attr.namespaceURI = null;
    this.setNamedItemNS(attr);
  }
  setNamedItemNS(attr) {
    if (attr != null && attr.value != null) {
      attr.value = String(attr.value);
    }
    const existingAttr = this.__items.find(a => a.name === attr.name && a.namespaceURI === attr.namespaceURI);
    if (existingAttr != null) {
      existingAttr.value = attr.value;
    }
    else {
      this.__items.push(attr);
    }
  }
  getNamedItem(attrName) {
    if (this.caseInsensitive) {
      attrName = attrName.toLowerCase();
    }
    return this.getNamedItemNS(null, attrName);
  }
  getNamedItemNS(namespaceURI, attrName) {
    namespaceURI = getNamespaceURI(namespaceURI);
    return this.__items.find(attr => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null;
  }
  removeNamedItem(attr) {
    this.removeNamedItemNS(attr);
  }
  removeNamedItemNS(attr) {
    for (let i = 0, ii = this.__items.length; i < ii; i++) {
      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {
        this.__items.splice(i, 1);
        break;
      }
    }
  }
}
function getNamespaceURI(namespaceURI) {
  return namespaceURI === XLINK_NS ? null : namespaceURI;
}
function cloneAttributes(srcAttrs, sortByName = false) {
  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);
  if (srcAttrs != null) {
    const attrLen = srcAttrs.length;
    if (sortByName && attrLen > 1) {
      const sortedAttrs = [];
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        sortedAttrs.push(dstAttr);
      }
      sortedAttrs.sort(sortAttributes).forEach(attr => {
        dstAttrs.setNamedItemNS(attr);
      });
    }
    else {
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        dstAttrs.setNamedItemNS(dstAttr);
      }
    }
  }
  return dstAttrs;
}
function sortAttributes(a, b) {
  if (a.name < b.name)
    return -1;
  if (a.name > b.name)
    return 1;
  return 0;
}
class MockAttr {
  constructor(attrName, attrValue, namespaceURI = null) {
    this._name = attrName;
    this._value = String(attrValue);
    this._namespaceURI = namespaceURI;
  }
  get name() {
    return this._name;
  }
  set name(value) {
    this._name = value;
  }
  get value() {
    return this._value;
  }
  set value(value) {
    this._value = String(value);
  }
  get nodeName() {
    return this._name;
  }
  set nodeName(value) {
    this._name = value;
  }
  get nodeValue() {
    return this._value;
  }
  set nodeValue(value) {
    this._value = String(value);
  }
  get namespaceURI() {
    return this._namespaceURI;
  }
  set namespaceURI(namespaceURI) {
    this._namespaceURI = namespaceURI;
  }
}

class MockCustomElementRegistry {
  constructor(win) {
    this.win = win;
  }
  define(tagName, cstr, options) {
    if (tagName.toLowerCase() !== tagName) {
      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': "${tagName}" is not a valid custom element name`);
    }
    if (this.__registry == null) {
      this.__registry = new Map();
    }
    this.__registry.set(tagName, { cstr, options });
    if (this.__whenDefined != null) {
      const whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns != null) {
        whenDefinedResolveFns.forEach(whenDefinedResolveFn => {
          whenDefinedResolveFn();
        });
        whenDefinedResolveFns.length = 0;
        this.__whenDefined.delete(tagName);
      }
    }
    const doc = this.win.document;
    if (doc != null) {
      const hosts = doc.querySelectorAll(tagName);
      hosts.forEach(host => {
        if (upgradedElements.has(host) === false) {
          tempDisableCallbacks.add(doc);
          const upgradedCmp = createCustomElement(this, doc, tagName);
          for (let i = 0; i < host.childNodes.length; i++) {
            const childNode = host.childNodes[i];
            childNode.remove();
            upgradedCmp.appendChild(childNode);
          }
          tempDisableCallbacks.delete(doc);
          if (proxyElements.has(host)) {
            proxyElements.set(host, upgradedCmp);
          }
        }
        fireConnectedCallback(host);
      });
    }
  }
  get(tagName) {
    if (this.__registry != null) {
      const def = this.__registry.get(tagName.toLowerCase());
      if (def != null) {
        return def.cstr;
      }
    }
    return undefined;
  }
  upgrade(_rootNode) {
    //
  }
  clear() {
    if (this.__registry != null) {
      this.__registry.clear();
    }
    if (this.__whenDefined != null) {
      this.__whenDefined.clear();
    }
  }
  whenDefined(tagName) {
    tagName = tagName.toLowerCase();
    if (this.__registry != null && this.__registry.has(tagName) === true) {
      return Promise.resolve();
    }
    return new Promise(resolve => {
      if (this.__whenDefined == null) {
        this.__whenDefined = new Map();
      }
      let whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns == null) {
        whenDefinedResolveFns = [];
        this.__whenDefined.set(tagName, whenDefinedResolveFns);
      }
      whenDefinedResolveFns.push(resolve);
    });
  }
}
function createCustomElement(customElements, ownerDocument, tagName) {
  const Cstr = customElements.get(tagName);
  if (Cstr != null) {
    const cmp = new Cstr(ownerDocument);
    cmp.nodeName = tagName.toUpperCase();
    upgradedElements.add(cmp);
    return cmp;
  }
  const host = new Proxy({}, {
    get(obj, prop) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        return elm[prop];
      }
      return obj[prop];
    },
    set(obj, prop, val) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        elm[prop] = val;
      }
      else {
        obj[prop] = val;
      }
      return true;
    },
    has(obj, prop) {
      const elm = proxyElements.get(host);
      if (prop in elm) {
        return true;
      }
      if (prop in obj) {
        return true;
      }
      return false;
    },
  });
  const elm = new MockHTMLElement(ownerDocument, tagName);
  proxyElements.set(host, elm);
  return host;
}
const proxyElements = new WeakMap();
const upgradedElements = new WeakSet();
function connectNode(ownerDocument, node) {
  node.ownerDocument = ownerDocument;
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (ownerDocument != null && node.nodeName.includes('-')) {
      const win = ownerDocument.defaultView;
      if (win != null && typeof node.connectedCallback === 'function' && node.isConnected) {
        fireConnectedCallback(node);
      }
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null) {
        shadowRoot.childNodes.forEach(childNode => {
          connectNode(ownerDocument, childNode);
        });
      }
    }
    node.childNodes.forEach(childNode => {
      connectNode(ownerDocument, childNode);
    });
  }
  else {
    node.childNodes.forEach(childNode => {
      childNode.ownerDocument = ownerDocument;
    });
  }
}
function fireConnectedCallback(node) {
  if (typeof node.connectedCallback === 'function') {
    if (tempDisableCallbacks.has(node.ownerDocument) === false) {
      try {
        node.connectedCallback();
      }
      catch (e) {
        console.error(e);
      }
    }
  }
}
function disconnectNode(node) {
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (node.nodeName.includes('-') === true && typeof node.disconnectedCallback === 'function') {
      if (tempDisableCallbacks.has(node.ownerDocument) === false) {
        try {
          node.disconnectedCallback();
        }
        catch (e) {
          console.error(e);
        }
      }
    }
    node.childNodes.forEach(disconnectNode);
  }
}
function attributeChanged(node, attrName, oldValue, newValue) {
  attrName = attrName.toLowerCase();
  const observedAttributes = node.constructor.observedAttributes;
  if (Array.isArray(observedAttributes) === true && observedAttributes.some(obs => obs.toLowerCase() === attrName) === true) {
    try {
      node.attributeChangedCallback(attrName, oldValue, newValue);
    }
    catch (e) {
      console.error(e);
    }
  }
}
function checkAttributeChanged(node) {
  return node.nodeName.includes('-') === true && typeof node.attributeChangedCallback === 'function';
}
const tempDisableCallbacks = new Set();

function dataset(elm) {
  const ds = {};
  const attributes = elm.attributes;
  const attrLen = attributes.length;
  for (let i = 0; i < attrLen; i++) {
    const attr = attributes.item(i);
    const nodeName = attr.nodeName;
    if (nodeName.startsWith('data-')) {
      ds[dashToPascalCase(nodeName)] = attr.nodeValue;
    }
  }
  return new Proxy(ds, {
    get(_obj, camelCaseProp) {
      return ds[camelCaseProp];
    },
    set(_obj, camelCaseProp, value) {
      const dataAttr = toDataAttribute(camelCaseProp);
      elm.setAttribute(dataAttr, value);
      return true;
    },
  });
}
function toDataAttribute(str) {
  return ('data-' +
    String(str)
      .replace(/([A-Z0-9])/g, g => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase());
}
function dashToPascalCase(str) {
  str = String(str).substr(5);
  return str
    .split('-')
    .map((segment, index) => {
    if (index === 0) {
      return segment.charAt(0).toLowerCase() + segment.slice(1);
    }
    return segment.charAt(0).toUpperCase() + segment.slice(1);
  })
    .join('');
}

const Sizzle = (function() {

const window = {
  document: {
  createElement() {
    return {};
  },
  nodeType: 9,
  documentElement: {
    nodeType: 1,
    nodeName: 'HTML'
  }
  }
};

const module = { exports: {} };

/*! Sizzle v2.3.5 | (c) JS Foundation and other contributors | js.foundation */
!function(e){var t,n,r,i,o,u,l,a,c,s,d,f,p,h,g,m,y,v,w,b="sizzle"+1*new Date,N=e.document,C=0,x=0,E=ae(),A=ae(),S=ae(),D=ae(),T=function(e,t){return e===t&&(d=!0),0},L={}.hasOwnProperty,q=[],I=q.pop,B=q.push,R=q.push,$=q.slice,k=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return -1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",P="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",z="\\["+M+"*("+P+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+P+"))|)"+M+"*\\]",F=":("+P+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+z+")*)|.*)\\)|)",O=new RegExp(M+"+","g"),j=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),G=new RegExp("^"+M+"*,"+M+"*"),U=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),X=new RegExp(F),J=new RegExp("^"+P+"$"),K={ID:new RegExp("^#("+P+")"),CLASS:new RegExp("^\\.("+P+")"),TAG:new RegExp("^("+P+"|[*])"),ATTR:new RegExp("^"+z),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,W=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){f();},ue=ve(function(e){return !0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{R.apply(q=$.call(N.childNodes),N.childNodes),q[N.childNodes.length].nodeType;}catch(e){R={apply:q.length?function(e,t){B.apply(e,$.call(t));}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1;}};}function le(e,t,r,i){var o,l,c,s,d,h,y,v=t&&t.ownerDocument,N=t?t.nodeType:9;if(r=r||[],"string"!=typeof e||!e||1!==N&&9!==N&&11!==N)return r;if(!i&&(f(t),t=t||p,g)){if(11!==N&&(d=_.exec(e)))if(o=d[1]){if(9===N){if(!(c=t.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(v&&(c=v.getElementById(o))&&w(t,c)&&c.id===o)return r.push(c),r}else {if(d[2])return R.apply(r,t.getElementsByTagName(e)),r;if((o=d[3])&&n.getElementsByClassName&&t.getElementsByClassName)return R.apply(r,t.getElementsByClassName(o)),r}if(n.qsa&&!D[e+" "]&&(!m||!m.test(e))&&(1!==N||"object"!==t.nodeName.toLowerCase())){if(y=e,v=t,1===N&&(V.test(e)||U.test(e))){(v=ee.test(e)&&ge(t.parentNode)||t)===t&&n.scope||((s=t.getAttribute("id"))?s=s.replace(re,ie):t.setAttribute("id",s=b)),l=(h=u(e)).length;while(l--)h[l]=(s?"#"+s:":scope")+" "+ye(h[l]);y=h.join(",");}try{return R.apply(r,v.querySelectorAll(y)),r}catch(t){D(e,!0);}finally{s===b&&t.removeAttribute("id");}}}return a(e.replace(j,"$1"),t,r,i)}function ae(){var e=[];function t(n,i){return e.push(n+" ")>r.cacheLength&&delete t[e.shift()],t[n+" "]=i}return t}function ce(e){return e[b]=!0,e}function se(e){var t=p.createElement("fieldset");try{return !!e(t)}catch(e){return !1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null;}}function de(e,t){var n=e.split("|"),i=n.length;while(i--)r.attrHandle[n[i]]=t;}function fe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return -1;return e?1:-1}function pe(e){return function(t){return "form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ue(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function he(e){return ce(function(t){return t=+t,ce(function(n,r){var i,o=e([],n.length,t),u=o.length;while(u--)n[i=o[u]]&&(n[i]=!(r[i]=n[i]));})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}n=le.support={},o=le.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return !Q.test(t||n&&n.nodeName||"HTML")},f=le.setDocument=function(e){var t,i,u=e?e.ownerDocument||e:N;return u!=p&&9===u.nodeType&&u.documentElement?(p=u,h=p.documentElement,g=!o(p),N!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",oe,!1):i.attachEvent&&i.attachEvent("onunload",oe)),n.scope=se(function(e){return h.appendChild(e).appendChild(p.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),n.attributes=se(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=se(function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=Z.test(p.getElementsByClassName),n.getById=se(function(e){return h.appendChild(e).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),n.getById?(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return [o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return [o]}return []}}),r.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},y=[],m=[],(n.qsa=Z.test(p.querySelectorAll))&&(se(function(e){var t;h.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+b+"-]").length||m.push("~="),(t=p.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]");}),se(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:");})),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&se(function(e){n.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),y.push("!=",F);}),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),t=Z.test(h.compareDocumentPosition),w=t||Z.test(h.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return !0;return !1},T=t?function(e,t){if(e===t)return d=!0,0;var r=!e.compareDocumentPosition-!t.compareDocumentPosition;return r||(1&(r=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===r?e==p||e.ownerDocument==N&&w(N,e)?-1:t==p||t.ownerDocument==N&&w(N,t)?1:s?k(s,e)-k(s,t):0:4&r?-1:1)}:function(e,t){if(e===t)return d=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,u=[e],l=[t];if(!i||!o)return e==p?-1:t==p?1:i?-1:o?1:s?k(s,e)-k(s,t):0;if(i===o)return fe(e,t);n=e;while(n=n.parentNode)u.unshift(n);n=t;while(n=n.parentNode)l.unshift(n);while(u[r]===l[r])r++;return r?fe(u[r],l[r]):u[r]==N?-1:l[r]==N?1:0},p):p},le.matches=function(e,t){return le(e,null,null,t)},le.matchesSelector=function(e,t){if(f(e),n.matchesSelector&&g&&!D[t+" "]&&(!y||!y.test(t))&&(!m||!m.test(t)))try{var r=v.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){D(t,!0);}return le(t,p,null,[e]).length>0},le.contains=function(e,t){return (e.ownerDocument||e)!=p&&f(e),w(e,t)},le.attr=function(e,t){(e.ownerDocument||e)!=p&&f(e);var i=r.attrHandle[t.toLowerCase()],o=i&&L.call(r.attrHandle,t.toLowerCase())?i(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},le.escape=function(e){return (e+"").replace(re,ie)},le.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},le.uniqueSort=function(e){var t,r=[],i=0,o=0;if(d=!n.detectDuplicates,s=!n.sortStable&&e.slice(0),e.sort(T),d){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1);}return s=null,e},i=le.getText=function(e){var t,n="",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e);}else if(3===o||4===o)return e.nodeValue}else while(t=e[r++])n+=i(t);return n},(r=le.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||le.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&le.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=u(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return "*"===e?function(){return !0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&E(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=le.attr(r,e);return null==i?"!="===t:!t||(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i.replace(O," ")+" ").indexOf(n)>-1:"|="===t&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),u="last"!==e.slice(-4),l="of-type"===t;return 1===r&&0===i?function(e){return !!e.parentNode}:function(t,n,a){var c,s,d,f,p,h,g=o!==u?"nextSibling":"previousSibling",m=t.parentNode,y=l&&t.nodeName.toLowerCase(),v=!a&&!l,w=!1;if(m){if(o){while(g){f=t;while(f=f[g])if(l?f.nodeName.toLowerCase()===y:1===f.nodeType)return !1;h=g="only"===e&&!h&&"nextSibling";}return !0}if(h=[u?m.firstChild:m.lastChild],u&&v){w=(p=(c=(s=(d=(f=m)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1])&&c[2],f=p&&m.childNodes[p];while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if(1===f.nodeType&&++w&&f===t){s[e]=[C,p,w];break}}else if(v&&(w=p=(c=(s=(d=(f=t)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1]),!1===w)while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if((l?f.nodeName.toLowerCase()===y:1===f.nodeType)&&++w&&(v&&((s=(d=f[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]=[C,w]),f===t))break;return (w-=i)===r||w%r==0&&w/r>=0}}},PSEUDO:function(e,t){var n,i=r.pseudos[e]||r.setFilters[e.toLowerCase()]||le.error("unsupported pseudo: "+e);return i[b]?i(t):i.length>1?(n=[e,e,"",t],r.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,n){var r,o=i(e,t),u=o.length;while(u--)e[r=k(e,o[u])]=!(n[r]=o[u]);}):function(e){return i(e,0,n)}):i}},pseudos:{not:ce(function(e){var t=[],n=[],r=l(e.replace(j,"$1"));return r[b]?ce(function(e,t,n,i){var o,u=r(e,null,i,[]),l=e.length;while(l--)(o=u[l])&&(e[l]=!(t[l]=o));}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:ce(function(e){return function(t){return le(e,t).length>0}}),contains:ce(function(e){return e=e.replace(te,ne),function(t){return (t.textContent||i(t)).indexOf(e)>-1}}),lang:ce(function(e){return J.test(e||"")||le.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return (n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return !1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return !1;return !0},parent:function(e){return !r.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return W.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return "input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:he(function(){return [0]}),last:he(function(e,t){return [t-1]}),eq:he(function(e,t,n){return [n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var r=n<0?n+t:n>t?t:n;--r>=0;)e.push(r);return e}),gt:he(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=r.pseudos.eq;for(t in {radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[t]=function(e){return function(t){return "input"===t.nodeName.toLowerCase()&&t.type===e}}(t);for(t in {submit:!0,reset:!0})r.pseudos[t]=function(e){return function(t){var n=t.nodeName.toLowerCase();return ("input"===n||"button"===n)&&t.type===e}}(t);function me(){}me.prototype=r.filters=r.pseudos,r.setFilters=new me,u=le.tokenize=function(e,t){var n,i,o,u,l,a,c,s=A[e+" "];if(s)return t?0:s.slice(0);l=e,a=[],c=r.preFilter;while(l){n&&!(i=G.exec(l))||(i&&(l=l.slice(i[0].length)||l),a.push(o=[])),n=!1,(i=U.exec(l))&&(n=i.shift(),o.push({value:n,type:i[0].replace(j," ")}),l=l.slice(n.length));for(u in r.filter)!(i=K[u].exec(l))||c[u]&&!(i=c[u](i))||(n=i.shift(),o.push({value:n,type:u,matches:i}),l=l.slice(n.length));if(!n)break}return t?l.length:l?le.error(e):A(e,a).slice(0)};function ye(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function ve(e,t,n){var r=t.dir,i=t.next,o=i||r,u=n&&"parentNode"===o,l=x++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||u)return e(t,n,i);return !1}:function(t,n,a){var c,s,d,f=[C,l];if(a){while(t=t[r])if((1===t.nodeType||u)&&e(t,n,a))return !0}else while(t=t[r])if(1===t.nodeType||u)if(d=t[b]||(t[b]={}),s=d[t.uniqueID]||(d[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[r]||t;else {if((c=s[o])&&c[0]===C&&c[1]===l)return f[2]=c[2];if(s[o]=f,f[2]=e(t,n,a))return !0}return !1}}function we(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return !1;return !0}:e[0]}function be(e,t,n){for(var r=0,i=t.length;r<i;r++)le(e,t[r],n);return n}function Ne(e,t,n,r,i){for(var o,u=[],l=0,a=e.length,c=null!=t;l<a;l++)(o=e[l])&&(n&&!n(o,r,i)||(u.push(o),c&&t.push(l)));return u}function Ce(e,t,n,r,i,o){return r&&!r[b]&&(r=Ce(r)),i&&!i[b]&&(i=Ce(i,o)),ce(function(o,u,l,a){var c,s,d,f=[],p=[],h=u.length,g=o||be(t||"*",l.nodeType?[l]:l,[]),m=!e||!o&&t?g:Ne(g,f,e,l,a),y=n?i||(o?e:h||r)?[]:u:m;if(n&&n(m,y,l,a),r){c=Ne(y,p),r(c,[],l,a),s=c.length;while(s--)(d=c[s])&&(y[p[s]]=!(m[p[s]]=d));}if(o){if(i||e){if(i){c=[],s=y.length;while(s--)(d=y[s])&&c.push(m[s]=d);i(null,y=[],c,a);}s=y.length;while(s--)(d=y[s])&&(c=i?k(o,d):f[s])>-1&&(o[c]=!(u[c]=d));}}else y=Ne(y===u?y.splice(h,y.length):y),i?i(null,u,y,a):R.apply(u,y);})}function xe(e){for(var t,n,i,o=e.length,u=r.relative[e[0].type],l=u||r.relative[" "],a=u?1:0,s=ve(function(e){return e===t},l,!0),d=ve(function(e){return k(t,e)>-1},l,!0),f=[function(e,n,r){var i=!u&&(r||n!==c)||((t=n).nodeType?s(e,n,r):d(e,n,r));return t=null,i}];a<o;a++)if(n=r.relative[e[a].type])f=[ve(we(f),n)];else {if((n=r.filter[e[a].type].apply(null,e[a].matches))[b]){for(i=++a;i<o;i++)if(r.relative[e[i].type])break;return Ce(a>1&&we(f),a>1&&ye(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(j,"$1"),n,a<i&&xe(e.slice(a,i)),i<o&&xe(e=e.slice(i)),i<o&&ye(e))}f.push(n);}return we(f)}function Ee(e,t){var n=t.length>0,i=e.length>0,o=function(o,u,l,a,s){var d,h,m,y=0,v="0",w=o&&[],b=[],N=c,x=o||i&&r.find.TAG("*",s),E=C+=null==N?1:Math.random()||.1,A=x.length;for(s&&(c=u==p||u||s);v!==A&&null!=(d=x[v]);v++){if(i&&d){h=0,u||d.ownerDocument==p||(f(d),l=!g);while(m=e[h++])if(m(d,u||p,l)){a.push(d);break}s&&(C=E);}n&&((d=!m&&d)&&y--,o&&w.push(d));}if(y+=v,n&&v!==y){h=0;while(m=t[h++])m(w,b,u,l);if(o){if(y>0)while(v--)w[v]||b[v]||(b[v]=I.call(a));b=Ne(b);}R.apply(a,b),s&&!o&&b.length>0&&y+t.length>1&&le.uniqueSort(a);}return s&&(C=E,c=N),w};return n?ce(o):o}l=le.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=u(e)),n=t.length;while(n--)(o=xe(t[n]))[b]?r.push(o):i.push(o);(o=S(e,Ee(i,r))).selector=e;}return o},a=le.select=function(e,t,n,i){var o,a,c,s,d,f="function"==typeof e&&e,p=!i&&u(e=f.selector||e);if(n=n||[],1===p.length){if((a=p[0]=p[0].slice(0)).length>2&&"ID"===(c=a[0]).type&&9===t.nodeType&&g&&r.relative[a[1].type]){if(!(t=(r.find.ID(c.matches[0].replace(te,ne),t)||[])[0]))return n;f&&(t=t.parentNode),e=e.slice(a.shift().value.length);}o=K.needsContext.test(e)?0:a.length;while(o--){if(c=a[o],r.relative[s=c.type])break;if((d=r.find[s])&&(i=d(c.matches[0].replace(te,ne),ee.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(o,1),!(e=i.length&&ye(a)))return R.apply(n,i),n;break}}}return (f||l(e,p))(i,t,!g,n,!t||ee.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split("").sort(T).join("")===b,n.detectDuplicates=!!d,f(),n.sortDetached=se(function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))}),se(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),n.attributes&&se(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),se(function(e){return null==e.getAttribute("disabled")})||de(H,function(e,t,n){var r;if(!n)return !0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null});var Ae=e.Sizzle;le.noConflict=function(){return e.Sizzle===le&&(e.Sizzle=Ae),le},"function"==typeof define&&define.amd?define(function(){return le}):"undefined"!=typeof module&&module.exports?module.exports=le:e.Sizzle=le;}(window);


return module.exports;
})();

function matches(selector, elm) {
  const r = Sizzle.matches(selector, [elm]);
  return r.length > 0;
}
function selectOne(selector, elm) {
  const r = Sizzle(selector, elm);
  return r[0] || null;
}
function selectAll(selector, elm) {
  return Sizzle(selector, elm);
}

class MockClassList {
  constructor(elm) {
    this.elm = elm;
  }
  add(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach(className => {
      className = String(className);
      validateClass(className);
      if (clsNames.includes(className) === false) {
        clsNames.push(className);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.join(' '));
    }
  }
  remove(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach(className => {
      className = String(className);
      validateClass(className);
      const index = clsNames.indexOf(className);
      if (index > -1) {
        clsNames.splice(index, 1);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.filter(c => c.length > 0).join(' '));
    }
  }
  contains(className) {
    className = String(className);
    return getItems(this.elm).includes(className);
  }
  toggle(className) {
    className = String(className);
    if (this.contains(className) === true) {
      this.remove(className);
    }
    else {
      this.add(className);
    }
  }
  get length() {
    return getItems(this.elm).length;
  }
  item(index) {
    return getItems(this.elm)[index];
  }
  toString() {
    return getItems(this.elm).join(' ');
  }
}
function validateClass(className) {
  if (className === '') {
    throw new Error('The token provided must not be empty.');
  }
  if (/\s/.test(className)) {
    throw new Error(`The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`);
  }
}
function getItems(elm) {
  const className = elm.getAttribute('class');
  if (typeof className === 'string' && className.length > 0) {
    return className
      .trim()
      .split(' ')
      .filter(c => c.length > 0);
  }
  return [];
}

class MockCSSStyleDeclaration {
  constructor() {
    this._styles = new Map();
  }
  setProperty(prop, value) {
    prop = jsCaseToCssCase(prop);
    if (value == null || value === '') {
      this._styles.delete(prop);
    }
    else {
      this._styles.set(prop, String(value));
    }
  }
  getPropertyValue(prop) {
    prop = jsCaseToCssCase(prop);
    return String(this._styles.get(prop) || '');
  }
  removeProperty(prop) {
    prop = jsCaseToCssCase(prop);
    this._styles.delete(prop);
  }
  get length() {
    return this._styles.size;
  }
  get cssText() {
    const cssText = [];
    this._styles.forEach((value, prop) => {
      cssText.push(`${prop}: ${value};`);
    });
    return cssText.join(' ').trim();
  }
  set cssText(cssText) {
    if (cssText == null || cssText === '') {
      this._styles.clear();
      return;
    }
    cssText.split(';').forEach(rule => {
      rule = rule.trim();
      if (rule.length > 0) {
        const splt = rule.split(':');
        if (splt.length > 1) {
          const prop = splt[0].trim();
          const value = splt[1].trim();
          if (prop !== '' && value !== '') {
            this._styles.set(jsCaseToCssCase(prop), value);
          }
        }
      }
    });
  }
}
function createCSSStyleDeclaration() {
  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);
}
const cssProxyHandler = {
  get(cssStyle, prop) {
    if (prop in cssStyle) {
      return cssStyle[prop];
    }
    prop = cssCaseToJsCase(prop);
    return cssStyle.getPropertyValue(prop);
  },
  set(cssStyle, prop, value) {
    if (prop in cssStyle) {
      cssStyle[prop] = value;
    }
    else {
      cssStyle.setProperty(prop, value);
    }
    return true;
  },
};
function cssCaseToJsCase(str) {
  // font-size to fontSize
  if (str.length > 1 && str.includes('-') === true) {
    str = str
      .toLowerCase()
      .split('-')
      .map(segment => segment.charAt(0).toUpperCase() + segment.slice(1))
      .join('');
    str = str.substr(0, 1).toLowerCase() + str.substr(1);
  }
  return str;
}
function jsCaseToCssCase(str) {
  // fontSize to font-size
  if (str.length > 1 && str.includes('-') === false && /[A-Z]/.test(str) === true) {
    str = str
      .replace(/([A-Z])/g, g => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase();
  }
  return str;
}

class MockEvent {
  constructor(type, eventInitDict) {
    this.bubbles = false;
    this.cancelBubble = false;
    this.cancelable = false;
    this.composed = false;
    this.currentTarget = null;
    this.defaultPrevented = false;
    this.srcElement = null;
    this.target = null;
    if (typeof type !== 'string') {
      throw new Error(`Event type required`);
    }
    this.type = type;
    this.timeStamp = Date.now();
    if (eventInitDict != null) {
      Object.assign(this, eventInitDict);
    }
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
  stopImmediatePropagation() {
    this.cancelBubble = true;
  }
}
class MockCustomEvent extends MockEvent {
  constructor(type, customEventInitDic) {
    super(type);
    this.detail = null;
    if (customEventInitDic != null) {
      Object.assign(this, customEventInitDic);
    }
  }
}
class MockKeyboardEvent extends MockEvent {
  constructor(type, keyboardEventInitDic) {
    super(type);
    this.code = '';
    this.key = '';
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.location = 0;
    this.repeat = false;
    if (keyboardEventInitDic != null) {
      Object.assign(this, keyboardEventInitDic);
    }
  }
}
class MockMouseEvent extends MockEvent {
  constructor(type, mouseEventInitDic) {
    super(type);
    this.screenX = 0;
    this.screenY = 0;
    this.clientX = 0;
    this.clientY = 0;
    this.ctrlKey = false;
    this.shiftKey = false;
    this.altKey = false;
    this.metaKey = false;
    this.button = 0;
    this.buttons = 0;
    this.relatedTarget = null;
    if (mouseEventInitDic != null) {
      Object.assign(this, mouseEventInitDic);
    }
  }
}
class MockEventListener {
  constructor(type, handler) {
    this.type = type;
    this.handler = handler;
  }
}
function addEventListener(elm, type, handler) {
  const target = elm;
  if (target.__listeners == null) {
    target.__listeners = [];
  }
  target.__listeners.push(new MockEventListener(type, handler));
}
function removeEventListener(elm, type, handler) {
  const target = elm;
  if (target != null && Array.isArray(target.__listeners) === true) {
    const elmListener = target.__listeners.find(e => e.type === type && e.handler === handler);
    if (elmListener != null) {
      const index = target.__listeners.indexOf(elmListener);
      target.__listeners.splice(index, 1);
    }
  }
}
function resetEventListeners(target) {
  if (target != null && target.__listeners != null) {
    target.__listeners = null;
  }
}
function triggerEventListener(elm, ev) {
  if (elm == null || ev.cancelBubble === true) {
    return;
  }
  const target = elm;
  ev.currentTarget = elm;
  if (Array.isArray(target.__listeners) === true) {
    const listeners = target.__listeners.filter(e => e.type === ev.type);
    listeners.forEach(listener => {
      try {
        listener.handler.call(target, ev);
      }
      catch (err) {
        console.error(err);
      }
    });
  }
  if (ev.bubbles === false) {
    return;
  }
  if (elm.nodeName === "#document" /* DOCUMENT_NODE */) {
    triggerEventListener(elm.defaultView, ev);
  }
  else {
    triggerEventListener(elm.parentElement, ev);
  }
}
function dispatchEvent(currentTarget, ev) {
  ev.target = currentTarget;
  triggerEventListener(currentTarget, ev);
  return true;
}

function serializeNodeToHtml(elm, opts = {}) {
  const output = {
    currentLineWidth: 0,
    indent: 0,
    isWithinBody: false,
    text: [],
  };
  if (opts.prettyHtml) {
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 2;
    }
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = true;
    }
    opts.approximateLineWidth = -1;
  }
  else {
    opts.prettyHtml = false;
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = false;
    }
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 0;
    }
  }
  if (typeof opts.approximateLineWidth !== 'number') {
    opts.approximateLineWidth = -1;
  }
  if (typeof opts.removeEmptyAttributes !== 'boolean') {
    opts.removeEmptyAttributes = true;
  }
  if (typeof opts.removeAttributeQuotes !== 'boolean') {
    opts.removeAttributeQuotes = false;
  }
  if (typeof opts.removeBooleanAttributeQuotes !== 'boolean') {
    opts.removeBooleanAttributeQuotes = false;
  }
  if (typeof opts.removeHtmlComments !== 'boolean') {
    opts.removeHtmlComments = false;
  }
  if (typeof opts.serializeShadowRoot !== 'boolean') {
    opts.serializeShadowRoot = false;
  }
  if (opts.outerHtml) {
    serializeToHtml(elm, opts, output, false);
  }
  else {
    for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
      serializeToHtml(elm.childNodes[i], opts, output, false);
    }
  }
  if (output.text[0] === '\n') {
    output.text.shift();
  }
  if (output.text[output.text.length - 1] === '\n') {
    output.text.pop();
  }
  return output.text.join('');
}
function serializeToHtml(node, opts, output, isShadowRoot) {
  if (node.nodeType === 1 /* ELEMENT_NODE */ || isShadowRoot) {
    const tagName = isShadowRoot ? 'mock:shadow-root' : getTagName(node);
    if (tagName === 'body') {
      output.isWithinBody = true;
    }
    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);
    if (ignoreTag === false) {
      if (opts.newLines) {
        output.text.push('\n');
        output.currentLineWidth = 0;
      }
      if (opts.indentSpaces > 0) {
        for (let i = 0; i < output.indent; i++) {
          output.text.push(' ');
        }
        output.currentLineWidth += output.indent;
      }
      output.text.push('<' + tagName);
      output.currentLineWidth += tagName.length + 1;
      const attrsLength = node.attributes.length;
      const attributes = opts.prettyHtml && attrsLength > 1 ? cloneAttributes(node.attributes, true) : node.attributes;
      for (let i = 0; i < attrsLength; i++) {
        const attr = attributes.item(i);
        const attrName = attr.name;
        if (attrName === 'style') {
          continue;
        }
        let attrValue = attr.value;
        if (opts.removeEmptyAttributes && attrValue === '' && REMOVE_EMPTY_ATTR.has(attrName)) {
          continue;
        }
        const attrNamespaceURI = attr.namespaceURI;
        if (attrNamespaceURI == null) {
          output.currentLineWidth += attrName.length + 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            output.text.push('\n' + attrName);
            output.currentLineWidth = 0;
          }
          else {
            output.text.push(' ' + attrName);
          }
        }
        else if (attrNamespaceURI === 'http://www.w3.org/XML/1998/namespace') {
          output.text.push(' xml:' + attrName);
          output.currentLineWidth += attrName.length + 5;
        }
        else if (attrNamespaceURI === 'http://www.w3.org/2000/xmlns/') {
          if (attrName !== 'xmlns') {
            output.text.push(' xmlns:' + attrName);
            output.currentLineWidth += attrName.length + 7;
          }
          else {
            output.text.push(' ' + attrName);
            output.currentLineWidth += attrName.length + 1;
          }
        }
        else if (attrNamespaceURI === XLINK_NS) {
          output.text.push(' xlink:' + attrName);
          output.currentLineWidth += attrName.length + 7;
        }
        else {
          output.text.push(' ' + attrNamespaceURI + ':' + attrName);
          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;
        }
        if (opts.prettyHtml && attrName === 'class') {
          attrValue = attr.value = attrValue
            .split(' ')
            .filter(t => t !== '')
            .sort()
            .join(' ')
            .trim();
        }
        if (attrValue === '') {
          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {
            continue;
          }
          if (opts.removeEmptyAttributes && attrName.startsWith('data-')) {
            continue;
          }
        }
        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {
          output.text.push('=' + escapeString(attrValue, true));
          output.currentLineWidth += attrValue.length + 1;
        }
        else {
          output.text.push('="' + escapeString(attrValue, true) + '"');
          output.currentLineWidth += attrValue.length + 3;
        }
      }
      if (node.hasAttribute('style')) {
        const cssText = node.style.cssText;
        if (opts.approximateLineWidth > 0 && output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {
          output.text.push(`\nstyle="${cssText}">`);
          output.currentLineWidth = 0;
        }
        else {
          output.text.push(` style="${cssText}">`);
          output.currentLineWidth += cssText.length + 10;
        }
      }
      else {
        output.text.push('>');
        output.currentLineWidth += 1;
      }
    }
    if (EMPTY_ELEMENTS.has(tagName) === false) {
      if (opts.serializeShadowRoot && node.shadowRoot != null) {
        output.indent = output.indent + opts.indentSpaces;
        serializeToHtml(node.shadowRoot, opts, output, true);
        output.indent = output.indent - opts.indentSpaces;
        if (opts.newLines &&
          (node.childNodes.length === 0 || (node.childNodes.length === 1 && node.childNodes[0].nodeType === 3 /* TEXT_NODE */ && node.childNodes[0].nodeValue.trim() === ''))) {
          output.text.push('\n');
          output.currentLineWidth = 0;
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
      }
      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {
        const childNodes = tagName === 'template' ? node.content.childNodes : node.childNodes;
        const childNodeLength = childNodes.length;
        if (childNodeLength > 0) {
          if (childNodeLength === 1 && childNodes[0].nodeType === 3 /* TEXT_NODE */ && (typeof childNodes[0].nodeValue !== 'string' || childNodes[0].nodeValue.trim() === '')) ;
          else {
            if (opts.indentSpaces > 0 && ignoreTag === false) {
              output.indent = output.indent + opts.indentSpaces;
            }
            for (let i = 0; i < childNodeLength; i++) {
              serializeToHtml(childNodes[i], opts, output, false);
            }
            if (ignoreTag === false) {
              if (opts.newLines) {
                output.text.push('\n');
                output.currentLineWidth = 0;
              }
              if (opts.indentSpaces > 0) {
                output.indent = output.indent - opts.indentSpaces;
                for (let i = 0; i < output.indent; i++) {
                  output.text.push(' ');
                }
                output.currentLineWidth += output.indent;
              }
            }
          }
        }
        if (ignoreTag === false) {
          output.text.push('</' + tagName + '>');
          output.currentLineWidth += tagName.length + 3;
        }
      }
    }
    if (opts.approximateLineWidth > 0 && STRUCTURE_ELEMENTS.has(tagName)) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (tagName === 'body') {
      output.isWithinBody = false;
    }
  }
  else if (node.nodeType === 3 /* TEXT_NODE */) {
    let textContent = node.nodeValue;
    if (typeof textContent === 'string') {
      const trimmedTextContent = textContent.trim();
      if (trimmedTextContent === '') {
        // this text node is whitespace only
        if (isWithinWhitespaceSensitive(node)) {
          // whitespace matters within this element
          // just add the exact text we were given
          output.text.push(textContent);
          output.currentLineWidth += textContent.length;
        }
        else if (opts.approximateLineWidth > 0 && !output.isWithinBody) ;
        else if (!opts.prettyHtml) {
          // this text node is only whitespace, and it's not
          // within a whitespace sensitive element like <pre> or <code>
          // so replace the entire white space with a single new line
          output.currentLineWidth += 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            // good enough for a new line
            // for perf these are all just estimates
            // we don't care to ensure exact line lengths
            output.text.push('\n');
            output.currentLineWidth = 0;
          }
          else {
            // let's keep it all on the same line yet
            output.text.push(' ');
          }
        }
      }
      else {
        // this text node has text content
        if (opts.newLines) {
          output.text.push('\n');
          output.currentLineWidth = 0;
        }
        if (opts.indentSpaces > 0) {
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
        let textContentLength = textContent.length;
        if (textContentLength > 0) {
          // this text node has text content
          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* ELEMENT_NODE */ ? node.parentNode.nodeName : null;
          if (NON_ESCAPABLE_CONTENT.has(parentTagName)) {
            // this text node cannot have its content escaped since it's going
            // into an element like <style> or <script>
            if (isWithinWhitespaceSensitive(node)) {
              output.text.push(textContent);
            }
            else {
              output.text.push(trimmedTextContent);
              textContentLength = trimmedTextContent.length;
            }
            output.currentLineWidth += textContentLength;
          }
          else {
            // this text node is going into a normal element and html can be escaped
            if (opts.prettyHtml) {
              // pretty print the text node
              output.text.push(escapeString(textContent.replace(/\s\s+/g, ' ').trim(), false));
              output.currentLineWidth += textContentLength;
            }
            else {
              // not pretty printing the text node
              if (isWithinWhitespaceSensitive(node)) {
                output.currentLineWidth += textContentLength;
              }
              else {
                // this element is not a whitespace sensitive one, like <pre> or <code> so
                // any whitespace at the start and end can be cleaned up to just be one space
                if (/\s/.test(textContent.charAt(0))) {
                  textContent = ' ' + textContent.trimLeft();
                }
                textContentLength = textContent.length;
                if (textContentLength > 1) {
                  if (/\s/.test(textContent.charAt(textContentLength - 1))) {
                    if (opts.approximateLineWidth > 0 && output.currentLineWidth + textContentLength > opts.approximateLineWidth) {
                      textContent = textContent.trimRight() + '\n';
                      output.currentLineWidth = 0;
                    }
                    else {
                      textContent = textContent.trimRight() + ' ';
                    }
                  }
                }
                output.currentLineWidth += textContentLength;
              }
              output.text.push(escapeString(textContent, false));
            }
          }
        }
      }
    }
  }
  else if (node.nodeType === 8 /* COMMENT_NODE */) {
    const nodeValue = node.nodeValue;
    if (opts.removeHtmlComments) {
      const isHydrateAnnotation = nodeValue.startsWith(CONTENT_REF_ID + '.') ||
        nodeValue.startsWith(ORG_LOCATION_ID + '.') ||
        nodeValue.startsWith(SLOT_NODE_ID + '.') ||
        nodeValue.startsWith(TEXT_NODE_ID + '.');
      if (!isHydrateAnnotation) {
        return;
      }
    }
    if (opts.newLines) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (opts.indentSpaces > 0) {
      for (let i = 0; i < output.indent; i++) {
        output.text.push(' ');
      }
      output.currentLineWidth += output.indent;
    }
    output.text.push('<!--' + nodeValue + '-->');
    output.currentLineWidth += nodeValue.length + 7;
  }
  else if (node.nodeType === 10 /* DOCUMENT_TYPE_NODE */) {
    output.text.push('<!doctype html>');
  }
}
const AMP_REGEX = /&/g;
const NBSP_REGEX = /\u00a0/g;
const DOUBLE_QUOTE_REGEX = /"/g;
const LT_REGEX = /</g;
const GT_REGEX = />/g;
const CAN_REMOVE_ATTR_QUOTES = /^[^ \t\n\f\r"'`=<>\/\\-]+$/;
function getTagName(element) {
  if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return element.nodeName.toLowerCase();
  }
  else {
    return element.nodeName;
  }
}
function escapeString(str, attrMode) {
  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');
  if (attrMode) {
    return str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
  }
  return str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');
}
function isWithinWhitespaceSensitive(node) {
  while (node != null) {
    if (WHITESPACE_SENSITIVE.has(node.nodeName)) {
      return true;
    }
    node = node.parentNode;
  }
  return false;
}
/*@__PURE__*/ const NON_ESCAPABLE_CONTENT = new Set(['STYLE', 'SCRIPT', 'IFRAME', 'NOSCRIPT', 'XMP', 'NOEMBED', 'NOFRAMES', 'PLAINTEXT']);
/*@__PURE__*/ const WHITESPACE_SENSITIVE = new Set(['CODE', 'OUTPUT', 'PLAINTEXT', 'PRE', 'TEMPLATE', 'TEXTAREA']);
/*@__PURE__*/ const EMPTY_ELEMENTS = new Set([
  'area',
  'base',
  'basefont',
  'bgsound',
  'br',
  'col',
  'embed',
  'frame',
  'hr',
  'img',
  'input',
  'keygen',
  'link',
  'meta',
  'param',
  'source',
  'trace',
  'wbr',
]);
/*@__PURE__*/ const REMOVE_EMPTY_ATTR = new Set(['class', 'dir', 'id', 'lang', 'name', 'title']);
/*@__PURE__*/ const BOOLEAN_ATTR = new Set([
  'allowfullscreen',
  'async',
  'autofocus',
  'autoplay',
  'checked',
  'compact',
  'controls',
  'declare',
  'default',
  'defaultchecked',
  'defaultmuted',
  'defaultselected',
  'defer',
  'disabled',
  'enabled',
  'formnovalidate',
  'hidden',
  'indeterminate',
  'inert',
  'ismap',
  'itemscope',
  'loop',
  'multiple',
  'muted',
  'nohref',
  'nomodule',
  'noresize',
  'noshade',
  'novalidate',
  'nowrap',
  'open',
  'pauseonexit',
  'readonly',
  'required',
  'reversed',
  'scoped',
  'seamless',
  'selected',
  'sortable',
  'truespeed',
  'typemustmatch',
  'visible',
]);
/*@__PURE__*/ const STRUCTURE_ELEMENTS = new Set(['html', 'body', 'head', 'iframe', 'meta', 'link', 'base', 'title', 'script', 'style']);

const parse5=/*@__PURE__*/function(e){const t=[65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];var n="�",s={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,RIGHT_SQUARE_BRACKET:93,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533},r={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]},i=function(e){return e>=55296&&e<=57343},T=function(e){return e>=56320&&e<=57343},o=function(e,t){return 1024*(e-55296)+9216+t},E=function(e){return 32!==e&&10!==e&&13!==e&&9!==e&&12!==e&&e>=1&&e<=31||e>=127&&e<=159},a=function(e){return e>=64976&&e<=65007||t.indexOf(e)>-1},_="control-character-in-input-stream",h="noncharacter-in-input-stream",A="surrogate-in-input-stream",c="non-void-html-element-start-tag-with-trailing-solidus",l="end-tag-with-attributes",m="end-tag-with-trailing-solidus",p="unexpected-solidus-in-tag",N="unexpected-null-character",u="unexpected-question-mark-instead-of-tag-name",O="invalid-first-character-of-tag-name",S="unexpected-equals-sign-before-attribute-name",C="missing-end-tag-name",d="unexpected-character-in-attribute-name",R="unknown-named-character-reference",I="missing-semicolon-after-character-reference",f="unexpected-character-after-doctype-system-identifier",M="unexpected-character-in-unquoted-attribute-value",L="eof-before-tag-name",D="eof-in-tag",k="missing-attribute-value",P="missing-whitespace-between-attributes",g="missing-whitespace-after-doctype-public-keyword",H="missing-whitespace-between-doctype-public-and-system-identifiers",U="missing-whitespace-after-doctype-system-keyword",F="missing-quote-before-doctype-public-identifier",B="missing-quote-before-doctype-system-identifier",G="missing-doctype-public-identifier",K="missing-doctype-system-identifier",b="abrupt-doctype-public-identifier",Y="abrupt-doctype-system-identifier",x="cdata-in-html-content",y="incorrectly-opened-comment",v="eof-in-script-html-comment-like-text",w="eof-in-doctype",Q="nested-comment",X="abrupt-closing-of-empty-comment",W="eof-in-comment",V="incorrectly-closed-comment",j="eof-in-cdata",z="absence-of-digits-in-numeric-character-reference",q="null-character-reference",J="surrogate-character-reference",Z="character-reference-outside-unicode-range",$="control-character-reference",ee="noncharacter-character-reference",te="missing-whitespace-before-doctype-name",ne="missing-doctype-name",se="invalid-character-sequence-after-doctype-name",re="duplicate-attribute",ie="non-conforming-doctype",Te="missing-doctype",oe="misplaced-doctype",Ee="end-tag-without-matching-open-element",ae="closing-of-element-with-open-child-elements",_e="disallowed-content-in-noscript-in-head",he="open-elements-left-after-eof",Ae="abandoned-head-element-child",ce="misplaced-start-tag-for-head-element",le="nested-noscript-in-head",me="eof-in-element-that-can-contain-only-text";const pe=s;var Ne=class{constructor(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536;}_err(){}_addGap(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos;}_processSurrogate(e){if(this.pos!==this.lastCharPos){const t=this.html.charCodeAt(this.pos+1);if(T(t))return this.pos++,this._addGap(),o(e,t)}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,pe.EOF;return this._err(A),e}dropParsedChunk(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[]);}write(e,t){this.html?this.html+=e:this.html=e,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=t;}insertHtmlAtCurrentPos(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1;}advance(){if(this.pos++,this.pos>this.lastCharPos)return this.endOfChunkHit=!this.lastChunkWritten,pe.EOF;let e=this.html.charCodeAt(this.pos);if(this.skipNextNewLine&&e===pe.LINE_FEED)return this.skipNextNewLine=!1,this._addGap(),this.advance();if(e===pe.CARRIAGE_RETURN)return this.skipNextNewLine=!0,pe.LINE_FEED;this.skipNextNewLine=!1,i(e)&&(e=this._processSurrogate(e));return e>31&&e<127||e===pe.LINE_FEED||e===pe.CARRIAGE_RETURN||e>159&&e<64976||this._checkForProblematicCharacters(e),e}_checkForProblematicCharacters(e){E(e)?this._err(_):a(e)&&this._err(h);}retreat(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--;}},ue=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);const Oe=s,Se=r,Ce={128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376},de="DATA_STATE";function Re(e){return e===Oe.SPACE||e===Oe.LINE_FEED||e===Oe.TABULATION||e===Oe.FORM_FEED}function Ie(e){return e>=Oe.DIGIT_0&&e<=Oe.DIGIT_9}function fe(e){return e>=Oe.LATIN_CAPITAL_A&&e<=Oe.LATIN_CAPITAL_Z}function Me(e){return e>=Oe.LATIN_SMALL_A&&e<=Oe.LATIN_SMALL_Z}function Le(e){return Me(e)||fe(e)}function De(e){return Le(e)||Ie(e)}function ke(e){return e>=Oe.LATIN_CAPITAL_A&&e<=Oe.LATIN_CAPITAL_F}function Pe(e){return e>=Oe.LATIN_SMALL_A&&e<=Oe.LATIN_SMALL_F}function ge(e){return e+32}function He(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(e>>>10&1023|55296)+String.fromCharCode(56320|1023&e))}function Ue(e){return String.fromCharCode(ge(e))}function Fe(e,t){const n=ue[++e];let s=++e,r=s+n-1;for(;s<=r;){const e=s+r>>>1,i=ue[e];if(i<t)s=e+1;else {if(!(i>t))return ue[e+n];r=e-1;}}return -1}class Be{constructor(){this.preprocessor=new Ne,this.tokenQueue=[],this.allowCDATA=!1,this.state=de,this.returnState="",this.charRefCode=-1,this.tempBuff=[],this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null;}_err(){}_errOnNextCodePoint(e){this._consume(),this._err(e),this._unconsume();}getNextToken(){for(;!this.tokenQueue.length&&this.active;){this.consumedAfterSnapshot=0;const e=this._consume();this._ensureHibernation()||this[this.state](e);}return this.tokenQueue.shift()}write(e,t){this.active=!0,this.preprocessor.write(e,t);}insertHtmlAtCurrentPos(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e);}_ensureHibernation(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:Be.HIBERNATION_TOKEN}),!0}return !1}_consume(){return this.consumedAfterSnapshot++,this.preprocessor.advance()}_unconsume(){this.consumedAfterSnapshot--,this.preprocessor.retreat();}_reconsumeInState(e){this.state=e,this._unconsume();}_consumeSequenceIfMatch(e,t,n){let s=0,r=!0;const i=e.length;let T=0,o=t,E=void 0;for(;T<i;T++){if(T>0&&(o=this._consume(),s++),o===Oe.EOF){r=!1;break}if(E=e[T],o!==E&&(n||o!==ge(E))){r=!1;break}}if(!r)for(;s--;)this._unconsume();return r}_isTempBufferEqualToScriptString(){if(this.tempBuff.length!==Se.SCRIPT_STRING.length)return !1;for(let e=0;e<this.tempBuff.length;e++)if(this.tempBuff[e]!==Se.SCRIPT_STRING[e])return !1;return !0}_createStartTagToken(){this.currentToken={type:Be.START_TAG_TOKEN,tagName:"",selfClosing:!1,ackSelfClosing:!1,attrs:[]};}_createEndTagToken(){this.currentToken={type:Be.END_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]};}_createCommentToken(){this.currentToken={type:Be.COMMENT_TOKEN,data:""};}_createDoctypeToken(e){this.currentToken={type:Be.DOCTYPE_TOKEN,name:e,forceQuirks:!1,publicId:null,systemId:null};}_createCharacterToken(e,t){this.currentCharacterToken={type:e,chars:t};}_createEOFToken(){this.currentToken={type:Be.EOF_TOKEN};}_createAttr(e){this.currentAttr={name:e,value:""};}_leaveAttrName(e){null===Be.getTokenAttr(this.currentToken,this.currentAttr.name)?this.currentToken.attrs.push(this.currentAttr):this._err(re),this.state=e;}_leaveAttrValue(e){this.state=e;}_emitCurrentToken(){this._emitCurrentCharacterToken();const e=this.currentToken;this.currentToken=null,e.type===Be.START_TAG_TOKEN?this.lastStartTagName=e.tagName:e.type===Be.END_TAG_TOKEN&&(e.attrs.length>0&&this._err(l),e.selfClosing&&this._err(m)),this.tokenQueue.push(e);}_emitCurrentCharacterToken(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null);}_emitEOFToken(){this._createEOFToken(),this._emitCurrentToken();}_appendCharToCurrentCharacterToken(e,t){this.currentCharacterToken&&this.currentCharacterToken.type!==e&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=t:this._createCharacterToken(e,t);}_emitCodePoint(e){let t=Be.CHARACTER_TOKEN;Re(e)?t=Be.WHITESPACE_CHARACTER_TOKEN:e===Oe.NULL&&(t=Be.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(t,He(e));}_emitSeveralCodePoints(e){for(let t=0;t<e.length;t++)this._emitCodePoint(e[t]);}_emitChars(e){this._appendCharToCurrentCharacterToken(Be.CHARACTER_TOKEN,e);}_matchNamedCharacterReference(e){let t=null,n=1,s=Fe(0,e);for(this.tempBuff.push(e);s>-1;){const e=ue[s],r=e<7;r&&1&e&&(t=2&e?[ue[++s],ue[++s]]:[ue[++s]],n=0);const i=this._consume();if(this.tempBuff.push(i),n++,i===Oe.EOF)break;s=r?4&e?Fe(s,i):-1:i===e?++s:-1;}for(;n--;)this.tempBuff.pop(),this._unconsume();return t}_isCharacterReferenceInAttribute(){return "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE"===this.returnState||"ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE"===this.returnState||"ATTRIBUTE_VALUE_UNQUOTED_STATE"===this.returnState}_isCharacterReferenceAttributeQuirk(e){if(!e&&this._isCharacterReferenceInAttribute()){const e=this._consume();return this._unconsume(),e===Oe.EQUALS_SIGN||De(e)}return !1}_flushCodePointsConsumedAsCharacterReference(){if(this._isCharacterReferenceInAttribute())for(let e=0;e<this.tempBuff.length;e++)this.currentAttr.value+=He(this.tempBuff[e]);else this._emitSeveralCodePoints(this.tempBuff);this.tempBuff=[];}[de](e){this.preprocessor.dropParsedChunk(),e===Oe.LESS_THAN_SIGN?this.state="TAG_OPEN_STATE":e===Oe.AMPERSAND?(this.returnState=de,this.state="CHARACTER_REFERENCE_STATE"):e===Oe.NULL?(this._err(N),this._emitCodePoint(e)):e===Oe.EOF?this._emitEOFToken():this._emitCodePoint(e);}RCDATA_STATE(e){this.preprocessor.dropParsedChunk(),e===Oe.AMPERSAND?(this.returnState="RCDATA_STATE",this.state="CHARACTER_REFERENCE_STATE"):e===Oe.LESS_THAN_SIGN?this.state="RCDATA_LESS_THAN_SIGN_STATE":e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?this._emitEOFToken():this._emitCodePoint(e);}RAWTEXT_STATE(e){this.preprocessor.dropParsedChunk(),e===Oe.LESS_THAN_SIGN?this.state="RAWTEXT_LESS_THAN_SIGN_STATE":e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?this._emitEOFToken():this._emitCodePoint(e);}SCRIPT_DATA_STATE(e){this.preprocessor.dropParsedChunk(),e===Oe.LESS_THAN_SIGN?this.state="SCRIPT_DATA_LESS_THAN_SIGN_STATE":e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?this._emitEOFToken():this._emitCodePoint(e);}PLAINTEXT_STATE(e){this.preprocessor.dropParsedChunk(),e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?this._emitEOFToken():this._emitCodePoint(e);}TAG_OPEN_STATE(e){e===Oe.EXCLAMATION_MARK?this.state="MARKUP_DECLARATION_OPEN_STATE":e===Oe.SOLIDUS?this.state="END_TAG_OPEN_STATE":Le(e)?(this._createStartTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===Oe.QUESTION_MARK?(this._err(u),this._createCommentToken(),this._reconsumeInState("BOGUS_COMMENT_STATE")):e===Oe.EOF?(this._err(L),this._emitChars("<"),this._emitEOFToken()):(this._err(O),this._emitChars("<"),this._reconsumeInState(de));}END_TAG_OPEN_STATE(e){Le(e)?(this._createEndTagToken(),this._reconsumeInState("TAG_NAME_STATE")):e===Oe.GREATER_THAN_SIGN?(this._err(C),this.state=de):e===Oe.EOF?(this._err(L),this._emitChars("</"),this._emitEOFToken()):(this._err(O),this._createCommentToken(),this._reconsumeInState("BOGUS_COMMENT_STATE"));}TAG_NAME_STATE(e){Re(e)?this.state="BEFORE_ATTRIBUTE_NAME_STATE":e===Oe.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):fe(e)?this.currentToken.tagName+=Ue(e):e===Oe.NULL?(this._err(N),this.currentToken.tagName+=n):e===Oe.EOF?(this._err(D),this._emitEOFToken()):this.currentToken.tagName+=He(e);}RCDATA_LESS_THAN_SIGN_STATE(e){e===Oe.SOLIDUS?(this.tempBuff=[],this.state="RCDATA_END_TAG_OPEN_STATE"):(this._emitChars("<"),this._reconsumeInState("RCDATA_STATE"));}RCDATA_END_TAG_OPEN_STATE(e){Le(e)?(this._createEndTagToken(),this._reconsumeInState("RCDATA_END_TAG_NAME_STATE")):(this._emitChars("</"),this._reconsumeInState("RCDATA_STATE"));}RCDATA_END_TAG_NAME_STATE(e){if(fe(e))this.currentToken.tagName+=Ue(e),this.tempBuff.push(e);else if(Me(e))this.currentToken.tagName+=He(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(Re(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===Oe.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===Oe.GREATER_THAN_SIGN)return this.state=de,void this._emitCurrentToken()}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RCDATA_STATE");}}RAWTEXT_LESS_THAN_SIGN_STATE(e){e===Oe.SOLIDUS?(this.tempBuff=[],this.state="RAWTEXT_END_TAG_OPEN_STATE"):(this._emitChars("<"),this._reconsumeInState("RAWTEXT_STATE"));}RAWTEXT_END_TAG_OPEN_STATE(e){Le(e)?(this._createEndTagToken(),this._reconsumeInState("RAWTEXT_END_TAG_NAME_STATE")):(this._emitChars("</"),this._reconsumeInState("RAWTEXT_STATE"));}RAWTEXT_END_TAG_NAME_STATE(e){if(fe(e))this.currentToken.tagName+=Ue(e),this.tempBuff.push(e);else if(Me(e))this.currentToken.tagName+=He(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(Re(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===Oe.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===Oe.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=de)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("RAWTEXT_STATE");}}SCRIPT_DATA_LESS_THAN_SIGN_STATE(e){e===Oe.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_END_TAG_OPEN_STATE"):e===Oe.EXCLAMATION_MARK?(this.state="SCRIPT_DATA_ESCAPE_START_STATE",this._emitChars("<!")):(this._emitChars("<"),this._reconsumeInState("SCRIPT_DATA_STATE"));}SCRIPT_DATA_END_TAG_OPEN_STATE(e){Le(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_END_TAG_NAME_STATE")):(this._emitChars("</"),this._reconsumeInState("SCRIPT_DATA_STATE"));}SCRIPT_DATA_END_TAG_NAME_STATE(e){if(fe(e))this.currentToken.tagName+=Ue(e),this.tempBuff.push(e);else if(Me(e))this.currentToken.tagName+=He(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(Re(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===Oe.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===Oe.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=de)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_STATE");}}SCRIPT_DATA_ESCAPE_START_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPE_START_DASH_STATE",this._emitChars("-")):this._reconsumeInState("SCRIPT_DATA_STATE");}SCRIPT_DATA_ESCAPE_START_DASH_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChars("-")):this._reconsumeInState("SCRIPT_DATA_STATE");}SCRIPT_DATA_ESCAPED_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_STATE",this._emitChars("-")):e===Oe.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):this._emitCodePoint(e);}SCRIPT_DATA_ESCAPED_DASH_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",this._emitChars("-")):e===Oe.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===Oe.NULL?(this._err(N),this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e));}SCRIPT_DATA_ESCAPED_DASH_DASH_STATE(e){e===Oe.HYPHEN_MINUS?this._emitChars("-"):e===Oe.LESS_THAN_SIGN?this.state="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE":e===Oe.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChars(">")):e===Oe.NULL?(this._err(N),this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):(this.state="SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e));}SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE(e){e===Oe.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE"):Le(e)?(this.tempBuff=[],this._emitChars("<"),this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE")):(this._emitChars("<"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"));}SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE(e){Le(e)?(this._createEndTagToken(),this._reconsumeInState("SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE")):(this._emitChars("</"),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE"));}SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE(e){if(fe(e))this.currentToken.tagName+=Ue(e),this.tempBuff.push(e);else if(Me(e))this.currentToken.tagName+=He(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(Re(e))return void(this.state="BEFORE_ATTRIBUTE_NAME_STATE");if(e===Oe.SOLIDUS)return void(this.state="SELF_CLOSING_START_TAG_STATE");if(e===Oe.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=de)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE");}}SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE(e){Re(e)||e===Oe.SOLIDUS||e===Oe.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?"SCRIPT_DATA_DOUBLE_ESCAPED_STATE":"SCRIPT_DATA_ESCAPED_STATE",this._emitCodePoint(e)):fe(e)?(this.tempBuff.push(ge(e)),this._emitCodePoint(e)):Me(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_ESCAPED_STATE");}SCRIPT_DATA_DOUBLE_ESCAPED_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",this._emitChars("-")):e===Oe.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChars("<")):e===Oe.NULL?(this._err(N),this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):this._emitCodePoint(e);}SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE(e){e===Oe.HYPHEN_MINUS?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",this._emitChars("-")):e===Oe.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChars("<")):e===Oe.NULL?(this._err(N),this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e));}SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE(e){e===Oe.HYPHEN_MINUS?this._emitChars("-"):e===Oe.LESS_THAN_SIGN?(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",this._emitChars("<")):e===Oe.GREATER_THAN_SIGN?(this.state="SCRIPT_DATA_STATE",this._emitChars(">")):e===Oe.NULL?(this._err(N),this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitChars(n)):e===Oe.EOF?(this._err(v),this._emitEOFToken()):(this.state="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e));}SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE(e){e===Oe.SOLIDUS?(this.tempBuff=[],this.state="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",this._emitChars("/")):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE");}SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE(e){Re(e)||e===Oe.SOLIDUS||e===Oe.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?"SCRIPT_DATA_ESCAPED_STATE":"SCRIPT_DATA_DOUBLE_ESCAPED_STATE",this._emitCodePoint(e)):fe(e)?(this.tempBuff.push(ge(e)),this._emitCodePoint(e)):Me(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState("SCRIPT_DATA_DOUBLE_ESCAPED_STATE");}BEFORE_ATTRIBUTE_NAME_STATE(e){Re(e)||(e===Oe.SOLIDUS||e===Oe.GREATER_THAN_SIGN||e===Oe.EOF?this._reconsumeInState("AFTER_ATTRIBUTE_NAME_STATE"):e===Oe.EQUALS_SIGN?(this._err(S),this._createAttr("="),this.state="ATTRIBUTE_NAME_STATE"):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")));}ATTRIBUTE_NAME_STATE(e){Re(e)||e===Oe.SOLIDUS||e===Oe.GREATER_THAN_SIGN||e===Oe.EOF?(this._leaveAttrName("AFTER_ATTRIBUTE_NAME_STATE"),this._unconsume()):e===Oe.EQUALS_SIGN?this._leaveAttrName("BEFORE_ATTRIBUTE_VALUE_STATE"):fe(e)?this.currentAttr.name+=Ue(e):e===Oe.QUOTATION_MARK||e===Oe.APOSTROPHE||e===Oe.LESS_THAN_SIGN?(this._err(d),this.currentAttr.name+=He(e)):e===Oe.NULL?(this._err(N),this.currentAttr.name+=n):this.currentAttr.name+=He(e);}AFTER_ATTRIBUTE_NAME_STATE(e){Re(e)||(e===Oe.SOLIDUS?this.state="SELF_CLOSING_START_TAG_STATE":e===Oe.EQUALS_SIGN?this.state="BEFORE_ATTRIBUTE_VALUE_STATE":e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(D),this._emitEOFToken()):(this._createAttr(""),this._reconsumeInState("ATTRIBUTE_NAME_STATE")));}BEFORE_ATTRIBUTE_VALUE_STATE(e){Re(e)||(e===Oe.QUOTATION_MARK?this.state="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE":e===Oe.APOSTROPHE?this.state="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE":e===Oe.GREATER_THAN_SIGN?(this._err(k),this.state=de,this._emitCurrentToken()):this._reconsumeInState("ATTRIBUTE_VALUE_UNQUOTED_STATE"));}ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE(e){e===Oe.QUOTATION_MARK?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===Oe.AMPERSAND?(this.returnState="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE",this.state="CHARACTER_REFERENCE_STATE"):e===Oe.NULL?(this._err(N),this.currentAttr.value+=n):e===Oe.EOF?(this._err(D),this._emitEOFToken()):this.currentAttr.value+=He(e);}ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE(e){e===Oe.APOSTROPHE?this.state="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE":e===Oe.AMPERSAND?(this.returnState="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE",this.state="CHARACTER_REFERENCE_STATE"):e===Oe.NULL?(this._err(N),this.currentAttr.value+=n):e===Oe.EOF?(this._err(D),this._emitEOFToken()):this.currentAttr.value+=He(e);}ATTRIBUTE_VALUE_UNQUOTED_STATE(e){Re(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===Oe.AMPERSAND?(this.returnState="ATTRIBUTE_VALUE_UNQUOTED_STATE",this.state="CHARACTER_REFERENCE_STATE"):e===Oe.GREATER_THAN_SIGN?(this._leaveAttrValue(de),this._emitCurrentToken()):e===Oe.NULL?(this._err(N),this.currentAttr.value+=n):e===Oe.QUOTATION_MARK||e===Oe.APOSTROPHE||e===Oe.LESS_THAN_SIGN||e===Oe.EQUALS_SIGN||e===Oe.GRAVE_ACCENT?(this._err(M),this.currentAttr.value+=He(e)):e===Oe.EOF?(this._err(D),this._emitEOFToken()):this.currentAttr.value+=He(e);}AFTER_ATTRIBUTE_VALUE_QUOTED_STATE(e){Re(e)?this._leaveAttrValue("BEFORE_ATTRIBUTE_NAME_STATE"):e===Oe.SOLIDUS?this._leaveAttrValue("SELF_CLOSING_START_TAG_STATE"):e===Oe.GREATER_THAN_SIGN?(this._leaveAttrValue(de),this._emitCurrentToken()):e===Oe.EOF?(this._err(D),this._emitEOFToken()):(this._err(P),this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE"));}SELF_CLOSING_START_TAG_STATE(e){e===Oe.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(D),this._emitEOFToken()):(this._err(p),this._reconsumeInState("BEFORE_ATTRIBUTE_NAME_STATE"));}BOGUS_COMMENT_STATE(e){e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._emitCurrentToken(),this._emitEOFToken()):e===Oe.NULL?(this._err(N),this.currentToken.data+=n):this.currentToken.data+=He(e);}MARKUP_DECLARATION_OPEN_STATE(e){this._consumeSequenceIfMatch(Se.DASH_DASH_STRING,e,!0)?(this._createCommentToken(),this.state="COMMENT_START_STATE"):this._consumeSequenceIfMatch(Se.DOCTYPE_STRING,e,!1)?this.state="DOCTYPE_STATE":this._consumeSequenceIfMatch(Se.CDATA_START_STRING,e,!0)?this.allowCDATA?this.state="CDATA_SECTION_STATE":(this._err(x),this._createCommentToken(),this.currentToken.data="[CDATA[",this.state="BOGUS_COMMENT_STATE"):this._ensureHibernation()||(this._err(y),this._createCommentToken(),this._reconsumeInState("BOGUS_COMMENT_STATE"));}COMMENT_START_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_START_DASH_STATE":e===Oe.GREATER_THAN_SIGN?(this._err(X),this.state=de,this._emitCurrentToken()):this._reconsumeInState("COMMENT_STATE");}COMMENT_START_DASH_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===Oe.GREATER_THAN_SIGN?(this._err(X),this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(W),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState("COMMENT_STATE"));}COMMENT_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_END_DASH_STATE":e===Oe.LESS_THAN_SIGN?(this.currentToken.data+="<",this.state="COMMENT_LESS_THAN_SIGN_STATE"):e===Oe.NULL?(this._err(N),this.currentToken.data+=n):e===Oe.EOF?(this._err(W),this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.data+=He(e);}COMMENT_LESS_THAN_SIGN_STATE(e){e===Oe.EXCLAMATION_MARK?(this.currentToken.data+="!",this.state="COMMENT_LESS_THAN_SIGN_BANG_STATE"):e===Oe.LESS_THAN_SIGN?this.currentToken.data+="!":this._reconsumeInState("COMMENT_STATE");}COMMENT_LESS_THAN_SIGN_BANG_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE":this._reconsumeInState("COMMENT_STATE");}COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE":this._reconsumeInState("COMMENT_END_DASH_STATE");}COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE(e){e!==Oe.GREATER_THAN_SIGN&&e!==Oe.EOF&&this._err(Q),this._reconsumeInState("COMMENT_END_STATE");}COMMENT_END_DASH_STATE(e){e===Oe.HYPHEN_MINUS?this.state="COMMENT_END_STATE":e===Oe.EOF?(this._err(W),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState("COMMENT_STATE"));}COMMENT_END_STATE(e){e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):e===Oe.EXCLAMATION_MARK?this.state="COMMENT_END_BANG_STATE":e===Oe.HYPHEN_MINUS?this.currentToken.data+="-":e===Oe.EOF?(this._err(W),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--",this._reconsumeInState("COMMENT_STATE"));}COMMENT_END_BANG_STATE(e){e===Oe.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state="COMMENT_END_DASH_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(V),this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(W),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--!",this._reconsumeInState("COMMENT_STATE"));}DOCTYPE_STATE(e){Re(e)?this.state="BEFORE_DOCTYPE_NAME_STATE":e===Oe.GREATER_THAN_SIGN?this._reconsumeInState("BEFORE_DOCTYPE_NAME_STATE"):e===Oe.EOF?(this._err(w),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(te),this._reconsumeInState("BEFORE_DOCTYPE_NAME_STATE"));}BEFORE_DOCTYPE_NAME_STATE(e){Re(e)||(fe(e)?(this._createDoctypeToken(Ue(e)),this.state="DOCTYPE_NAME_STATE"):e===Oe.NULL?(this._err(N),this._createDoctypeToken(n),this.state="DOCTYPE_NAME_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(ne),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._createDoctypeToken(He(e)),this.state="DOCTYPE_NAME_STATE"));}DOCTYPE_NAME_STATE(e){Re(e)?this.state="AFTER_DOCTYPE_NAME_STATE":e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):fe(e)?this.currentToken.name+=Ue(e):e===Oe.NULL?(this._err(N),this.currentToken.name+=n):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.name+=He(e);}AFTER_DOCTYPE_NAME_STATE(e){Re(e)||(e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this._consumeSequenceIfMatch(Se.PUBLIC_STRING,e,!1)?this.state="AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE":this._consumeSequenceIfMatch(Se.SYSTEM_STRING,e,!1)?this.state="AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE":this._ensureHibernation()||(this._err(se),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")));}AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE(e){Re(e)?this.state="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE":e===Oe.QUOTATION_MARK?(this._err(g),this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this._err(g),this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(G),this.currentToken.forceQuirks=!0,this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(F),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE"));}BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE(e){Re(e)||(e===Oe.QUOTATION_MARK?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this.currentToken.publicId="",this.state="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(G),this.currentToken.forceQuirks=!0,this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(F),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")));}DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE(e){e===Oe.QUOTATION_MARK?this.state="AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE":e===Oe.NULL?(this._err(N),this.currentToken.publicId+=n):e===Oe.GREATER_THAN_SIGN?(this._err(b),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=He(e);}DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE(e){e===Oe.APOSTROPHE?this.state="AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE":e===Oe.NULL?(this._err(N),this.currentToken.publicId+=n):e===Oe.GREATER_THAN_SIGN?(this._err(b),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=He(e);}AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE(e){Re(e)?this.state="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE":e===Oe.GREATER_THAN_SIGN?(this.state=de,this._emitCurrentToken()):e===Oe.QUOTATION_MARK?(this._err(H),this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this._err(H),this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(B),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE"));}BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE(e){Re(e)||(e===Oe.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=de):e===Oe.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(B),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")));}AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE(e){Re(e)?this.state="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===Oe.QUOTATION_MARK?(this._err(U),this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this._err(U),this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(K),this.currentToken.forceQuirks=!0,this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(B),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE"));}BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE(e){Re(e)||(e===Oe.QUOTATION_MARK?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE"):e===Oe.APOSTROPHE?(this.currentToken.systemId="",this.state="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE"):e===Oe.GREATER_THAN_SIGN?(this._err(K),this.currentToken.forceQuirks=!0,this.state=de,this._emitCurrentToken()):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(B),this.currentToken.forceQuirks=!0,this._reconsumeInState("BOGUS_DOCTYPE_STATE")));}DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE(e){e===Oe.QUOTATION_MARK?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===Oe.NULL?(this._err(N),this.currentToken.systemId+=n):e===Oe.GREATER_THAN_SIGN?(this._err(Y),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=He(e);}DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE(e){e===Oe.APOSTROPHE?this.state="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE":e===Oe.NULL?(this._err(N),this.currentToken.systemId+=n):e===Oe.GREATER_THAN_SIGN?(this._err(Y),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=He(e);}AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE(e){Re(e)||(e===Oe.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=de):e===Oe.EOF?(this._err(w),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(f),this._reconsumeInState("BOGUS_DOCTYPE_STATE")));}BOGUS_DOCTYPE_STATE(e){e===Oe.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=de):e===Oe.NULL?this._err(N):e===Oe.EOF&&(this._emitCurrentToken(),this._emitEOFToken());}CDATA_SECTION_STATE(e){e===Oe.RIGHT_SQUARE_BRACKET?this.state="CDATA_SECTION_BRACKET_STATE":e===Oe.EOF?(this._err(j),this._emitEOFToken()):this._emitCodePoint(e);}CDATA_SECTION_BRACKET_STATE(e){e===Oe.RIGHT_SQUARE_BRACKET?this.state="CDATA_SECTION_END_STATE":(this._emitChars("]"),this._reconsumeInState("CDATA_SECTION_STATE"));}CDATA_SECTION_END_STATE(e){e===Oe.GREATER_THAN_SIGN?this.state=de:e===Oe.RIGHT_SQUARE_BRACKET?this._emitChars("]"):(this._emitChars("]]"),this._reconsumeInState("CDATA_SECTION_STATE"));}CHARACTER_REFERENCE_STATE(e){this.tempBuff=[Oe.AMPERSAND],e===Oe.NUMBER_SIGN?(this.tempBuff.push(e),this.state="NUMERIC_CHARACTER_REFERENCE_STATE"):De(e)?this._reconsumeInState("NAMED_CHARACTER_REFERENCE_STATE"):(this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}NAMED_CHARACTER_REFERENCE_STATE(e){const t=this._matchNamedCharacterReference(e);if(this._ensureHibernation())this.tempBuff=[Oe.AMPERSAND];else if(t){const e=this.tempBuff[this.tempBuff.length-1]===Oe.SEMICOLON;this._isCharacterReferenceAttributeQuirk(e)||(e||this._errOnNextCodePoint(I),this.tempBuff=t),this._flushCodePointsConsumedAsCharacterReference(),this.state=this.returnState;}else this._flushCodePointsConsumedAsCharacterReference(),this.state="AMBIGUOS_AMPERSAND_STATE";}AMBIGUOS_AMPERSAND_STATE(e){De(e)?this._isCharacterReferenceInAttribute()?this.currentAttr.value+=He(e):this._emitCodePoint(e):(e===Oe.SEMICOLON&&this._err(R),this._reconsumeInState(this.returnState));}NUMERIC_CHARACTER_REFERENCE_STATE(e){this.charRefCode=0,e===Oe.LATIN_SMALL_X||e===Oe.LATIN_CAPITAL_X?(this.tempBuff.push(e),this.state="HEXADEMICAL_CHARACTER_REFERENCE_START_STATE"):this._reconsumeInState("DECIMAL_CHARACTER_REFERENCE_START_STATE");}HEXADEMICAL_CHARACTER_REFERENCE_START_STATE(e){!function(e){return Ie(e)||ke(e)||Pe(e)}(e)?(this._err(z),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState)):this._reconsumeInState("HEXADEMICAL_CHARACTER_REFERENCE_STATE");}DECIMAL_CHARACTER_REFERENCE_START_STATE(e){Ie(e)?this._reconsumeInState("DECIMAL_CHARACTER_REFERENCE_STATE"):(this._err(z),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}HEXADEMICAL_CHARACTER_REFERENCE_STATE(e){ke(e)?this.charRefCode=16*this.charRefCode+e-55:Pe(e)?this.charRefCode=16*this.charRefCode+e-87:Ie(e)?this.charRefCode=16*this.charRefCode+e-48:e===Oe.SEMICOLON?this.state="NUMERIC_CHARACTER_REFERENCE_END_STATE":(this._err(I),this._reconsumeInState("NUMERIC_CHARACTER_REFERENCE_END_STATE"));}DECIMAL_CHARACTER_REFERENCE_STATE(e){Ie(e)?this.charRefCode=10*this.charRefCode+e-48:e===Oe.SEMICOLON?this.state="NUMERIC_CHARACTER_REFERENCE_END_STATE":(this._err(I),this._reconsumeInState("NUMERIC_CHARACTER_REFERENCE_END_STATE"));}NUMERIC_CHARACTER_REFERENCE_END_STATE(){if(this.charRefCode===Oe.NULL)this._err(q),this.charRefCode=Oe.REPLACEMENT_CHARACTER;else if(this.charRefCode>1114111)this._err(Z),this.charRefCode=Oe.REPLACEMENT_CHARACTER;else if(i(this.charRefCode))this._err(J),this.charRefCode=Oe.REPLACEMENT_CHARACTER;else if(a(this.charRefCode))this._err(ee);else if(E(this.charRefCode)||this.charRefCode===Oe.CARRIAGE_RETURN){this._err($);const e=Ce[this.charRefCode];e&&(this.charRefCode=e);}this.tempBuff=[this.charRefCode],this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState);}}Be.CHARACTER_TOKEN="CHARACTER_TOKEN",Be.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN",Be.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN",Be.START_TAG_TOKEN="START_TAG_TOKEN",Be.END_TAG_TOKEN="END_TAG_TOKEN",Be.COMMENT_TOKEN="COMMENT_TOKEN",Be.DOCTYPE_TOKEN="DOCTYPE_TOKEN",Be.EOF_TOKEN="EOF_TOKEN",Be.HIBERNATION_TOKEN="HIBERNATION_TOKEN",Be.MODE={DATA:de,RCDATA:"RCDATA_STATE",RAWTEXT:"RAWTEXT_STATE",SCRIPT_DATA:"SCRIPT_DATA_STATE",PLAINTEXT:"PLAINTEXT_STATE"},Be.getTokenAttr=function(e,t){for(let n=e.attrs.length-1;n>=0;n--)if(e.attrs[n].name===t)return e.attrs[n].value;return null};var Ge=Be;function Ke(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var be=Ke((function(e,t){const n=t.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};t.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"},t.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};const s=t.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"};t.SPECIAL_ELEMENTS={[n.HTML]:{[s.ADDRESS]:!0,[s.APPLET]:!0,[s.AREA]:!0,[s.ARTICLE]:!0,[s.ASIDE]:!0,[s.BASE]:!0,[s.BASEFONT]:!0,[s.BGSOUND]:!0,[s.BLOCKQUOTE]:!0,[s.BODY]:!0,[s.BR]:!0,[s.BUTTON]:!0,[s.CAPTION]:!0,[s.CENTER]:!0,[s.COL]:!0,[s.COLGROUP]:!0,[s.DD]:!0,[s.DETAILS]:!0,[s.DIR]:!0,[s.DIV]:!0,[s.DL]:!0,[s.DT]:!0,[s.EMBED]:!0,[s.FIELDSET]:!0,[s.FIGCAPTION]:!0,[s.FIGURE]:!0,[s.FOOTER]:!0,[s.FORM]:!0,[s.FRAME]:!0,[s.FRAMESET]:!0,[s.H1]:!0,[s.H2]:!0,[s.H3]:!0,[s.H4]:!0,[s.H5]:!0,[s.H6]:!0,[s.HEAD]:!0,[s.HEADER]:!0,[s.HGROUP]:!0,[s.HR]:!0,[s.HTML]:!0,[s.IFRAME]:!0,[s.IMG]:!0,[s.INPUT]:!0,[s.LI]:!0,[s.LINK]:!0,[s.LISTING]:!0,[s.MAIN]:!0,[s.MARQUEE]:!0,[s.MENU]:!0,[s.META]:!0,[s.NAV]:!0,[s.NOEMBED]:!0,[s.NOFRAMES]:!0,[s.NOSCRIPT]:!0,[s.OBJECT]:!0,[s.OL]:!0,[s.P]:!0,[s.PARAM]:!0,[s.PLAINTEXT]:!0,[s.PRE]:!0,[s.SCRIPT]:!0,[s.SECTION]:!0,[s.SELECT]:!0,[s.SOURCE]:!0,[s.STYLE]:!0,[s.SUMMARY]:!0,[s.TABLE]:!0,[s.TBODY]:!0,[s.TD]:!0,[s.TEMPLATE]:!0,[s.TEXTAREA]:!0,[s.TFOOT]:!0,[s.TH]:!0,[s.THEAD]:!0,[s.TITLE]:!0,[s.TR]:!0,[s.TRACK]:!0,[s.UL]:!0,[s.WBR]:!0,[s.XMP]:!0},[n.MATHML]:{[s.MI]:!0,[s.MO]:!0,[s.MN]:!0,[s.MS]:!0,[s.MTEXT]:!0,[s.ANNOTATION_XML]:!0},[n.SVG]:{[s.TITLE]:!0,[s.FOREIGN_OBJECT]:!0,[s.DESC]:!0}};}));const Ye=be.TAG_NAMES,xe=be.NAMESPACES;function ye(e){switch(e.length){case 1:return e===Ye.P;case 2:return e===Ye.RB||e===Ye.RP||e===Ye.RT||e===Ye.DD||e===Ye.DT||e===Ye.LI;case 3:return e===Ye.RTC;case 6:return e===Ye.OPTION;case 8:return e===Ye.OPTGROUP}return !1}function ve(e){switch(e.length){case 1:return e===Ye.P;case 2:return e===Ye.RB||e===Ye.RP||e===Ye.RT||e===Ye.DD||e===Ye.DT||e===Ye.LI||e===Ye.TD||e===Ye.TH||e===Ye.TR;case 3:return e===Ye.RTC;case 5:return e===Ye.TBODY||e===Ye.TFOOT||e===Ye.THEAD;case 6:return e===Ye.OPTION;case 7:return e===Ye.CAPTION;case 8:return e===Ye.OPTGROUP||e===Ye.COLGROUP}return !1}function we(e,t){switch(e.length){case 2:if(e===Ye.TD||e===Ye.TH)return t===xe.HTML;if(e===Ye.MI||e===Ye.MO||e===Ye.MN||e===Ye.MS)return t===xe.MATHML;break;case 4:if(e===Ye.HTML)return t===xe.HTML;if(e===Ye.DESC)return t===xe.SVG;break;case 5:if(e===Ye.TABLE)return t===xe.HTML;if(e===Ye.MTEXT)return t===xe.MATHML;if(e===Ye.TITLE)return t===xe.SVG;break;case 6:return (e===Ye.APPLET||e===Ye.OBJECT)&&t===xe.HTML;case 7:return (e===Ye.CAPTION||e===Ye.MARQUEE)&&t===xe.HTML;case 8:return e===Ye.TEMPLATE&&t===xe.HTML;case 13:return e===Ye.FOREIGN_OBJECT&&t===xe.SVG;case 14:return e===Ye.ANNOTATION_XML&&t===xe.MATHML}return !1}var Qe=class{constructor(e,t){this.stackTop=-1,this.items=[],this.current=e,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=t;}_indexOf(e){let t=-1;for(let n=this.stackTop;n>=0;n--)if(this.items[n]===e){t=n;break}return t}_isInTemplate(){return this.currentTagName===Ye.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===xe.HTML}_updateCurrentElement(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null;}push(e){this.items[++this.stackTop]=e,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++;}pop(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement();}replace(e,t){const n=this._indexOf(e);this.items[n]=t,n===this.stackTop&&this._updateCurrentElement();}insertAfter(e,t){const n=this._indexOf(e)+1;this.items.splice(n,0,t),n===++this.stackTop&&this._updateCurrentElement();}popUntilTagNamePopped(e){for(;this.stackTop>-1;){const t=this.currentTagName,n=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),t===e&&n===xe.HTML)break}}popUntilElementPopped(e){for(;this.stackTop>-1;){const t=this.current;if(this.pop(),t===e)break}}popUntilNumberedHeaderPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ye.H1||e===Ye.H2||e===Ye.H3||e===Ye.H4||e===Ye.H5||e===Ye.H6&&t===xe.HTML)break}}popUntilTableCellPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ye.TD||e===Ye.TH&&t===xe.HTML)break}}popAllUpToHtmlElement(){this.stackTop=0,this._updateCurrentElement();}clearBackToTableContext(){for(;this.currentTagName!==Ye.TABLE&&this.currentTagName!==Ye.TEMPLATE&&this.currentTagName!==Ye.HTML||this.treeAdapter.getNamespaceURI(this.current)!==xe.HTML;)this.pop();}clearBackToTableBodyContext(){for(;this.currentTagName!==Ye.TBODY&&this.currentTagName!==Ye.TFOOT&&this.currentTagName!==Ye.THEAD&&this.currentTagName!==Ye.TEMPLATE&&this.currentTagName!==Ye.HTML||this.treeAdapter.getNamespaceURI(this.current)!==xe.HTML;)this.pop();}clearBackToTableRowContext(){for(;this.currentTagName!==Ye.TR&&this.currentTagName!==Ye.TEMPLATE&&this.currentTagName!==Ye.HTML||this.treeAdapter.getNamespaceURI(this.current)!==xe.HTML;)this.pop();}remove(e){for(let t=this.stackTop;t>=0;t--)if(this.items[t]===e){this.items.splice(t,1),this.stackTop--,this._updateCurrentElement();break}}tryPeekProperlyNestedBodyElement(){const e=this.items[1];return e&&this.treeAdapter.getTagName(e)===Ye.BODY?e:null}contains(e){return this._indexOf(e)>-1}getCommonAncestor(e){let t=this._indexOf(e);return --t>=0?this.items[t]:null}isRootHtmlElementCurrent(){return 0===this.stackTop&&this.currentTagName===Ye.HTML}hasInScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===xe.HTML)return !0;if(we(n,s))return !1}return !0}hasNumberedHeaderInScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]),n=this.treeAdapter.getNamespaceURI(this.items[e]);if((t===Ye.H1||t===Ye.H2||t===Ye.H3||t===Ye.H4||t===Ye.H5||t===Ye.H6)&&n===xe.HTML)return !0;if(we(t,n))return !1}return !0}hasInListItemScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===xe.HTML)return !0;if((n===Ye.UL||n===Ye.OL)&&s===xe.HTML||we(n,s))return !1}return !0}hasInButtonScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===xe.HTML)return !0;if(n===Ye.BUTTON&&s===xe.HTML||we(n,s))return !1}return !0}hasInTableScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===xe.HTML){if(n===e)return !0;if(n===Ye.TABLE||n===Ye.TEMPLATE||n===Ye.HTML)return !1}}return !0}hasTableBodyContextInTableScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]);if(this.treeAdapter.getNamespaceURI(this.items[e])===xe.HTML){if(t===Ye.TBODY||t===Ye.THEAD||t===Ye.TFOOT)return !0;if(t===Ye.TABLE||t===Ye.HTML)return !1}}return !0}hasInSelectScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===xe.HTML){if(n===e)return !0;if(n!==Ye.OPTION&&n!==Ye.OPTGROUP)return !1}}return !0}generateImpliedEndTags(){for(;ye(this.currentTagName);)this.pop();}generateImpliedEndTagsThoroughly(){for(;ve(this.currentTagName);)this.pop();}generateImpliedEndTagsWithExclusion(e){for(;ye(this.currentTagName)&&this.currentTagName!==e;)this.pop();}};class Xe{constructor(e){this.length=0,this.entries=[],this.treeAdapter=e,this.bookmark=null;}_getNoahArkConditionCandidates(e){const t=[];if(this.length>=3){const n=this.treeAdapter.getAttrList(e).length,s=this.treeAdapter.getTagName(e),r=this.treeAdapter.getNamespaceURI(e);for(let e=this.length-1;e>=0;e--){const i=this.entries[e];if(i.type===Xe.MARKER_ENTRY)break;const T=i.element,o=this.treeAdapter.getAttrList(T);this.treeAdapter.getTagName(T)===s&&this.treeAdapter.getNamespaceURI(T)===r&&o.length===n&&t.push({idx:e,attrs:o});}}return t.length<3?[]:t}_ensureNoahArkCondition(e){const t=this._getNoahArkConditionCandidates(e);let n=t.length;if(n){const s=this.treeAdapter.getAttrList(e),r=s.length,i=Object.create(null);for(let e=0;e<r;e++){const t=s[e];i[t.name]=t.value;}for(let e=0;e<r;e++)for(let s=0;s<n;s++){const r=t[s].attrs[e];if(i[r.name]!==r.value&&(t.splice(s,1),n--),t.length<3)return}for(let e=n-1;e>=2;e--)this.entries.splice(t[e].idx,1),this.length--;}}insertMarker(){this.entries.push({type:Xe.MARKER_ENTRY}),this.length++;}pushElement(e,t){this._ensureNoahArkCondition(e),this.entries.push({type:Xe.ELEMENT_ENTRY,element:e,token:t}),this.length++;}insertElementAfterBookmark(e,t){let n=this.length-1;for(;n>=0&&this.entries[n]!==this.bookmark;n--);this.entries.splice(n+1,0,{type:Xe.ELEMENT_ENTRY,element:e,token:t}),this.length++;}removeEntry(e){for(let t=this.length-1;t>=0;t--)if(this.entries[t]===e){this.entries.splice(t,1),this.length--;break}}clearToLastMarker(){for(;this.length;){const e=this.entries.pop();if(this.length--,e.type===Xe.MARKER_ENTRY)break}}getElementEntryInScopeWithTagName(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Xe.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(n.element)===e)return n}return null}getElementEntry(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Xe.ELEMENT_ENTRY&&n.element===e)return n}return null}}Xe.MARKER_ENTRY="MARKER_ENTRY",Xe.ELEMENT_ENTRY="ELEMENT_ENTRY";var We=Xe;class Ve{constructor(e){const t={},n=this._getOverriddenMethods(this,t);for(const s of Object.keys(n))"function"==typeof n[s]&&(t[s]=e[s],e[s]=n[s]);}_getOverriddenMethods(){throw new Error("Not implemented")}}Ve.install=function(e,t,n){e.__mixins||(e.__mixins=[]);for(let n=0;n<e.__mixins.length;n++)if(e.__mixins[n].constructor===t)return e.__mixins[n];const s=new t(e,n);return e.__mixins.push(s),s};var je=Ve;var ze=class extends je{constructor(e){super(e),this.preprocessor=e,this.isEol=!1,this.lineStartPos=0,this.droppedBufferSize=0,this.offset=0,this.col=0,this.line=1;}_getOverriddenMethods(e,t){return {advance(){const n=this.pos+1,s=this.html[n];return e.isEol&&(e.isEol=!1,e.line++,e.lineStartPos=n),("\n"===s||"\r"===s&&"\n"!==this.html[n+1])&&(e.isEol=!0),e.col=n-e.lineStartPos+1,e.offset=e.droppedBufferSize+n,t.advance.call(this)},retreat(){t.retreat.call(this),e.isEol=!1,e.col=this.pos-e.lineStartPos+1;},dropParsedChunk(){const n=this.pos;t.dropParsedChunk.call(this);const s=n-this.pos;e.lineStartPos-=s,e.droppedBufferSize+=s,e.offset=e.droppedBufferSize+this.pos;}}}};var qe=class extends je{constructor(e){super(e),this.tokenizer=e,this.posTracker=je.install(e.preprocessor,ze),this.currentAttrLocation=null,this.ctLoc=null;}_getCurrentLocation(){return {startLine:this.posTracker.line,startCol:this.posTracker.col,startOffset:this.posTracker.offset,endLine:-1,endCol:-1,endOffset:-1}}_attachCurrentAttrLocationInfo(){this.currentAttrLocation.endLine=this.posTracker.line,this.currentAttrLocation.endCol=this.posTracker.col,this.currentAttrLocation.endOffset=this.posTracker.offset;const e=this.tokenizer.currentToken,t=this.tokenizer.currentAttr;e.location.attrs||(e.location.attrs=Object.create(null)),e.location.attrs[t.name]=this.currentAttrLocation;}_getOverriddenMethods(e,t){const n={_createStartTagToken(){t._createStartTagToken.call(this),this.currentToken.location=e.ctLoc;},_createEndTagToken(){t._createEndTagToken.call(this),this.currentToken.location=e.ctLoc;},_createCommentToken(){t._createCommentToken.call(this),this.currentToken.location=e.ctLoc;},_createDoctypeToken(n){t._createDoctypeToken.call(this,n),this.currentToken.location=e.ctLoc;},_createCharacterToken(n,s){t._createCharacterToken.call(this,n,s),this.currentCharacterToken.location=e.ctLoc;},_createEOFToken(){t._createEOFToken.call(this),this.currentToken.location=e._getCurrentLocation();},_createAttr(n){t._createAttr.call(this,n),e.currentAttrLocation=e._getCurrentLocation();},_leaveAttrName(n){t._leaveAttrName.call(this,n),e._attachCurrentAttrLocationInfo();},_leaveAttrValue(n){t._leaveAttrValue.call(this,n),e._attachCurrentAttrLocationInfo();},_emitCurrentToken(){const n=this.currentToken.location;this.currentCharacterToken&&(this.currentCharacterToken.location.endLine=n.startLine,this.currentCharacterToken.location.endCol=n.startCol,this.currentCharacterToken.location.endOffset=n.startOffset),this.currentToken.type===Ge.EOF_TOKEN?(n.endLine=n.startLine,n.endCol=n.startCol,n.endOffset=n.startOffset):(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col+1,n.endOffset=e.posTracker.offset+1),t._emitCurrentToken.call(this);},_emitCurrentCharacterToken(){const n=this.currentCharacterToken&&this.currentCharacterToken.location;n&&-1===n.endOffset&&(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col,n.endOffset=e.posTracker.offset),t._emitCurrentCharacterToken.call(this);}};return Object.keys(Ge.MODE).forEach(s=>{const r=Ge.MODE[s];n[r]=function(n){e.ctLoc=e._getCurrentLocation(),t[r].call(this,n);};}),n}};var Je=class extends je{constructor(e,t){super(e),this.onItemPop=t.onItemPop;}_getOverriddenMethods(e,t){return {pop(){e.onItemPop(this.current),t.pop.call(this);},popAllUpToHtmlElement(){for(let t=this.stackTop;t>0;t--)e.onItemPop(this.items[t]);t.popAllUpToHtmlElement.call(this);},remove(n){e.onItemPop(this.current),t.remove.call(this,n);}}}};const Ze=be.TAG_NAMES;var $e=class extends je{constructor(e){super(e),this.parser=e,this.treeAdapter=this.parser.treeAdapter,this.posTracker=null,this.lastStartTagToken=null,this.lastFosterParentingLocation=null,this.currentToken=null;}_setStartLocation(e){let t=null;this.lastStartTagToken&&(t=Object.assign({},this.lastStartTagToken.location),t.startTag=this.lastStartTagToken.location),this.treeAdapter.setNodeSourceCodeLocation(e,t);}_setEndLocation(e,t){if(this.treeAdapter.getNodeSourceCodeLocation(e)&&t.location){const n=t.location,s=this.treeAdapter.getTagName(e),r={};t.type===Ge.END_TAG_TOKEN&&s===t.tagName?(r.endTag=Object.assign({},n),r.endLine=n.endLine,r.endCol=n.endCol,r.endOffset=n.endOffset):(r.endLine=n.startLine,r.endCol=n.startCol,r.endOffset=n.startOffset),this.treeAdapter.updateNodeSourceCodeLocation(e,r);}}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),e.lastStartTagToken=null,e.lastFosterParentingLocation=null,e.currentToken=null;const r=je.install(this.tokenizer,qe);e.posTracker=r.posTracker,je.install(this.openElements,Je,{onItemPop:function(t){e._setEndLocation(t,e.currentToken);}});},_runParsingLoop(n){t._runParsingLoop.call(this,n);for(let t=this.openElements.stackTop;t>=0;t--)e._setEndLocation(this.openElements.items[t],e.currentToken);},_processTokenInForeignContent(n){e.currentToken=n,t._processTokenInForeignContent.call(this,n);},_processToken(n){e.currentToken=n,t._processToken.call(this,n);if(n.type===Ge.END_TAG_TOKEN&&(n.tagName===Ze.HTML||n.tagName===Ze.BODY&&this.openElements.hasInScope(Ze.BODY)))for(let t=this.openElements.stackTop;t>=0;t--){const s=this.openElements.items[t];if(this.treeAdapter.getTagName(s)===n.tagName){e._setEndLocation(s,n);break}}},_setDocumentType(e){t._setDocumentType.call(this,e);const n=this.treeAdapter.getChildNodes(this.document),s=n.length;for(let t=0;t<s;t++){const s=n[t];if(this.treeAdapter.isDocumentTypeNode(s)){this.treeAdapter.setNodeSourceCodeLocation(s,e.location);break}}},_attachElementToTree(n){e._setStartLocation(n),e.lastStartTagToken=null,t._attachElementToTree.call(this,n);},_appendElement(n,s){e.lastStartTagToken=n,t._appendElement.call(this,n,s);},_insertElement(n,s){e.lastStartTagToken=n,t._insertElement.call(this,n,s);},_insertTemplate(n){e.lastStartTagToken=n,t._insertTemplate.call(this,n);const s=this.treeAdapter.getTemplateContent(this.openElements.current);this.treeAdapter.setNodeSourceCodeLocation(s,null);},_insertFakeRootElement(){t._insertFakeRootElement.call(this),this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current,null);},_appendCommentNode(e,n){t._appendCommentNode.call(this,e,n);const s=this.treeAdapter.getChildNodes(n),r=s[s.length-1];this.treeAdapter.setNodeSourceCodeLocation(r,e.location);},_findFosterParentingLocation(){return e.lastFosterParentingLocation=t._findFosterParentingLocation.call(this),e.lastFosterParentingLocation},_insertCharacters(n){t._insertCharacters.call(this,n);const s=this._shouldFosterParentOnInsertion(),r=s&&e.lastFosterParentingLocation.parent||this.openElements.currentTmplContent||this.openElements.current,i=this.treeAdapter.getChildNodes(r),T=s&&e.lastFosterParentingLocation.beforeElement?i.indexOf(e.lastFosterParentingLocation.beforeElement)-1:i.length-1,o=i[T];if(this.treeAdapter.getNodeSourceCodeLocation(o)){const{endLine:e,endCol:t,endOffset:s}=n.location;this.treeAdapter.updateNodeSourceCodeLocation(o,{endLine:e,endCol:t,endOffset:s});}else this.treeAdapter.setNodeSourceCodeLocation(o,n.location);}}}};var et=class extends je{constructor(e,t){super(e),this.posTracker=null,this.onParseError=t.onParseError;}_setErrorLocation(e){e.startLine=e.endLine=this.posTracker.line,e.startCol=e.endCol=this.posTracker.col,e.startOffset=e.endOffset=this.posTracker.offset;}_reportError(e){const t={code:e,startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1};this._setErrorLocation(t),this.onParseError(t);}_getOverriddenMethods(e){return {_err(t){e._reportError(t);}}}};var tt=class extends et{constructor(e,t){super(e,t),this.posTracker=je.install(e,ze),this.lastErrOffset=-1;}_reportError(e){this.lastErrOffset!==this.posTracker.offset&&(this.lastErrOffset=this.posTracker.offset,super._reportError(e));}};var nt=class extends et{constructor(e,t){super(e,t);const n=je.install(e.preprocessor,tt,t);this.posTracker=n.posTracker;}};var st=class extends et{constructor(e,t){super(e,t),this.opts=t,this.ctLoc=null,this.locBeforeToken=!1;}_setErrorLocation(e){this.ctLoc&&(e.startLine=this.ctLoc.startLine,e.startCol=this.ctLoc.startCol,e.startOffset=this.ctLoc.startOffset,e.endLine=this.locBeforeToken?this.ctLoc.startLine:this.ctLoc.endLine,e.endCol=this.locBeforeToken?this.ctLoc.startCol:this.ctLoc.endCol,e.endOffset=this.locBeforeToken?this.ctLoc.startOffset:this.ctLoc.endOffset);}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),je.install(this.tokenizer,nt,e.opts),je.install(this.tokenizer,qe);},_processInputToken(n){e.ctLoc=n.location,t._processInputToken.call(this,n);},_err(t,n){e.locBeforeToken=n&&n.beforeToken,e._reportError(t);}}}},rt=Ke((function(e,t){const{DOCUMENT_MODE:n}=be;t.createDocument=function(){return {nodeName:"#document",mode:n.NO_QUIRKS,childNodes:[]}},t.createDocumentFragment=function(){return {nodeName:"#document-fragment",childNodes:[]}},t.createElement=function(e,t,n){return {nodeName:e,tagName:e,attrs:n,namespaceURI:t,childNodes:[],parentNode:null}},t.createCommentNode=function(e){return {nodeName:"#comment",data:e,parentNode:null}};const s=function(e){return {nodeName:"#text",value:e,parentNode:null}},r=t.appendChild=function(e,t){e.childNodes.push(t),t.parentNode=e;},i=t.insertBefore=function(e,t,n){const s=e.childNodes.indexOf(n);e.childNodes.splice(s,0,t),t.parentNode=e;};t.setTemplateContent=function(e,t){e.content=t;},t.getTemplateContent=function(e){return e.content},t.setDocumentType=function(e,t,n,s){let i=null;for(let t=0;t<e.childNodes.length;t++)if("#documentType"===e.childNodes[t].nodeName){i=e.childNodes[t];break}i?(i.name=t,i.publicId=n,i.systemId=s):r(e,{nodeName:"#documentType",name:t,publicId:n,systemId:s});},t.setDocumentMode=function(e,t){e.mode=t;},t.getDocumentMode=function(e){return e.mode},t.detachNode=function(e){if(e.parentNode){const t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null;}},t.insertText=function(e,t){if(e.childNodes.length){const n=e.childNodes[e.childNodes.length-1];if("#text"===n.nodeName)return void(n.value+=t)}r(e,s(t));},t.insertTextBefore=function(e,t,n){const r=e.childNodes[e.childNodes.indexOf(n)-1];r&&"#text"===r.nodeName?r.value+=t:i(e,s(t),n);},t.adoptAttributes=function(e,t){const n=[];for(let t=0;t<e.attrs.length;t++)n.push(e.attrs[t].name);for(let s=0;s<t.length;s++)-1===n.indexOf(t[s].name)&&e.attrs.push(t[s]);},t.getFirstChild=function(e){return e.childNodes[0]},t.getChildNodes=function(e){return e.childNodes},t.getParentNode=function(e){return e.parentNode},t.getAttrList=function(e){return e.attrs},t.getTagName=function(e){return e.tagName},t.getNamespaceURI=function(e){return e.namespaceURI},t.getTextNodeContent=function(e){return e.value},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e.name},t.getDocumentTypeNodePublicId=function(e){return e.publicId},t.getDocumentTypeNodeSystemId=function(e){return e.systemId},t.isTextNode=function(e){return "#text"===e.nodeName},t.isCommentNode=function(e){return "#comment"===e.nodeName},t.isDocumentTypeNode=function(e){return "#documentType"===e.nodeName},t.isElementNode=function(e){return !!e.tagName},t.setNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=t;},t.getNodeSourceCodeLocation=function(e){return e.sourceCodeLocation},t.updateNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=Object.assign(e.sourceCodeLocation,t);};}));const{DOCUMENT_MODE:it}=be,Tt=["+//silmaril//dtd html pro v0r11 19970101//","-//as//dtd html 3.0 aswedit + extensions//","-//advasoft ltd//dtd html 3.0 aswedit + extensions//","-//ietf//dtd html 2.0 level 1//","-//ietf//dtd html 2.0 level 2//","-//ietf//dtd html 2.0 strict level 1//","-//ietf//dtd html 2.0 strict level 2//","-//ietf//dtd html 2.0 strict//","-//ietf//dtd html 2.0//","-//ietf//dtd html 2.1e//","-//ietf//dtd html 3.0//","-//ietf//dtd html 3.2 final//","-//ietf//dtd html 3.2//","-//ietf//dtd html 3//","-//ietf//dtd html level 0//","-//ietf//dtd html level 1//","-//ietf//dtd html level 2//","-//ietf//dtd html level 3//","-//ietf//dtd html strict level 0//","-//ietf//dtd html strict level 1//","-//ietf//dtd html strict level 2//","-//ietf//dtd html strict level 3//","-//ietf//dtd html strict//","-//ietf//dtd html//","-//metrius//dtd metrius presentational//","-//microsoft//dtd internet explorer 2.0 html strict//","-//microsoft//dtd internet explorer 2.0 html//","-//microsoft//dtd internet explorer 2.0 tables//","-//microsoft//dtd internet explorer 3.0 html strict//","-//microsoft//dtd internet explorer 3.0 html//","-//microsoft//dtd internet explorer 3.0 tables//","-//netscape comm. corp.//dtd html//","-//netscape comm. corp.//dtd strict html//","-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//","-//sq//dtd html 2.0 hotmetal + extensions//","-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//","-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//","-//spyglass//dtd html 2.0 extended//","-//sun microsystems corp.//dtd hotjava html//","-//sun microsystems corp.//dtd hotjava strict html//","-//w3c//dtd html 3 1995-03-24//","-//w3c//dtd html 3.2 draft//","-//w3c//dtd html 3.2 final//","-//w3c//dtd html 3.2//","-//w3c//dtd html 3.2s draft//","-//w3c//dtd html 4.0 frameset//","-//w3c//dtd html 4.0 transitional//","-//w3c//dtd html experimental 19960712//","-//w3c//dtd html experimental 970421//","-//w3c//dtd w3 html//","-//w3o//dtd w3 html 3.0//","-//webtechs//dtd mozilla html 2.0//","-//webtechs//dtd mozilla html//"],ot=Tt.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),Et=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],at=["-//w3c//dtd xhtml 1.0 frameset//","-//w3c//dtd xhtml 1.0 transitional//"],_t=at.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]);function ht(e,t){for(let n=0;n<t.length;n++)if(0===e.indexOf(t[n]))return !0;return !1}var At=function(e){return "html"===e.name&&null===e.publicId&&(null===e.systemId||"about:legacy-compat"===e.systemId)},ct=function(e){if("html"!==e.name)return it.QUIRKS;const t=e.systemId;if(t&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===t.toLowerCase())return it.QUIRKS;let n=e.publicId;if(null!==n){if(n=n.toLowerCase(),Et.indexOf(n)>-1)return it.QUIRKS;let e=null===t?ot:Tt;if(ht(n,e))return it.QUIRKS;if(e=null===t?at:_t,ht(n,e))return it.LIMITED_QUIRKS}return it.NO_QUIRKS},lt=Ke((function(e,t){const n=be.TAG_NAMES,s=be.NAMESPACES,r=be.ATTRS,i="text/html",T="application/xhtml+xml",o={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},E={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:s.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:s.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:s.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:s.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:s.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:s.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:s.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:s.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:s.XML},"xml:space":{prefix:"xml",name:"space",namespace:s.XML},xmlns:{prefix:"",name:"xmlns",namespace:s.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:s.XMLNS}},a=t.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},_={[n.B]:!0,[n.BIG]:!0,[n.BLOCKQUOTE]:!0,[n.BODY]:!0,[n.BR]:!0,[n.CENTER]:!0,[n.CODE]:!0,[n.DD]:!0,[n.DIV]:!0,[n.DL]:!0,[n.DT]:!0,[n.EM]:!0,[n.EMBED]:!0,[n.H1]:!0,[n.H2]:!0,[n.H3]:!0,[n.H4]:!0,[n.H5]:!0,[n.H6]:!0,[n.HEAD]:!0,[n.HR]:!0,[n.I]:!0,[n.IMG]:!0,[n.LI]:!0,[n.LISTING]:!0,[n.MENU]:!0,[n.META]:!0,[n.NOBR]:!0,[n.OL]:!0,[n.P]:!0,[n.PRE]:!0,[n.RUBY]:!0,[n.S]:!0,[n.SMALL]:!0,[n.SPAN]:!0,[n.STRONG]:!0,[n.STRIKE]:!0,[n.SUB]:!0,[n.SUP]:!0,[n.TABLE]:!0,[n.TT]:!0,[n.U]:!0,[n.UL]:!0,[n.VAR]:!0};t.causesExit=function(e){const t=e.tagName;return !!(t===n.FONT&&(null!==Ge.getTokenAttr(e,r.COLOR)||null!==Ge.getTokenAttr(e,r.SIZE)||null!==Ge.getTokenAttr(e,r.FACE)))||_[t]},t.adjustTokenMathMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++)if("definitionurl"===e.attrs[t].name){e.attrs[t].name="definitionURL";break}},t.adjustTokenSVGAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=o[e.attrs[t].name];n&&(e.attrs[t].name=n);}},t.adjustTokenXMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=E[e.attrs[t].name];n&&(e.attrs[t].prefix=n.prefix,e.attrs[t].name=n.name,e.attrs[t].namespace=n.namespace);}},t.adjustTokenSVGTagName=function(e){const t=a[e.tagName];t&&(e.tagName=t);},t.isIntegrationPoint=function(e,t,o,E){return !(E&&E!==s.HTML||!function(e,t,o){if(t===s.MATHML&&e===n.ANNOTATION_XML)for(let e=0;e<o.length;e++)if(o[e].name===r.ENCODING){const t=o[e].value.toLowerCase();return t===i||t===T}return t===s.SVG&&(e===n.FOREIGN_OBJECT||e===n.DESC||e===n.TITLE)}(e,t,o))||!(E&&E!==s.MATHML||!function(e,t){return t===s.MATHML&&(e===n.MI||e===n.MO||e===n.MN||e===n.MS||e===n.MTEXT)}(e,t))};}));const mt=be.TAG_NAMES,pt=be.NAMESPACES,Nt=be.ATTRS,ut={scriptingEnabled:!0,sourceCodeLocationInfo:!1,onParseError:null,treeAdapter:rt},Ot="IN_TABLE_MODE",St={[mt.TR]:"IN_ROW_MODE",[mt.TBODY]:"IN_TABLE_BODY_MODE",[mt.THEAD]:"IN_TABLE_BODY_MODE",[mt.TFOOT]:"IN_TABLE_BODY_MODE",[mt.CAPTION]:"IN_CAPTION_MODE",[mt.COLGROUP]:"IN_COLUMN_GROUP_MODE",[mt.TABLE]:Ot,[mt.BODY]:"IN_BODY_MODE",[mt.FRAMESET]:"IN_FRAMESET_MODE"},Ct={[mt.CAPTION]:Ot,[mt.COLGROUP]:Ot,[mt.TBODY]:Ot,[mt.TFOOT]:Ot,[mt.THEAD]:Ot,[mt.COL]:"IN_COLUMN_GROUP_MODE",[mt.TR]:"IN_TABLE_BODY_MODE",[mt.TD]:"IN_ROW_MODE",[mt.TH]:"IN_ROW_MODE"},dt={INITIAL_MODE:{[Ge.CHARACTER_TOKEN]:Kt,[Ge.NULL_CHARACTER_TOKEN]:Kt,[Ge.WHITESPACE_CHARACTER_TOKEN]:gt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:function(e,t){e._setDocumentType(t);const n=t.forceQuirks?be.DOCUMENT_MODE.QUIRKS:ct(t);At(t)||e._err(ie);e.treeAdapter.setDocumentMode(e.document,n),e.insertionMode="BEFORE_HTML_MODE";},[Ge.START_TAG_TOKEN]:Kt,[Ge.END_TAG_TOKEN]:Kt,[Ge.EOF_TOKEN]:Kt},BEFORE_HTML_MODE:{[Ge.CHARACTER_TOKEN]:bt,[Ge.NULL_CHARACTER_TOKEN]:bt,[Ge.WHITESPACE_CHARACTER_TOKEN]:gt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){t.tagName===mt.HTML?(e._insertElement(t,pt.HTML),e.insertionMode="BEFORE_HEAD_MODE"):bt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n!==mt.HTML&&n!==mt.HEAD&&n!==mt.BODY&&n!==mt.BR||bt(e,t);},[Ge.EOF_TOKEN]:bt},BEFORE_HEAD_MODE:{[Ge.CHARACTER_TOKEN]:Yt,[Ge.NULL_CHARACTER_TOKEN]:Yt,[Ge.WHITESPACE_CHARACTER_TOKEN]:gt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:Ht,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.HEAD?(e._insertElement(t,pt.HTML),e.headElement=e.openElements.current,e.insertionMode="IN_HEAD_MODE"):Yt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HEAD||n===mt.BODY||n===mt.HTML||n===mt.BR?Yt(e,t):e._err(Ee);},[Ge.EOF_TOKEN]:Yt},IN_HEAD_MODE:{[Ge.CHARACTER_TOKEN]:vt,[Ge.NULL_CHARACTER_TOKEN]:vt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:Ht,[Ge.START_TAG_TOKEN]:xt,[Ge.END_TAG_TOKEN]:yt,[Ge.EOF_TOKEN]:vt},IN_HEAD_NO_SCRIPT_MODE:{[Ge.CHARACTER_TOKEN]:wt,[Ge.NULL_CHARACTER_TOKEN]:wt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:Ht,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.BASEFONT||n===mt.BGSOUND||n===mt.HEAD||n===mt.LINK||n===mt.META||n===mt.NOFRAMES||n===mt.STYLE?xt(e,t):n===mt.NOSCRIPT?e._err(le):wt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.NOSCRIPT?(e.openElements.pop(),e.insertionMode="IN_HEAD_MODE"):n===mt.BR?wt(e,t):e._err(Ee);},[Ge.EOF_TOKEN]:wt},AFTER_HEAD_MODE:{[Ge.CHARACTER_TOKEN]:Qt,[Ge.NULL_CHARACTER_TOKEN]:Qt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:Ht,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.BODY?(e._insertElement(t,pt.HTML),e.framesetOk=!1,e.insertionMode="IN_BODY_MODE"):n===mt.FRAMESET?(e._insertElement(t,pt.HTML),e.insertionMode="IN_FRAMESET_MODE"):n===mt.BASE||n===mt.BASEFONT||n===mt.BGSOUND||n===mt.LINK||n===mt.META||n===mt.NOFRAMES||n===mt.SCRIPT||n===mt.STYLE||n===mt.TEMPLATE||n===mt.TITLE?(e._err(Ae),e.openElements.push(e.headElement),xt(e,t),e.openElements.remove(e.headElement)):n===mt.HEAD?e._err(ce):Qt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.BODY||n===mt.HTML||n===mt.BR?Qt(e,t):n===mt.TEMPLATE?yt(e,t):e._err(Ee);},[Ge.EOF_TOKEN]:Qt},IN_BODY_MODE:{[Ge.CHARACTER_TOKEN]:Wt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:sn,[Ge.END_TAG_TOKEN]:En,[Ge.EOF_TOKEN]:an},TEXT_MODE:{[Ge.CHARACTER_TOKEN]:Bt,[Ge.NULL_CHARACTER_TOKEN]:Bt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:gt,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:gt,[Ge.END_TAG_TOKEN]:function(e,t){t.tagName===mt.SCRIPT&&(e.pendingScript=e.openElements.current);e.openElements.pop(),e.insertionMode=e.originalInsertionMode;},[Ge.EOF_TOKEN]:function(e,t){e._err(me),e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e._processToken(t);}},[Ot]:{[Ge.CHARACTER_TOKEN]:_n,[Ge.NULL_CHARACTER_TOKEN]:_n,[Ge.WHITESPACE_CHARACTER_TOKEN]:_n,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:hn,[Ge.END_TAG_TOKEN]:An,[Ge.EOF_TOKEN]:an},IN_TABLE_TEXT_MODE:{[Ge.CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0;},[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t);},[Ge.COMMENT_TOKEN]:ln,[Ge.DOCTYPE_TOKEN]:ln,[Ge.START_TAG_TOKEN]:ln,[Ge.END_TAG_TOKEN]:ln,[Ge.EOF_TOKEN]:ln},IN_CAPTION_MODE:{[Ge.CHARACTER_TOKEN]:Wt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.CAPTION||n===mt.COL||n===mt.COLGROUP||n===mt.TBODY||n===mt.TD||n===mt.TFOOT||n===mt.TH||n===mt.THEAD||n===mt.TR?e.openElements.hasInTableScope(mt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(mt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=Ot,e._processToken(t)):sn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.CAPTION||n===mt.TABLE?e.openElements.hasInTableScope(mt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(mt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=Ot,n===mt.TABLE&&e._processToken(t)):n!==mt.BODY&&n!==mt.COL&&n!==mt.COLGROUP&&n!==mt.HTML&&n!==mt.TBODY&&n!==mt.TD&&n!==mt.TFOOT&&n!==mt.TH&&n!==mt.THEAD&&n!==mt.TR&&En(e,t);},[Ge.EOF_TOKEN]:an},IN_COLUMN_GROUP_MODE:{[Ge.CHARACTER_TOKEN]:mn,[Ge.NULL_CHARACTER_TOKEN]:mn,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.COL?(e._appendElement(t,pt.HTML),t.ackSelfClosing=!0):n===mt.TEMPLATE?xt(e,t):mn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.COLGROUP?e.openElements.currentTagName===mt.COLGROUP&&(e.openElements.pop(),e.insertionMode=Ot):n===mt.TEMPLATE?yt(e,t):n!==mt.COL&&mn(e,t);},[Ge.EOF_TOKEN]:an},IN_TABLE_BODY_MODE:{[Ge.CHARACTER_TOKEN]:_n,[Ge.NULL_CHARACTER_TOKEN]:_n,[Ge.WHITESPACE_CHARACTER_TOKEN]:_n,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.TR?(e.openElements.clearBackToTableBodyContext(),e._insertElement(t,pt.HTML),e.insertionMode="IN_ROW_MODE"):n===mt.TH||n===mt.TD?(e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(mt.TR),e.insertionMode="IN_ROW_MODE",e._processToken(t)):n===mt.CAPTION||n===mt.COL||n===mt.COLGROUP||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Ot,e._processToken(t)):hn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD?e.openElements.hasInTableScope(n)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Ot):n===mt.TABLE?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Ot,e._processToken(t)):(n!==mt.BODY&&n!==mt.CAPTION&&n!==mt.COL&&n!==mt.COLGROUP||n!==mt.HTML&&n!==mt.TD&&n!==mt.TH&&n!==mt.TR)&&An(e,t);},[Ge.EOF_TOKEN]:an},IN_ROW_MODE:{[Ge.CHARACTER_TOKEN]:_n,[Ge.NULL_CHARACTER_TOKEN]:_n,[Ge.WHITESPACE_CHARACTER_TOKEN]:_n,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.TH||n===mt.TD?(e.openElements.clearBackToTableRowContext(),e._insertElement(t,pt.HTML),e.insertionMode="IN_CELL_MODE",e.activeFormattingElements.insertMarker()):n===mt.CAPTION||n===mt.COL||n===mt.COLGROUP||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD||n===mt.TR?e.openElements.hasInTableScope(mt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode="IN_TABLE_BODY_MODE",e._processToken(t)):hn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.TR?e.openElements.hasInTableScope(mt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode="IN_TABLE_BODY_MODE"):n===mt.TABLE?e.openElements.hasInTableScope(mt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode="IN_TABLE_BODY_MODE",e._processToken(t)):n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD?(e.openElements.hasInTableScope(n)||e.openElements.hasInTableScope(mt.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode="IN_TABLE_BODY_MODE",e._processToken(t)):(n!==mt.BODY&&n!==mt.CAPTION&&n!==mt.COL&&n!==mt.COLGROUP||n!==mt.HTML&&n!==mt.TD&&n!==mt.TH)&&An(e,t);},[Ge.EOF_TOKEN]:an},IN_CELL_MODE:{[Ge.CHARACTER_TOKEN]:Wt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.CAPTION||n===mt.COL||n===mt.COLGROUP||n===mt.TBODY||n===mt.TD||n===mt.TFOOT||n===mt.TH||n===mt.THEAD||n===mt.TR?(e.openElements.hasInTableScope(mt.TD)||e.openElements.hasInTableScope(mt.TH))&&(e._closeTableCell(),e._processToken(t)):sn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.TD||n===mt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker(),e.insertionMode="IN_ROW_MODE"):n===mt.TABLE||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD||n===mt.TR?e.openElements.hasInTableScope(n)&&(e._closeTableCell(),e._processToken(t)):n!==mt.BODY&&n!==mt.CAPTION&&n!==mt.COL&&n!==mt.COLGROUP&&n!==mt.HTML&&En(e,t);},[Ge.EOF_TOKEN]:an},IN_SELECT_MODE:{[Ge.CHARACTER_TOKEN]:Bt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:pn,[Ge.END_TAG_TOKEN]:Nn,[Ge.EOF_TOKEN]:an},IN_SELECT_IN_TABLE_MODE:{[Ge.CHARACTER_TOKEN]:Bt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.CAPTION||n===mt.TABLE||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD||n===mt.TR||n===mt.TD||n===mt.TH?(e.openElements.popUntilTagNamePopped(mt.SELECT),e._resetInsertionMode(),e._processToken(t)):pn(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.CAPTION||n===mt.TABLE||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD||n===mt.TR||n===mt.TD||n===mt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.popUntilTagNamePopped(mt.SELECT),e._resetInsertionMode(),e._processToken(t)):Nn(e,t);},[Ge.EOF_TOKEN]:an},IN_TEMPLATE_MODE:{[Ge.CHARACTER_TOKEN]:Wt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;if(n===mt.BASE||n===mt.BASEFONT||n===mt.BGSOUND||n===mt.LINK||n===mt.META||n===mt.NOFRAMES||n===mt.SCRIPT||n===mt.STYLE||n===mt.TEMPLATE||n===mt.TITLE)xt(e,t);else {const s=Ct[n]||"IN_BODY_MODE";e._popTmplInsertionMode(),e._pushTmplInsertionMode(s),e.insertionMode=s,e._processToken(t);}},[Ge.END_TAG_TOKEN]:function(e,t){t.tagName===mt.TEMPLATE&&yt(e,t);},[Ge.EOF_TOKEN]:un},AFTER_BODY_MODE:{[Ge.CHARACTER_TOKEN]:On,[Ge.NULL_CHARACTER_TOKEN]:On,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:function(e,t){e._appendCommentNode(t,e.openElements.items[0]);},[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){t.tagName===mt.HTML?sn(e,t):On(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){t.tagName===mt.HTML?e.fragmentContext||(e.insertionMode="AFTER_AFTER_BODY_MODE"):On(e,t);},[Ge.EOF_TOKEN]:Gt},IN_FRAMESET_MODE:{[Ge.CHARACTER_TOKEN]:gt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.FRAMESET?e._insertElement(t,pt.HTML):n===mt.FRAME?(e._appendElement(t,pt.HTML),t.ackSelfClosing=!0):n===mt.NOFRAMES&&xt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){t.tagName!==mt.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagName===mt.FRAMESET||(e.insertionMode="AFTER_FRAMESET_MODE"));},[Ge.EOF_TOKEN]:Gt},AFTER_FRAMESET_MODE:{[Ge.CHARACTER_TOKEN]:gt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Bt,[Ge.COMMENT_TOKEN]:Ut,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.NOFRAMES&&xt(e,t);},[Ge.END_TAG_TOKEN]:function(e,t){t.tagName===mt.HTML&&(e.insertionMode="AFTER_AFTER_FRAMESET_MODE");},[Ge.EOF_TOKEN]:Gt},AFTER_AFTER_BODY_MODE:{[Ge.CHARACTER_TOKEN]:Sn,[Ge.NULL_CHARACTER_TOKEN]:Sn,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ft,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){t.tagName===mt.HTML?sn(e,t):Sn(e,t);},[Ge.END_TAG_TOKEN]:Sn,[Ge.EOF_TOKEN]:Gt},AFTER_AFTER_FRAMESET_MODE:{[Ge.CHARACTER_TOKEN]:gt,[Ge.NULL_CHARACTER_TOKEN]:gt,[Ge.WHITESPACE_CHARACTER_TOKEN]:Xt,[Ge.COMMENT_TOKEN]:Ft,[Ge.DOCTYPE_TOKEN]:gt,[Ge.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.NOFRAMES&&xt(e,t);},[Ge.END_TAG_TOKEN]:gt,[Ge.EOF_TOKEN]:Gt}};var Rt=class{constructor(e){this.options=function(e,t){return [e,t=t||Object.create(null)].reduce((e,t)=>(Object.keys(t).forEach(n=>{e[n]=t[n];}),e),Object.create(null))}(ut,e),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.sourceCodeLocationInfo&&je.install(this,$e),this.options.onParseError&&je.install(this,st,{onParseError:this.options.onParseError});}parse(e){const t=this.treeAdapter.createDocument();return this._bootstrap(t,null),this.tokenizer.write(e,!0),this._runParsingLoop(null),t}parseFragment(e,t){t||(t=this.treeAdapter.createElement(mt.TEMPLATE,pt.HTML,[]));const n=this.treeAdapter.createElement("documentmock",pt.HTML,[]);this._bootstrap(n,t),this.treeAdapter.getTagName(t)===mt.TEMPLATE&&this._pushTmplInsertionMode("IN_TEMPLATE_MODE"),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(e,!0),this._runParsingLoop(null);const s=this.treeAdapter.getFirstChild(n),r=this.treeAdapter.createDocumentFragment();return this._adoptNodes(s,r),r}_bootstrap(e,t){this.tokenizer=new Ge(this.options),this.stopped=!1,this.insertionMode="INITIAL_MODE",this.originalInsertionMode="",this.document=e,this.fragmentContext=t,this.headElement=null,this.formElement=null,this.openElements=new Qe(this.document,this.treeAdapter),this.activeFormattingElements=new We(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1;}_err(){}_runParsingLoop(e){for(;!this.stopped;){this._setupTokenizerCDATAMode();const t=this.tokenizer.getNextToken();if(t.type===Ge.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,t.type===Ge.WHITESPACE_CHARACTER_TOKEN&&"\n"===t.chars[0])){if(1===t.chars.length)continue;t.chars=t.chars.substr(1);}if(this._processInputToken(t),e&&this.pendingScript)break}}runParsingLoopForCurrentChunk(e,t){if(this._runParsingLoop(t),t&&this.pendingScript){const e=this.pendingScript;return this.pendingScript=null,void t(e)}e&&e();}_setupTokenizerCDATAMode(){const e=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=e&&e!==this.document&&this.treeAdapter.getNamespaceURI(e)!==pt.HTML&&!this._isIntegrationPoint(e);}_switchToTextParsing(e,t){this._insertElement(e,pt.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode="TEXT_MODE";}switchToPlaintextParsing(){this.insertionMode="TEXT_MODE",this.originalInsertionMode="IN_BODY_MODE",this.tokenizer.state=Ge.MODE.PLAINTEXT;}_getAdjustedCurrentElement(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current}_findFormInFragmentContext(){let e=this.fragmentContext;do{if(this.treeAdapter.getTagName(e)===mt.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e);}while(e)}_initTokenizerForFragmentParsing(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===pt.HTML){const e=this.treeAdapter.getTagName(this.fragmentContext);e===mt.TITLE||e===mt.TEXTAREA?this.tokenizer.state=Ge.MODE.RCDATA:e===mt.STYLE||e===mt.XMP||e===mt.IFRAME||e===mt.NOEMBED||e===mt.NOFRAMES||e===mt.NOSCRIPT?this.tokenizer.state=Ge.MODE.RAWTEXT:e===mt.SCRIPT?this.tokenizer.state=Ge.MODE.SCRIPT_DATA:e===mt.PLAINTEXT&&(this.tokenizer.state=Ge.MODE.PLAINTEXT);}}_setDocumentType(e){const t=e.name||"",n=e.publicId||"",s=e.systemId||"";this.treeAdapter.setDocumentType(this.document,t,n,s);}_attachElementToTree(e){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(t,e);}}_appendElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n);}_insertElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n),this.openElements.push(n);}_insertFakeElement(e){const t=this.treeAdapter.createElement(e,pt.HTML,[]);this._attachElementToTree(t),this.openElements.push(t);}_insertTemplate(e){const t=this.treeAdapter.createElement(e.tagName,pt.HTML,e.attrs),n=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,n),this._attachElementToTree(t),this.openElements.push(t);}_insertFakeRootElement(){const e=this.treeAdapter.createElement(mt.HTML,pt.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e);}_appendCommentNode(e,t){const n=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,n);}_insertCharacters(e){if(this._shouldFosterParentOnInsertion())this._fosterParentText(e.chars);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(t,e.chars);}}_adoptNodes(e,t){for(let n=this.treeAdapter.getFirstChild(e);n;n=this.treeAdapter.getFirstChild(e))this.treeAdapter.detachNode(n),this.treeAdapter.appendChild(t,n);}_shouldProcessTokenInForeignContent(e){const t=this._getAdjustedCurrentElement();if(!t||t===this.document)return !1;const n=this.treeAdapter.getNamespaceURI(t);if(n===pt.HTML)return !1;if(this.treeAdapter.getTagName(t)===mt.ANNOTATION_XML&&n===pt.MATHML&&e.type===Ge.START_TAG_TOKEN&&e.tagName===mt.SVG)return !1;const s=e.type===Ge.CHARACTER_TOKEN||e.type===Ge.NULL_CHARACTER_TOKEN||e.type===Ge.WHITESPACE_CHARACTER_TOKEN;return (!(e.type===Ge.START_TAG_TOKEN&&e.tagName!==mt.MGLYPH&&e.tagName!==mt.MALIGNMARK)&&!s||!this._isIntegrationPoint(t,pt.MATHML))&&((e.type!==Ge.START_TAG_TOKEN&&!s||!this._isIntegrationPoint(t,pt.HTML))&&e.type!==Ge.EOF_TOKEN)}_processToken(e){dt[this.insertionMode][e.type](this,e);}_processTokenInBodyMode(e){dt.IN_BODY_MODE[e.type](this,e);}_processTokenInForeignContent(e){e.type===Ge.CHARACTER_TOKEN?function(e,t){e._insertCharacters(t),e.framesetOk=!1;}(this,e):e.type===Ge.NULL_CHARACTER_TOKEN?function(e,t){t.chars=n,e._insertCharacters(t);}(this,e):e.type===Ge.WHITESPACE_CHARACTER_TOKEN?Bt(this,e):e.type===Ge.COMMENT_TOKEN?Ut(this,e):e.type===Ge.START_TAG_TOKEN?function(e,t){if(lt.causesExit(t)&&!e.fragmentContext){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==pt.HTML&&!e._isIntegrationPoint(e.openElements.current);)e.openElements.pop();e._processToken(t);}else {const n=e._getAdjustedCurrentElement(),s=e.treeAdapter.getNamespaceURI(n);s===pt.MATHML?lt.adjustTokenMathMLAttrs(t):s===pt.SVG&&(lt.adjustTokenSVGTagName(t),lt.adjustTokenSVGAttrs(t)),lt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,s):e._insertElement(t,s),t.ackSelfClosing=!0;}}(this,e):e.type===Ge.END_TAG_TOKEN&&function(e,t){for(let n=e.openElements.stackTop;n>0;n--){const s=e.openElements.items[n];if(e.treeAdapter.getNamespaceURI(s)===pt.HTML){e._processToken(t);break}if(e.treeAdapter.getTagName(s).toLowerCase()===t.tagName){e.openElements.popUntilElementPopped(s);break}}}(this,e);}_processInputToken(e){this._shouldProcessTokenInForeignContent(e)?this._processTokenInForeignContent(e):this._processToken(e),e.type===Ge.START_TAG_TOKEN&&e.selfClosing&&!e.ackSelfClosing&&this._err(c);}_isIntegrationPoint(e,t){const n=this.treeAdapter.getTagName(e),s=this.treeAdapter.getNamespaceURI(e),r=this.treeAdapter.getAttrList(e);return lt.isIntegrationPoint(n,s,r,t)}_reconstructActiveFormattingElements(){const e=this.activeFormattingElements.length;if(e){let t=e,n=null;do{if(t--,n=this.activeFormattingElements.entries[t],n.type===We.MARKER_ENTRY||this.openElements.contains(n.element)){t++;break}}while(t>0);for(let s=t;s<e;s++)n=this.activeFormattingElements.entries[s],this._insertElement(n.token,this.treeAdapter.getNamespaceURI(n.element)),n.element=this.openElements.current;}}_closeTableCell(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode="IN_ROW_MODE";}_closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(mt.P),this.openElements.popUntilTagNamePopped(mt.P);}_resetInsertionMode(){for(let e=this.openElements.stackTop,t=!1;e>=0;e--){let n=this.openElements.items[e];0===e&&(t=!0,this.fragmentContext&&(n=this.fragmentContext));const s=this.treeAdapter.getTagName(n),r=St[s];if(r){this.insertionMode=r;break}if(!(t||s!==mt.TD&&s!==mt.TH)){this.insertionMode="IN_CELL_MODE";break}if(!t&&s===mt.HEAD){this.insertionMode="IN_HEAD_MODE";break}if(s===mt.SELECT){this._resetInsertionModeForSelect(e);break}if(s===mt.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}if(s===mt.HTML){this.insertionMode=this.headElement?"AFTER_HEAD_MODE":"BEFORE_HEAD_MODE";break}if(t){this.insertionMode="IN_BODY_MODE";break}}}_resetInsertionModeForSelect(e){if(e>0)for(let t=e-1;t>0;t--){const e=this.openElements.items[t],n=this.treeAdapter.getTagName(e);if(n===mt.TEMPLATE)break;if(n===mt.TABLE)return void(this.insertionMode="IN_SELECT_IN_TABLE_MODE")}this.insertionMode="IN_SELECT_MODE";}_pushTmplInsertionMode(e){this.tmplInsertionModeStack.push(e),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=e;}_popTmplInsertionMode(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];}_isElementCausesFosterParenting(e){const t=this.treeAdapter.getTagName(e);return t===mt.TABLE||t===mt.TBODY||t===mt.TFOOT||t===mt.THEAD||t===mt.TR}_shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)}_findFosterParentingLocation(){const e={parent:null,beforeElement:null};for(let t=this.openElements.stackTop;t>=0;t--){const n=this.openElements.items[t],s=this.treeAdapter.getTagName(n),r=this.treeAdapter.getNamespaceURI(n);if(s===mt.TEMPLATE&&r===pt.HTML){e.parent=this.treeAdapter.getTemplateContent(n);break}if(s===mt.TABLE){e.parent=this.treeAdapter.getParentNode(n),e.parent?e.beforeElement=n:e.parent=this.openElements.items[t-1];break}}return e.parent||(e.parent=this.openElements.items[0]),e}_fosterParentElement(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e);}_fosterParentText(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertTextBefore(t.parent,e,t.beforeElement):this.treeAdapter.insertText(t.parent,e);}_isSpecialElement(e){const t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);return be.SPECIAL_ELEMENTS[n][t]}};function It(e,t){let n=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return n?e.openElements.contains(n.element)?e.openElements.hasInScope(t.tagName)||(n=null):(e.activeFormattingElements.removeEntry(n),n=null):on(e,t),n}function ft(e,t){let n=null;for(let s=e.openElements.stackTop;s>=0;s--){const r=e.openElements.items[s];if(r===t.element)break;e._isSpecialElement(r)&&(n=r);}return n||(e.openElements.popUntilElementPopped(t.element),e.activeFormattingElements.removeEntry(t)),n}function Mt(e,t,n){let s=t,r=e.openElements.getCommonAncestor(t);for(let i=0,T=r;T!==n;i++,T=r){r=e.openElements.getCommonAncestor(T);const n=e.activeFormattingElements.getElementEntry(T),o=n&&i>=3;!n||o?(o&&e.activeFormattingElements.removeEntry(n),e.openElements.remove(T)):(T=Lt(e,n),s===t&&(e.activeFormattingElements.bookmark=n),e.treeAdapter.detachNode(s),e.treeAdapter.appendChild(T,s),s=T);}return s}function Lt(e,t){const n=e.treeAdapter.getNamespaceURI(t.element),s=e.treeAdapter.createElement(t.token.tagName,n,t.token.attrs);return e.openElements.replace(t.element,s),t.element=s,s}function Dt(e,t,n){if(e._isElementCausesFosterParenting(t))e._fosterParentElement(n);else {const s=e.treeAdapter.getTagName(t),r=e.treeAdapter.getNamespaceURI(t);s===mt.TEMPLATE&&r===pt.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,n);}}function kt(e,t,n){const s=e.treeAdapter.getNamespaceURI(n.element),r=n.token,i=e.treeAdapter.createElement(r.tagName,s,r.attrs);e._adoptNodes(t,i),e.treeAdapter.appendChild(t,i),e.activeFormattingElements.insertElementAfterBookmark(i,n.token),e.activeFormattingElements.removeEntry(n),e.openElements.remove(n.element),e.openElements.insertAfter(t,i);}function Pt(e,t){let n;for(let s=0;s<8&&(n=It(e,t),n);s++){const t=ft(e,n);if(!t)break;e.activeFormattingElements.bookmark=n;const s=Mt(e,t,n.element),r=e.openElements.getCommonAncestor(n.element);e.treeAdapter.detachNode(s),Dt(e,r,s),kt(e,t,n);}}function gt(){}function Ht(e){e._err(oe);}function Ut(e,t){e._appendCommentNode(t,e.openElements.currentTmplContent||e.openElements.current);}function Ft(e,t){e._appendCommentNode(t,e.document);}function Bt(e,t){e._insertCharacters(t);}function Gt(e){e.stopped=!0;}function Kt(e,t){e._err(Te,{beforeToken:!0}),e.treeAdapter.setDocumentMode(e.document,be.DOCUMENT_MODE.QUIRKS),e.insertionMode="BEFORE_HTML_MODE",e._processToken(t);}function bt(e,t){e._insertFakeRootElement(),e.insertionMode="BEFORE_HEAD_MODE",e._processToken(t);}function Yt(e,t){e._insertFakeElement(mt.HEAD),e.headElement=e.openElements.current,e.insertionMode="IN_HEAD_MODE",e._processToken(t);}function xt(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.BASE||n===mt.BASEFONT||n===mt.BGSOUND||n===mt.LINK||n===mt.META?(e._appendElement(t,pt.HTML),t.ackSelfClosing=!0):n===mt.TITLE?e._switchToTextParsing(t,Ge.MODE.RCDATA):n===mt.NOSCRIPT?e.options.scriptingEnabled?e._switchToTextParsing(t,Ge.MODE.RAWTEXT):(e._insertElement(t,pt.HTML),e.insertionMode="IN_HEAD_NO_SCRIPT_MODE"):n===mt.NOFRAMES||n===mt.STYLE?e._switchToTextParsing(t,Ge.MODE.RAWTEXT):n===mt.SCRIPT?e._switchToTextParsing(t,Ge.MODE.SCRIPT_DATA):n===mt.TEMPLATE?(e._insertTemplate(t,pt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode="IN_TEMPLATE_MODE",e._pushTmplInsertionMode("IN_TEMPLATE_MODE")):n===mt.HEAD?e._err(ce):vt(e,t);}function yt(e,t){const n=t.tagName;n===mt.HEAD?(e.openElements.pop(),e.insertionMode="AFTER_HEAD_MODE"):n===mt.BODY||n===mt.BR||n===mt.HTML?vt(e,t):n===mt.TEMPLATE&&e.openElements.tmplCount>0?(e.openElements.generateImpliedEndTagsThoroughly(),e.openElements.currentTagName!==mt.TEMPLATE&&e._err(ae),e.openElements.popUntilTagNamePopped(mt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode()):e._err(Ee);}function vt(e,t){e.openElements.pop(),e.insertionMode="AFTER_HEAD_MODE",e._processToken(t);}function wt(e,t){const n=t.type===Ge.EOF_TOKEN?he:_e;e._err(n),e.openElements.pop(),e.insertionMode="IN_HEAD_MODE",e._processToken(t);}function Qt(e,t){e._insertFakeElement(mt.BODY),e.insertionMode="IN_BODY_MODE",e._processToken(t);}function Xt(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t);}function Wt(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1;}function Vt(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML);}function jt(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML),e.skipNextNewLine=!0,e.framesetOk=!1;}function zt(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}function qt(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1;}function Jt(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,pt.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}function Zt(e,t){e._appendElement(t,pt.HTML),t.ackSelfClosing=!0;}function $t(e,t){e._switchToTextParsing(t,Ge.MODE.RAWTEXT);}function en(e,t){e.openElements.currentTagName===mt.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML);}function tn(e,t){e.openElements.hasInScope(mt.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,pt.HTML);}function nn(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML);}function sn(e,t){const n=t.tagName;switch(n.length){case 1:n===mt.I||n===mt.S||n===mt.B||n===mt.U?zt(e,t):n===mt.P?Vt(e,t):n===mt.A?function(e,t){const n=e.activeFormattingElements.getElementEntryInScopeWithTagName(mt.A);n&&(Pt(e,t),e.openElements.remove(n.element),e.activeFormattingElements.removeEntry(n)),e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):nn(e,t);break;case 2:n===mt.DL||n===mt.OL||n===mt.UL?Vt(e,t):n===mt.H1||n===mt.H2||n===mt.H3||n===mt.H4||n===mt.H5||n===mt.H6?function(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement();const n=e.openElements.currentTagName;n!==mt.H1&&n!==mt.H2&&n!==mt.H3&&n!==mt.H4&&n!==mt.H5&&n!==mt.H6||e.openElements.pop(),e._insertElement(t,pt.HTML);}(e,t):n===mt.LI||n===mt.DD||n===mt.DT?function(e,t){e.framesetOk=!1;const n=t.tagName;for(let t=e.openElements.stackTop;t>=0;t--){const s=e.openElements.items[t],r=e.treeAdapter.getTagName(s);let i=null;if(n===mt.LI&&r===mt.LI?i=mt.LI:n!==mt.DD&&n!==mt.DT||r!==mt.DD&&r!==mt.DT||(i=r),i){e.openElements.generateImpliedEndTagsWithExclusion(i),e.openElements.popUntilTagNamePopped(i);break}if(r!==mt.ADDRESS&&r!==mt.DIV&&r!==mt.P&&e._isSpecialElement(s))break}e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML);}(e,t):n===mt.EM||n===mt.TT?zt(e,t):n===mt.BR?Jt(e,t):n===mt.HR?function(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._appendElement(t,pt.HTML),e.framesetOk=!1,e.ackSelfClosing=!0;}(e,t):n===mt.RB?tn(e,t):n===mt.RT||n===mt.RP?function(e,t){e.openElements.hasInScope(mt.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(mt.RTC),e._insertElement(t,pt.HTML);}(e,t):n!==mt.TH&&n!==mt.TD&&n!==mt.TR&&nn(e,t);break;case 3:n===mt.DIV||n===mt.DIR||n===mt.NAV?Vt(e,t):n===mt.PRE?jt(e,t):n===mt.BIG?zt(e,t):n===mt.IMG||n===mt.WBR?Jt(e,t):n===mt.XMP?function(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,Ge.MODE.RAWTEXT);}(e,t):n===mt.SVG?function(e,t){e._reconstructActiveFormattingElements(),lt.adjustTokenSVGAttrs(t),lt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,pt.SVG):e._insertElement(t,pt.SVG),t.ackSelfClosing=!0;}(e,t):n===mt.RTC?tn(e,t):n!==mt.COL&&nn(e,t);break;case 4:n===mt.HTML?function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs);}(e,t):n===mt.BASE||n===mt.LINK||n===mt.META?xt(e,t):n===mt.BODY?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();n&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(n,t.attrs));}(e,t):n===mt.MAIN||n===mt.MENU?Vt(e,t):n===mt.FORM?function(e,t){const n=e.openElements.tmplCount>0;e.formElement&&!n||(e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML),n||(e.formElement=e.openElements.current));}(e,t):n===mt.CODE||n===mt.FONT?zt(e,t):n===mt.NOBR?function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(mt.NOBR)&&(Pt(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,pt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):n===mt.AREA?Jt(e,t):n===mt.MATH?function(e,t){e._reconstructActiveFormattingElements(),lt.adjustTokenMathMLAttrs(t),lt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,pt.MATHML):e._insertElement(t,pt.MATHML),t.ackSelfClosing=!0;}(e,t):n===mt.MENU?function(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML);}(e,t):n!==mt.HEAD&&nn(e,t);break;case 5:n===mt.STYLE||n===mt.TITLE?xt(e,t):n===mt.ASIDE?Vt(e,t):n===mt.SMALL?zt(e,t):n===mt.TABLE?function(e,t){e.treeAdapter.getDocumentMode(e.document)!==be.DOCUMENT_MODE.QUIRKS&&e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML),e.framesetOk=!1,e.insertionMode=Ot;}(e,t):n===mt.EMBED?Jt(e,t):n===mt.INPUT?function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,pt.HTML);const n=Ge.getTokenAttr(t,Nt.TYPE);n&&"hidden"===n.toLowerCase()||(e.framesetOk=!1),t.ackSelfClosing=!0;}(e,t):n===mt.PARAM||n===mt.TRACK?Zt(e,t):n===mt.IMAGE?function(e,t){t.tagName=mt.IMG,Jt(e,t);}(e,t):n!==mt.FRAME&&n!==mt.TBODY&&n!==mt.TFOOT&&n!==mt.THEAD&&nn(e,t);break;case 6:n===mt.SCRIPT?xt(e,t):n===mt.CENTER||n===mt.FIGURE||n===mt.FOOTER||n===mt.HEADER||n===mt.HGROUP||n===mt.DIALOG?Vt(e,t):n===mt.BUTTON?function(e,t){e.openElements.hasInScope(mt.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(mt.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML),e.framesetOk=!1;}(e,t):n===mt.STRIKE||n===mt.STRONG?zt(e,t):n===mt.APPLET||n===mt.OBJECT?qt(e,t):n===mt.KEYGEN?Jt(e,t):n===mt.SOURCE?Zt(e,t):n===mt.IFRAME?function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,Ge.MODE.RAWTEXT);}(e,t):n===mt.SELECT?function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,pt.HTML),e.framesetOk=!1,e.insertionMode===Ot||"IN_CAPTION_MODE"===e.insertionMode||"IN_TABLE_BODY_MODE"===e.insertionMode||"IN_ROW_MODE"===e.insertionMode||"IN_CELL_MODE"===e.insertionMode?e.insertionMode="IN_SELECT_IN_TABLE_MODE":e.insertionMode="IN_SELECT_MODE";}(e,t):n===mt.OPTION?en(e,t):nn(e,t);break;case 7:n===mt.BGSOUND?xt(e,t):n===mt.DETAILS||n===mt.ADDRESS||n===mt.ARTICLE||n===mt.SECTION||n===mt.SUMMARY?Vt(e,t):n===mt.LISTING?jt(e,t):n===mt.MARQUEE?qt(e,t):n===mt.NOEMBED?$t(e,t):n!==mt.CAPTION&&nn(e,t);break;case 8:n===mt.BASEFONT?xt(e,t):n===mt.FRAMESET?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&n&&(e.treeAdapter.detachNode(n),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,pt.HTML),e.insertionMode="IN_FRAMESET_MODE");}(e,t):n===mt.FIELDSET?Vt(e,t):n===mt.TEXTAREA?function(e,t){e._insertElement(t,pt.HTML),e.skipNextNewLine=!0,e.tokenizer.state=Ge.MODE.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode="TEXT_MODE";}(e,t):n===mt.TEMPLATE?xt(e,t):n===mt.NOSCRIPT?e.options.scriptingEnabled?$t(e,t):nn(e,t):n===mt.OPTGROUP?en(e,t):n!==mt.COLGROUP&&nn(e,t);break;case 9:n===mt.PLAINTEXT?function(e,t){e.openElements.hasInButtonScope(mt.P)&&e._closePElement(),e._insertElement(t,pt.HTML),e.tokenizer.state=Ge.MODE.PLAINTEXT;}(e,t):nn(e,t);break;case 10:n===mt.BLOCKQUOTE||n===mt.FIGCAPTION?Vt(e,t):nn(e,t);break;default:nn(e,t);}}function rn(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n));}function Tn(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker());}function on(e,t){const n=t.tagName;for(let t=e.openElements.stackTop;t>0;t--){const s=e.openElements.items[t];if(e.treeAdapter.getTagName(s)===n){e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilElementPopped(s);break}if(e._isSpecialElement(s))break}}function En(e,t){const n=t.tagName;switch(n.length){case 1:n===mt.A||n===mt.B||n===mt.I||n===mt.S||n===mt.U?Pt(e,t):n===mt.P?function(e){e.openElements.hasInButtonScope(mt.P)||e._insertFakeElement(mt.P),e._closePElement();}(e):on(e,t);break;case 2:n===mt.DL||n===mt.UL||n===mt.OL?rn(e,t):n===mt.LI?function(e){e.openElements.hasInListItemScope(mt.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(mt.LI),e.openElements.popUntilTagNamePopped(mt.LI));}(e):n===mt.DD||n===mt.DT?function(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilTagNamePopped(n));}(e,t):n===mt.H1||n===mt.H2||n===mt.H3||n===mt.H4||n===mt.H5||n===mt.H6?function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped());}(e):n===mt.BR?function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(mt.BR),e.openElements.pop(),e.framesetOk=!1;}(e):n===mt.EM||n===mt.TT?Pt(e,t):on(e,t);break;case 3:n===mt.BIG?Pt(e,t):n===mt.DIR||n===mt.DIV||n===mt.NAV||n===mt.PRE?rn(e,t):on(e,t);break;case 4:n===mt.BODY?function(e){e.openElements.hasInScope(mt.BODY)&&(e.insertionMode="AFTER_BODY_MODE");}(e):n===mt.HTML?function(e,t){e.openElements.hasInScope(mt.BODY)&&(e.insertionMode="AFTER_BODY_MODE",e._processToken(t));}(e,t):n===mt.FORM?function(e){const t=e.openElements.tmplCount>0,n=e.formElement;t||(e.formElement=null),(n||t)&&e.openElements.hasInScope(mt.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(mt.FORM):e.openElements.remove(n));}(e):n===mt.CODE||n===mt.FONT||n===mt.NOBR?Pt(e,t):n===mt.MAIN||n===mt.MENU?rn(e,t):on(e,t);break;case 5:n===mt.ASIDE?rn(e,t):n===mt.SMALL?Pt(e,t):on(e,t);break;case 6:n===mt.CENTER||n===mt.FIGURE||n===mt.FOOTER||n===mt.HEADER||n===mt.HGROUP||n===mt.DIALOG?rn(e,t):n===mt.APPLET||n===mt.OBJECT?Tn(e,t):n===mt.STRIKE||n===mt.STRONG?Pt(e,t):on(e,t);break;case 7:n===mt.ADDRESS||n===mt.ARTICLE||n===mt.DETAILS||n===mt.SECTION||n===mt.SUMMARY||n===mt.LISTING?rn(e,t):n===mt.MARQUEE?Tn(e,t):on(e,t);break;case 8:n===mt.FIELDSET?rn(e,t):n===mt.TEMPLATE?yt(e,t):on(e,t);break;case 10:n===mt.BLOCKQUOTE||n===mt.FIGCAPTION?rn(e,t):on(e,t);break;default:on(e,t);}}function an(e,t){e.tmplInsertionModeStackTop>-1?un(e,t):e.stopped=!0;}function _n(e,t){const n=e.openElements.currentTagName;n===mt.TABLE||n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD||n===mt.TR?(e.pendingCharacterTokens=[],e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode="IN_TABLE_TEXT_MODE",e._processToken(t)):cn(e,t);}function hn(e,t){const n=t.tagName;switch(n.length){case 2:n===mt.TD||n===mt.TH||n===mt.TR?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(mt.TBODY),e.insertionMode="IN_TABLE_BODY_MODE",e._processToken(t);}(e,t):cn(e,t);break;case 3:n===mt.COL?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(mt.COLGROUP),e.insertionMode="IN_COLUMN_GROUP_MODE",e._processToken(t);}(e,t):cn(e,t);break;case 4:n===mt.FORM?function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,pt.HTML),e.formElement=e.openElements.current,e.openElements.pop());}(e,t):cn(e,t);break;case 5:n===mt.TABLE?function(e,t){e.openElements.hasInTableScope(mt.TABLE)&&(e.openElements.popUntilTagNamePopped(mt.TABLE),e._resetInsertionMode(),e._processToken(t));}(e,t):n===mt.STYLE?xt(e,t):n===mt.TBODY||n===mt.TFOOT||n===mt.THEAD?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,pt.HTML),e.insertionMode="IN_TABLE_BODY_MODE";}(e,t):n===mt.INPUT?function(e,t){const n=Ge.getTokenAttr(t,Nt.TYPE);n&&"hidden"===n.toLowerCase()?e._appendElement(t,pt.HTML):cn(e,t),t.ackSelfClosing=!0;}(e,t):cn(e,t);break;case 6:n===mt.SCRIPT?xt(e,t):cn(e,t);break;case 7:n===mt.CAPTION?function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,pt.HTML),e.insertionMode="IN_CAPTION_MODE";}(e,t):cn(e,t);break;case 8:n===mt.COLGROUP?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,pt.HTML),e.insertionMode="IN_COLUMN_GROUP_MODE";}(e,t):n===mt.TEMPLATE?xt(e,t):cn(e,t);break;default:cn(e,t);}}function An(e,t){const n=t.tagName;n===mt.TABLE?e.openElements.hasInTableScope(mt.TABLE)&&(e.openElements.popUntilTagNamePopped(mt.TABLE),e._resetInsertionMode()):n===mt.TEMPLATE?yt(e,t):n!==mt.BODY&&n!==mt.CAPTION&&n!==mt.COL&&n!==mt.COLGROUP&&n!==mt.HTML&&n!==mt.TBODY&&n!==mt.TD&&n!==mt.TFOOT&&n!==mt.TH&&n!==mt.THEAD&&n!==mt.TR&&cn(e,t);}function cn(e,t){const n=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,e._processTokenInBodyMode(t),e.fosterParentingEnabled=n;}function ln(e,t){let n=0;if(e.hasNonWhitespacePendingCharacterToken)for(;n<e.pendingCharacterTokens.length;n++)cn(e,e.pendingCharacterTokens[n]);else for(;n<e.pendingCharacterTokens.length;n++)e._insertCharacters(e.pendingCharacterTokens[n]);e.insertionMode=e.originalInsertionMode,e._processToken(t);}function mn(e,t){e.openElements.currentTagName===mt.COLGROUP&&(e.openElements.pop(),e.insertionMode=Ot,e._processToken(t));}function pn(e,t){const n=t.tagName;n===mt.HTML?sn(e,t):n===mt.OPTION?(e.openElements.currentTagName===mt.OPTION&&e.openElements.pop(),e._insertElement(t,pt.HTML)):n===mt.OPTGROUP?(e.openElements.currentTagName===mt.OPTION&&e.openElements.pop(),e.openElements.currentTagName===mt.OPTGROUP&&e.openElements.pop(),e._insertElement(t,pt.HTML)):n===mt.INPUT||n===mt.KEYGEN||n===mt.TEXTAREA||n===mt.SELECT?e.openElements.hasInSelectScope(mt.SELECT)&&(e.openElements.popUntilTagNamePopped(mt.SELECT),e._resetInsertionMode(),n!==mt.SELECT&&e._processToken(t)):n!==mt.SCRIPT&&n!==mt.TEMPLATE||xt(e,t);}function Nn(e,t){const n=t.tagName;if(n===mt.OPTGROUP){const t=e.openElements.items[e.openElements.stackTop-1],n=t&&e.treeAdapter.getTagName(t);e.openElements.currentTagName===mt.OPTION&&n===mt.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagName===mt.OPTGROUP&&e.openElements.pop();}else n===mt.OPTION?e.openElements.currentTagName===mt.OPTION&&e.openElements.pop():n===mt.SELECT&&e.openElements.hasInSelectScope(mt.SELECT)?(e.openElements.popUntilTagNamePopped(mt.SELECT),e._resetInsertionMode()):n===mt.TEMPLATE&&yt(e,t);}function un(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(mt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode(),e._processToken(t)):e.stopped=!0;}function On(e,t){e.insertionMode="IN_BODY_MODE",e._processToken(t);}function Sn(e,t){e.insertionMode="IN_BODY_MODE",e._processToken(t);}be.TAG_NAMES,be.NAMESPACES;return e.parse=function(e,t){return new Rt(t).parse(e)},e.parseFragment=function(e,t,n){"string"==typeof e&&(n=t,t=e,e=null);return new Rt(n).parseFragment(t,e)},e}({});function parse(e,t){return parse5.parse(e,t)}function parseFragment(e,t){return parse5.parseFragment(e,t)}

const docParser = new WeakMap();
function parseDocumentUtil(ownerDocument, html) {
  const doc = parse(html.trim(), getParser(ownerDocument));
  doc.documentElement = doc.firstElementChild;
  doc.head = doc.documentElement.firstElementChild;
  doc.body = doc.head.nextElementSibling;
  return doc;
}
function parseFragmentUtil(ownerDocument, html) {
  if (typeof html === 'string') {
    html = html.trim();
  }
  else {
    html = '';
  }
  const frag = parseFragment(html, getParser(ownerDocument));
  return frag;
}
function getParser(ownerDocument) {
  let parseOptions = docParser.get(ownerDocument);
  if (parseOptions != null) {
    return parseOptions;
  }
  const treeAdapter = {
    createDocument() {
      const doc = ownerDocument.createElement("#document" /* DOCUMENT_NODE */);
      doc['x-mode'] = 'no-quirks';
      return doc;
    },
    setNodeSourceCodeLocation(node, location) {
      node.sourceCodeLocation = location;
    },
    getNodeSourceCodeLocation(node) {
      return node.sourceCodeLocation;
    },
    createDocumentFragment() {
      return ownerDocument.createDocumentFragment();
    },
    createElement(tagName, namespaceURI, attrs) {
      const elm = ownerDocument.createElementNS(namespaceURI, tagName);
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (attr.namespace == null || attr.namespace === 'http://www.w3.org/1999/xhtml') {
          elm.setAttribute(attr.name, attr.value);
        }
        else {
          elm.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
      return elm;
    },
    createCommentNode(data) {
      return ownerDocument.createComment(data);
    },
    appendChild(parentNode, newNode) {
      parentNode.appendChild(newNode);
    },
    insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
    },
    setTemplateContent(templateElement, contentElement) {
      templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
      return templateElement.content;
    },
    setDocumentType(doc, name, publicId, systemId) {
      let doctypeNode = doc.childNodes.find(n => n.nodeType === 10 /* DOCUMENT_TYPE_NODE */);
      if (doctypeNode == null) {
        doctypeNode = ownerDocument.createDocumentTypeNode();
        doc.insertBefore(doctypeNode, doc.firstChild);
      }
      doctypeNode.nodeValue = '!DOCTYPE';
      doctypeNode['x-name'] = name;
      doctypeNode['x-publicId'] = publicId;
      doctypeNode['x-systemId'] = systemId;
    },
    setDocumentMode(doc, mode) {
      doc['x-mode'] = mode;
    },
    getDocumentMode(doc) {
      return doc['x-mode'];
    },
    detachNode(node) {
      node.remove();
    },
    insertText(parentNode, text) {
      const lastChild = parentNode.lastChild;
      if (lastChild != null && lastChild.nodeType === 3 /* TEXT_NODE */) {
        lastChild.nodeValue += text;
      }
      else {
        parentNode.appendChild(ownerDocument.createTextNode(text));
      }
    },
    insertTextBefore(parentNode, text, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode != null && prevNode.nodeType === 3 /* TEXT_NODE */) {
        prevNode.nodeValue += text;
      }
      else {
        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);
      }
    },
    adoptAttributes(recipient, attrs) {
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {
          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
    },
    getFirstChild(node) {
      return node.childNodes[0];
    },
    getChildNodes(node) {
      return node.childNodes;
    },
    getParentNode(node) {
      return node.parentNode;
    },
    getAttrList(element) {
      const attrs = element.attributes.__items.map(attr => {
        return {
          name: attr.name,
          value: attr.value,
          namespace: attr.namespaceURI,
          prefix: null,
        };
      });
      return attrs;
    },
    getTagName(element) {
      if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
        return element.nodeName.toLowerCase();
      }
      else {
        return element.nodeName;
      }
    },
    getNamespaceURI(element) {
      return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
      return textNode.nodeValue;
    },
    getCommentNodeContent(commentNode) {
      return commentNode.nodeValue;
    },
    getDocumentTypeNodeName(doctypeNode) {
      return doctypeNode['x-name'];
    },
    getDocumentTypeNodePublicId(doctypeNode) {
      return doctypeNode['x-publicId'];
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
      return doctypeNode['x-systemId'];
    },
    isTextNode(node) {
      return node.nodeType === 3 /* TEXT_NODE */;
    },
    isCommentNode(node) {
      return node.nodeType === 8 /* COMMENT_NODE */;
    },
    isDocumentTypeNode(node) {
      return node.nodeType === 10 /* DOCUMENT_TYPE_NODE */;
    },
    isElementNode(node) {
      return node.nodeType === 1 /* ELEMENT_NODE */;
    },
  };
  parseOptions = {
    treeAdapter: treeAdapter,
  };
  docParser.set(ownerDocument, parseOptions);
  return parseOptions;
}

class MockNode {
  constructor(ownerDocument, nodeType, nodeName, nodeValue) {
    this.ownerDocument = ownerDocument;
    this.nodeType = nodeType;
    this.nodeName = nodeName;
    this.nodeValue = nodeValue;
    this.parentNode = null;
    this.childNodes = [];
  }
  appendChild(newNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      const nodes = newNode.childNodes.slice();
      for (const child of nodes) {
        this.appendChild(child);
      }
    }
    else {
      newNode.remove();
      newNode.parentNode = this;
      this.childNodes.push(newNode);
      connectNode(this.ownerDocument, newNode);
    }
    return newNode;
  }
  append(...items) {
    items.forEach(item => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));
    });
  }
  prepend(...items) {
    const firstChild = this.firstChild;
    items.forEach(item => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);
    });
  }
  cloneNode(deep) {
    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);
  }
  compareDocumentPosition(_other) {
    // unimplemented
    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
    return -1;
  }
  get firstChild() {
    return this.childNodes[0] || null;
  }
  insertBefore(newNode, referenceNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {
        insertBefore(this, newNode.childNodes[i], referenceNode);
      }
    }
    else {
      insertBefore(this, newNode, referenceNode);
    }
    return newNode;
  }
  get isConnected() {
    let node = this;
    while (node != null) {
      if (node.nodeType === 9 /* DOCUMENT_NODE */) {
        return true;
      }
      node = node.parentNode;
      if (node != null && node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
        node = node.host;
      }
    }
    return false;
  }
  isSameNode(node) {
    return this === node;
  }
  get lastChild() {
    return this.childNodes[this.childNodes.length - 1] || null;
  }
  get nextSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) + 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  get parentElement() {
    return this.parentNode || null;
  }
  set parentElement(value) {
    this.parentNode = value;
  }
  get previousSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) - 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  contains(otherNode) {
    return this.childNodes.includes(otherNode);
  }
  removeChild(childNode) {
    const index = this.childNodes.indexOf(childNode);
    if (index > -1) {
      this.childNodes.splice(index, 1);
      if (this.nodeType === 1 /* ELEMENT_NODE */) {
        const wasConnected = this.isConnected;
        childNode.parentNode = null;
        if (wasConnected === true) {
          disconnectNode(childNode);
        }
      }
      else {
        childNode.parentNode = null;
      }
    }
    else {
      throw new Error(`node not found within childNodes during removeChild`);
    }
    return childNode;
  }
  remove() {
    if (this.parentNode != null) {
      this.parentNode.removeChild(this);
    }
  }
  replaceChild(newChild, oldChild) {
    if (oldChild.parentNode === this) {
      this.insertBefore(newChild, oldChild);
      oldChild.remove();
      return newChild;
    }
    return null;
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(value) {
    this.nodeValue = String(value);
  }
}
MockNode.ELEMENT_NODE = 1;
MockNode.TEXT_NODE = 3;
MockNode.PROCESSING_INSTRUCTION_NODE = 7;
MockNode.COMMENT_NODE = 8;
MockNode.DOCUMENT_NODE = 9;
MockNode.DOCUMENT_TYPE_NODE = 10;
MockNode.DOCUMENT_FRAGMENT_NODE = 11;
class MockNodeList {
  constructor(ownerDocument, childNodes, length) {
    this.ownerDocument = ownerDocument;
    this.childNodes = childNodes;
    this.length = length;
  }
}
class MockElement extends MockNode {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, 1 /* ELEMENT_NODE */, typeof nodeName === 'string' ? nodeName : null, null);
    this.namespaceURI = null;
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  attachShadow(_opts) {
    const shadowRoot = this.ownerDocument.createDocumentFragment();
    this.shadowRoot = shadowRoot;
    return shadowRoot;
  }
  get shadowRoot() {
    return this.__shadowRoot || null;
  }
  set shadowRoot(shadowRoot) {
    if (shadowRoot != null) {
      shadowRoot.host = this;
      this.__shadowRoot = shadowRoot;
    }
    else {
      delete this.__shadowRoot;
    }
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(false);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
  get children() {
    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */);
  }
  get childElementCount() {
    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */).length;
  }
  get className() {
    return this.getAttributeNS(null, 'class') || '';
  }
  set className(value) {
    this.setAttributeNS(null, 'class', value);
  }
  get classList() {
    return new MockClassList(this);
  }
  click() {
    dispatchEvent(this, new MockEvent('click', { bubbles: true, cancelable: true, composed: true }));
  }
  cloneNode(_deep) {
    // implemented on MockElement.prototype from within element.ts
    return null;
  }
  closest(selector) {
    let elm = this;
    while (elm != null) {
      if (elm.matches(selector)) {
        return elm;
      }
      elm = elm.parentNode;
    }
    return null;
  }
  get dataset() {
    return dataset(this);
  }
  get dir() {
    return this.getAttributeNS(null, 'dir') || '';
  }
  set dir(value) {
    this.setAttributeNS(null, 'dir', value);
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get firstElementChild() {
    return this.children[0] || null;
  }
  getAttribute(attrName) {
    if (attrName === 'style') {
      if (this.__style != null && this.__style.length > 0) {
        return this.style.cssText;
      }
      return null;
    }
    const attr = this.attributes.getNamedItem(attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getBoundingClientRect() {
    return { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 };
  }
  getRootNode(opts) {
    const isComposed = opts != null && opts.composed === true;
    let node = this;
    while (node.parentNode != null) {
      node = node.parentNode;
      if (isComposed === true && node.parentNode == null && node.host != null) {
        node = node.host;
      }
    }
    return node;
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') === 'true';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  hasChildNodes() {
    return this.childNodes.length > 0;
  }
  get id() {
    return this.getAttributeNS(null, 'id') || '';
  }
  set id(value) {
    this.setAttributeNS(null, 'id', value);
  }
  get innerHTML() {
    if (this.childNodes.length === 0) {
      return '';
    }
    return serializeNodeToHtml(this, {
      newLines: false,
      indentSpaces: 0,
    });
  }
  set innerHTML(html) {
    if (NON_ESCAPABLE_CONTENT.has(this.nodeName) === true) {
      setTextContent(this, html);
    }
    else {
      for (let i = this.childNodes.length - 1; i >= 0; i--) {
        this.removeChild(this.childNodes[i]);
      }
      if (typeof html === 'string') {
        const frag = parseFragmentUtil(this.ownerDocument, html);
        while (frag.childNodes.length > 0) {
          this.appendChild(frag.childNodes[0]);
        }
      }
    }
  }
  get innerText() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set innerText(value) {
    setTextContent(this, value);
  }
  insertAdjacentElement(position, elm) {
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
    return elm;
  }
  insertAdjacentHTML(position, html) {
    const frag = parseFragmentUtil(this.ownerDocument, html);
    if (position === 'beforebegin') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[0], this);
      }
    }
    else if (position === 'afterbegin') {
      while (frag.childNodes.length > 0) {
        this.prepend(frag.childNodes[frag.childNodes.length - 1]);
      }
    }
    else if (position === 'beforeend') {
      while (frag.childNodes.length > 0) {
        this.appendChild(frag.childNodes[0]);
      }
    }
    else if (position === 'afterend') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);
      }
    }
  }
  insertAdjacentText(position, text) {
    const elm = this.ownerDocument.createTextNode(text);
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
  }
  hasAttribute(attrName) {
    if (attrName === 'style') {
      return this.__style != null && this.__style.length > 0;
    }
    return this.getAttribute(attrName) !== null;
  }
  hasAttributeNS(namespaceURI, name) {
    return this.getAttributeNS(namespaceURI, name) !== null;
  }
  get hidden() {
    return this.hasAttributeNS(null, 'hidden');
  }
  set hidden(isHidden) {
    if (isHidden === true) {
      this.setAttributeNS(null, 'hidden', '');
    }
    else {
      this.removeAttributeNS(null, 'hidden');
    }
  }
  get lang() {
    return this.getAttributeNS(null, 'lang') || '';
  }
  set lang(value) {
    this.setAttributeNS(null, 'lang', value);
  }
  get lastElementChild() {
    const children = this.children;
    return children[children.length - 1] || null;
  }
  matches(selector) {
    return matches(selector, this);
  }
  get nextElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) + 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  get outerHTML() {
    return serializeNodeToHtml(this, {
      newLines: false,
      outerHtml: true,
      indentSpaces: 0,
    });
  }
  get previousElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) - 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  getElementsByClassName(classNames) {
    const classes = classNames
      .trim()
      .split(' ')
      .filter(c => c.length > 0);
    const results = [];
    getElementsByClassName(this, classes, results);
    return results;
  }
  getElementsByTagName(tagName) {
    const results = [];
    getElementsByTagName(this, tagName.toLowerCase(), results);
    return results;
  }
  querySelector(selector) {
    return selectOne(selector, this);
  }
  querySelectorAll(selector) {
    return selectAll(selector, this);
  }
  removeAttribute(attrName) {
    if (attrName === 'style') {
      delete this.__style;
    }
    else {
      const attr = this.attributes.getNamedItem(attrName);
      if (attr != null) {
        this.attributes.removeNamedItemNS(attr);
        if (checkAttributeChanged(this) === true) {
          attributeChanged(this, attrName, attr.value, null);
        }
      }
    }
  }
  removeAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      this.attributes.removeNamedItemNS(attr);
      if (checkAttributeChanged(this) === true) {
        attributeChanged(this, attrName, attr.value, null);
      }
    }
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  setAttribute(attrName, value) {
    if (attrName === 'style') {
      this.style = value;
    }
    else {
      const attributes = this.attributes;
      let attr = attributes.getNamedItem(attrName);
      const checkAttrChanged = checkAttributeChanged(this);
      if (attr != null) {
        if (checkAttrChanged === true) {
          const oldValue = attr.value;
          attr.value = value;
          if (oldValue !== attr.value) {
            attributeChanged(this, attr.name, oldValue, attr.value);
          }
        }
        else {
          attr.value = value;
        }
      }
      else {
        if (attributes.caseInsensitive) {
          attrName = attrName.toLowerCase();
        }
        attr = new MockAttr(attrName, value);
        attributes.__items.push(attr);
        if (checkAttrChanged === true) {
          attributeChanged(this, attrName, null, attr.value);
        }
      }
    }
  }
  setAttributeNS(namespaceURI, attrName, value) {
    const attributes = this.attributes;
    let attr = attributes.getNamedItemNS(namespaceURI, attrName);
    const checkAttrChanged = checkAttributeChanged(this);
    if (attr != null) {
      if (checkAttrChanged === true) {
        const oldValue = attr.value;
        attr.value = value;
        if (oldValue !== attr.value) {
          attributeChanged(this, attr.name, oldValue, attr.value);
        }
      }
      else {
        attr.value = value;
      }
    }
    else {
      attr = new MockAttr(attrName, value, namespaceURI);
      attributes.__items.push(attr);
      if (checkAttrChanged === true) {
        attributeChanged(this, attrName, null, attr.value);
      }
    }
  }
  get style() {
    if (this.__style == null) {
      this.__style = createCSSStyleDeclaration();
    }
    return this.__style;
  }
  set style(val) {
    if (typeof val === 'string') {
      if (this.__style == null) {
        this.__style = createCSSStyleDeclaration();
      }
      this.__style.cssText = val;
    }
    else {
      this.__style = val;
    }
  }
  get tabIndex() {
    return parseInt(this.getAttributeNS(null, 'tabindex') || '-1', 10);
  }
  set tabIndex(value) {
    this.setAttributeNS(null, 'tabindex', value);
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get textContent() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set textContent(value) {
    setTextContent(this, value);
  }
  get title() {
    return this.getAttributeNS(null, 'title') || '';
  }
  set title(value) {
    this.setAttributeNS(null, 'title', value);
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
  toString(opts) {
    return serializeNodeToHtml(this, opts);
  }
}
function getElementsByClassName(elm, classNames, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    for (let j = 0, jj = classNames.length; j < jj; j++) {
      if (childElm.classList.contains(classNames[j])) {
        foundElms.push(childElm);
      }
    }
    getElementsByClassName(childElm, classNames, foundElms);
  }
}
function getElementsByTagName(elm, tagName, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (tagName === '*' || childElm.nodeName.toLowerCase() === tagName) {
      foundElms.push(childElm);
    }
    getElementsByTagName(childElm, tagName, foundElms);
  }
}
function resetElement(elm) {
  resetEventListeners(elm);
  delete elm.__attributeMap;
  delete elm.__shadowRoot;
  delete elm.__style;
}
function insertBefore(parentNode, newNode, referenceNode) {
  if (newNode !== referenceNode) {
    newNode.remove();
    newNode.parentNode = parentNode;
    newNode.ownerDocument = parentNode.ownerDocument;
    if (referenceNode != null) {
      const index = parentNode.childNodes.indexOf(referenceNode);
      if (index > -1) {
        parentNode.childNodes.splice(index, 0, newNode);
      }
      else {
        throw new Error(`referenceNode not found in parentNode.childNodes`);
      }
    }
    else {
      parentNode.childNodes.push(newNode);
    }
    connectNode(parentNode.ownerDocument, newNode);
  }
  return newNode;
}
class MockHTMLElement extends MockElement {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, typeof nodeName === 'string' ? nodeName.toUpperCase() : null);
    this.namespaceURI = 'http://www.w3.org/1999/xhtml';
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(true);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
}
class MockTextNode extends MockNode {
  constructor(ownerDocument, text) {
    super(ownerDocument, 3 /* TEXT_NODE */, "#text" /* TEXT_NODE */, text);
  }
  cloneNode(_deep) {
    return new MockTextNode(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
  get data() {
    return this.nodeValue;
  }
  set data(text) {
    this.nodeValue = text;
  }
  get wholeText() {
    if (this.parentNode != null) {
      const text = [];
      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {
        const childNode = this.parentNode.childNodes[i];
        if (childNode.nodeType === 3 /* TEXT_NODE */) {
          text.push(childNode.nodeValue);
        }
      }
      return text.join('');
    }
    return this.nodeValue;
  }
}
function getTextContent(childNodes, text) {
  for (let i = 0, ii = childNodes.length; i < ii; i++) {
    const childNode = childNodes[i];
    if (childNode.nodeType === 3 /* TEXT_NODE */) {
      text.push(childNode.nodeValue);
    }
    else if (childNode.nodeType === 1 /* ELEMENT_NODE */) {
      getTextContent(childNode.childNodes, text);
    }
  }
}
function setTextContent(elm, text) {
  for (let i = elm.childNodes.length - 1; i >= 0; i--) {
    elm.removeChild(elm.childNodes[i]);
  }
  const textNode = new MockTextNode(elm.ownerDocument, text);
  elm.appendChild(textNode);
}

class MockComment extends MockNode {
  constructor(ownerDocument, data) {
    super(ownerDocument, 8 /* COMMENT_NODE */, "#comment" /* COMMENT_NODE */, data);
  }
  cloneNode(_deep) {
    return new MockComment(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
}

class MockDocumentFragment extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, null);
    this.nodeName = "#document-fragment" /* DOCUMENT_FRAGMENT_NODE */;
    this.nodeType = 11 /* DOCUMENT_FRAGMENT_NODE */;
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  cloneNode(deep) {
    const cloned = new MockDocumentFragment(null);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const childNode = this.childNodes[i];
        if (childNode.nodeType === 1 /* ELEMENT_NODE */ || childNode.nodeType === 3 /* TEXT_NODE */ || childNode.nodeType === 8 /* COMMENT_NODE */) {
          const clonedChildNode = this.childNodes[i].cloneNode(true);
          cloned.appendChild(clonedChildNode);
        }
      }
    }
    return cloned;
  }
}

class MockDocumentTypeNode extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, '!DOCTYPE');
    this.nodeType = 10 /* DOCUMENT_TYPE_NODE */;
    this.setAttribute('html', '');
  }
}

class MockCSSRule {
  constructor(parentStyleSheet) {
    this.parentStyleSheet = parentStyleSheet;
    this.cssText = '';
    this.type = 0;
  }
}
class MockCSSStyleSheet {
  constructor(ownerNode) {
    this.type = 'text/css';
    this.parentStyleSheet = null;
    this.cssRules = [];
    this.ownerNode = ownerNode;
  }
  get rules() {
    return this.cssRules;
  }
  set rules(rules) {
    this.cssRules = rules;
  }
  deleteRule(index) {
    if (index >= 0 && index < this.cssRules.length) {
      this.cssRules.splice(index, 1);
      updateStyleTextNode(this.ownerNode);
    }
  }
  insertRule(rule, index = 0) {
    if (typeof index !== 'number') {
      index = 0;
    }
    if (index < 0) {
      index = 0;
    }
    if (index > this.cssRules.length) {
      index = this.cssRules.length;
    }
    const cssRule = new MockCSSRule(this);
    cssRule.cssText = rule;
    this.cssRules.splice(index, 0, cssRule);
    updateStyleTextNode(this.ownerNode);
    return index;
  }
}
function getStyleElementText(styleElm) {
  const output = [];
  for (let i = 0; i < styleElm.childNodes.length; i++) {
    output.push(styleElm.childNodes[i].nodeValue);
  }
  return output.join('');
}
function setStyleElementText(styleElm, text) {
  // keeping the innerHTML and the sheet.cssRules connected
  // is not technically correct, but since we're doing
  // SSR we'll need to turn any assigned cssRules into
  // real text, not just properties that aren't rendered
  const sheet = styleElm.sheet;
  sheet.cssRules.length = 0;
  sheet.insertRule(text);
  updateStyleTextNode(styleElm);
}
function updateStyleTextNode(styleElm) {
  const childNodeLen = styleElm.childNodes.length;
  if (childNodeLen > 1) {
    for (let i = childNodeLen - 1; i >= 1; i--) {
      styleElm.removeChild(styleElm.childNodes[i]);
    }
  }
  else if (childNodeLen < 1) {
    styleElm.appendChild(styleElm.ownerDocument.createTextNode(''));
  }
  const textNode = styleElm.childNodes[0];
  textNode.nodeValue = styleElm.sheet.cssRules.map(r => r.cssText).join('\n');
}

function createElement(ownerDocument, tagName) {
  if (typeof tagName !== 'string' || tagName === '' || !/^[a-z0-9-_:]+$/i.test(tagName)) {
    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);
  }
  tagName = tagName.toLowerCase();
  switch (tagName) {
    case 'a':
      return new MockAnchorElement(ownerDocument);
    case 'base':
      return new MockBaseElement(ownerDocument);
    case 'button':
      return new MockButtonElement(ownerDocument);
    case 'canvas':
      return new MockCanvasElement(ownerDocument);
    case 'form':
      return new MockFormElement(ownerDocument);
    case 'img':
      return new MockImageElement(ownerDocument);
    case 'input':
      return new MockInputElement(ownerDocument);
    case 'link':
      return new MockLinkElement(ownerDocument);
    case 'meta':
      return new MockMetaElement(ownerDocument);
    case 'script':
      return new MockScriptElement(ownerDocument);
    case 'style':
      return new MockStyleElement(ownerDocument);
    case 'template':
      return new MockTemplateElement(ownerDocument);
    case 'title':
      return new MockTitleElement(ownerDocument);
  }
  if (ownerDocument != null && tagName.includes('-')) {
    const win = ownerDocument.defaultView;
    if (win != null && win.customElements != null) {
      return createCustomElement(win.customElements, ownerDocument, tagName);
    }
  }
  return new MockHTMLElement(ownerDocument, tagName);
}
function createElementNS(ownerDocument, namespaceURI, tagName) {
  if (namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return createElement(ownerDocument, tagName);
  }
  else if (namespaceURI === 'http://www.w3.org/2000/svg') {
    return new MockSVGElement(ownerDocument, tagName);
  }
  else {
    return new MockElement(ownerDocument, tagName);
  }
}
class MockAnchorElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'a');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockButtonElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'button');
  }
}
patchPropAttributes(MockButtonElement.prototype, {
  type: String,
}, {
  type: 'submit',
});
class MockImageElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'img');
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') !== 'false';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockImageElement.prototype, {
  height: Number,
  width: Number,
});
class MockInputElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'input');
  }
  get list() {
    const listId = this.getAttribute('list');
    if (listId) {
      return this.ownerDocument.getElementById(listId);
    }
    return null;
  }
}
patchPropAttributes(MockInputElement.prototype, {
  accept: String,
  autocomplete: String,
  autofocus: Boolean,
  capture: String,
  checked: Boolean,
  disabled: Boolean,
  form: String,
  formaction: String,
  formenctype: String,
  formmethod: String,
  formnovalidate: String,
  formtarget: String,
  height: Number,
  inputmode: String,
  max: String,
  maxLength: Number,
  min: String,
  minLength: Number,
  multiple: Boolean,
  name: String,
  pattern: String,
  placeholder: String,
  required: Boolean,
  readOnly: Boolean,
  size: Number,
  spellCheck: Boolean,
  src: String,
  step: String,
  type: String,
  value: String,
  width: Number,
}, {
  type: 'text',
});
class MockFormElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'form');
  }
}
patchPropAttributes(MockFormElement.prototype, {
  name: String,
});
class MockLinkElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'link');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
patchPropAttributes(MockLinkElement.prototype, {
  crossorigin: String,
  media: String,
  rel: String,
  type: String,
});
class MockMetaElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'meta');
  }
}
patchPropAttributes(MockMetaElement.prototype, {
  charset: String,
  content: String,
  name: String,
});
class MockScriptElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'script');
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockScriptElement.prototype, {
  type: String,
});
class MockStyleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'style');
    this.sheet = new MockCSSStyleSheet(this);
  }
  get innerHTML() {
    return getStyleElementText(this);
  }
  set innerHTML(value) {
    setStyleElementText(this, value);
  }
  get innerText() {
    return getStyleElementText(this);
  }
  set innerText(value) {
    setStyleElementText(this, value);
  }
  get textContent() {
    return getStyleElementText(this);
  }
  set textContent(value) {
    setStyleElementText(this, value);
  }
}
class MockSVGElement extends MockElement {
  // SVGElement properties and methods
  get ownerSVGElement() {
    return null;
  }
  get viewportElement() {
    return null;
  }
  focus() {
    /**/
  }
  onunload() {
    /**/
  }
  // SVGGeometryElement properties and methods
  get pathLength() {
    return 0;
  }
  isPointInFill(_pt) {
    return false;
  }
  isPointInStroke(_pt) {
    return false;
  }
  getTotalLength() {
    return 0;
  }
}
class MockBaseElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'base');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockTemplateElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'template');
    this.content = new MockDocumentFragment(ownerDocument);
  }
  get innerHTML() {
    return this.content.innerHTML;
  }
  set innerHTML(html) {
    this.content.innerHTML = html;
  }
  cloneNode(deep) {
    const cloned = new MockTemplateElement(null);
    cloned.attributes = cloneAttributes(this.attributes);
    const styleCssText = this.getAttribute('style');
    if (styleCssText != null && styleCssText.length > 0) {
      cloned.setAttribute('style', styleCssText);
    }
    cloned.content = this.content.cloneNode(deep);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const clonedChildNode = this.childNodes[i].cloneNode(true);
        cloned.appendChild(clonedChildNode);
      }
    }
    return cloned;
  }
}
class MockTitleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'title');
  }
  get text() {
    return this.textContent;
  }
  set text(value) {
    this.textContent = value;
  }
}
class MockCanvasElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'canvas');
  }
  getContext() {
    return {
      fillRect() {
        return;
      },
      clearRect() { },
      getImageData: function (_, __, w, h) {
        return {
          data: new Array(w * h * 4),
        };
      },
      putImageData() { },
      createImageData: function () {
        return [];
      },
      setTransform() { },
      drawImage() { },
      save() { },
      fillText() { },
      restore() { },
      beginPath() { },
      moveTo() { },
      lineTo() { },
      closePath() { },
      stroke() { },
      translate() { },
      scale() { },
      rotate() { },
      arc() { },
      fill() { },
      measureText() {
        return { width: 0 };
      },
      transform() { },
      rect() { },
      clip() { },
    };
  }
}
function fullUrl(elm, attrName) {
  const val = elm.getAttribute(attrName) || '';
  if (elm.ownerDocument != null) {
    const win = elm.ownerDocument.defaultView;
    if (win != null) {
      const loc = win.location;
      if (loc != null) {
        try {
          const url = new URL(val, loc.href);
          return url.href;
        }
        catch (e) { }
      }
    }
  }
  return val.replace(/\'|\"/g, '').trim();
}
function patchPropAttributes(prototype, attrs, defaults = {}) {
  Object.keys(attrs).forEach(propName => {
    const attr = attrs[propName];
    const defaultValue = defaults[propName];
    if (attr === Boolean) {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName);
        },
        set(value) {
          if (value) {
            this.setAttribute(propName, '');
          }
          else {
            this.removeAttribute(propName);
          }
        },
      });
    }
    else if (attr === Number) {
      Object.defineProperty(prototype, propName, {
        get() {
          const value = this.getAttribute(propName);
          return value ? parseInt(value, 10) : defaultValue === undefined ? 0 : defaultValue;
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
    else {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || '';
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
  });
}
MockElement.prototype.cloneNode = function (deep) {
  // because we're creating elements, which extending specific HTML base classes there
  // is a MockElement circular reference that bundling has trouble dealing with so
  // the fix is to add cloneNode() to MockElement's prototype after the HTML classes
  const cloned = createElement(this.ownerDocument, this.nodeName);
  cloned.attributes = cloneAttributes(this.attributes);
  const styleCssText = this.getAttribute('style');
  if (styleCssText != null && styleCssText.length > 0) {
    cloned.setAttribute('style', styleCssText);
  }
  if (deep) {
    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
      const clonedChildNode = this.childNodes[i].cloneNode(true);
      cloned.appendChild(clonedChildNode);
    }
  }
  return cloned;
};

let sharedDocument;
function parseHtmlToDocument(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseDocumentUtil(ownerDocument, html);
}
function parseHtmlToFragment(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseFragmentUtil(ownerDocument, html);
}

class MockHeaders {
  constructor(init) {
    this._values = [];
    if (typeof init === 'object') {
      if (typeof init[Symbol.iterator] === 'function') {
        const kvs = [];
        for (const kv of init) {
          if (typeof kv[Symbol.iterator] === 'function') {
            kvs.push([...kv]);
          }
        }
        for (const kv of kvs) {
          this.append(kv[0], kv[1]);
        }
      }
      else {
        for (const key in init) {
          this.append(key, init[key]);
        }
      }
    }
  }
  append(key, value) {
    this._values.push([key, value + '']);
  }
  delete(key) {
    key = key.toLowerCase();
    for (let i = this._values.length - 1; i >= 0; i--) {
      if (this._values[i][0].toLowerCase() === key) {
        this._values.splice(i, 1);
      }
    }
  }
  entries() {
    const entries = [];
    for (const kv of this.keys()) {
      entries.push([kv, this.get(kv)]);
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: entries[index],
          done: !entries[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  forEach(cb) {
    for (const kv of this.entries()) {
      cb(kv[1], kv[0]);
    }
  }
  get(key) {
    const rtn = [];
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        rtn.push(kv[1]);
      }
    }
    return rtn.length > 0 ? rtn.join(', ') : null;
  }
  has(key) {
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        return true;
      }
    }
    return false;
  }
  keys() {
    const keys = [];
    for (const kv of this._values) {
      const key = kv[0].toLowerCase();
      if (!keys.includes(key)) {
        keys.push(key);
      }
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: keys[index],
          done: !keys[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  set(key, value) {
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key.toLowerCase()) {
        kv[1] = value + '';
        return;
      }
    }
    this.append(key, value);
  }
  values() {
    const values = this._values;
    let index = -1;
    return {
      next() {
        index++;
        const done = !values[index];
        return {
          value: done ? undefined : values[index][1],
          done,
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
}

class MockRequest {
  constructor(input, init = {}) {
    this._method = 'GET';
    this._url = '/';
    this.bodyUsed = false;
    this.cache = 'default';
    this.credentials = 'same-origin';
    this.integrity = '';
    this.keepalive = false;
    this.mode = 'cors';
    this.redirect = 'follow';
    this.referrer = 'about:client';
    this.referrerPolicy = '';
    if (typeof input === 'string') {
      this.url = input;
    }
    else if (input) {
      Object.assign(this, input);
      this.headers = new MockHeaders(input.headers);
    }
    Object.assign(this, init);
    if (init.headers) {
      this.headers = new MockHeaders(init.headers);
    }
    if (!this.headers) {
      this.headers = new MockHeaders();
    }
  }
  get url() {
    if (typeof this._url === 'string') {
      return new URL(this._url, location.href).href;
    }
    return new URL('/', location.href).href;
  }
  set url(value) {
    this._url = value;
  }
  get method() {
    if (typeof this._method === 'string') {
      return this._method.toUpperCase();
    }
    return 'GET';
  }
  set method(value) {
    this._method = value;
  }
  clone() {
    const clone = Object.assign({}, this);
    clone.headers = new MockHeaders(this.headers);
    return new MockRequest(clone);
  }
}
class MockResponse {
  constructor(body, init = {}) {
    this.ok = true;
    this.status = 200;
    this.statusText = '';
    this.type = 'default';
    this.url = '';
    this._body = body;
    if (init) {
      Object.assign(this, init);
    }
    this.headers = new MockHeaders(init.headers);
  }
  async json() {
    return JSON.parse(this._body);
  }
  async text() {
    return this._body;
  }
  clone() {
    const initClone = Object.assign({}, this);
    initClone.headers = new MockHeaders(this.headers);
    return new MockResponse(this._body, initClone);
  }
}

function setupGlobal(gbl) {
  if (gbl.window == null) {
    const win = (gbl.window = new MockWindow());
    WINDOW_FUNCTIONS.forEach(fnName => {
      if (!(fnName in gbl)) {
        gbl[fnName] = win[fnName].bind(win);
      }
    });
    WINDOW_PROPS.forEach(propName => {
      if (!(propName in gbl)) {
        Object.defineProperty(gbl, propName, {
          get() {
            return win[propName];
          },
          set(val) {
            win[propName] = val;
          },
          configurable: true,
          enumerable: true,
        });
      }
    });
    GLOBAL_CONSTRUCTORS.forEach(([cstrName]) => {
      gbl[cstrName] = win[cstrName];
    });
  }
  return gbl.window;
}
function teardownGlobal(gbl) {
  const win = gbl.window;
  if (win && typeof win.close === 'function') {
    win.close();
  }
}
function patchWindow(winToBePatched) {
  const mockWin = new MockWindow(false);
  WINDOW_FUNCTIONS.forEach(fnName => {
    if (typeof winToBePatched[fnName] !== 'function') {
      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);
    }
  });
  WINDOW_PROPS.forEach(propName => {
    if (winToBePatched === undefined) {
      Object.defineProperty(winToBePatched, propName, {
        get() {
          return mockWin[propName];
        },
        set(val) {
          mockWin[propName] = val;
        },
        configurable: true,
        enumerable: true,
      });
    }
  });
}
function addGlobalsToWindowPrototype(mockWinPrototype) {
  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {
    Object.defineProperty(mockWinPrototype, cstrName, {
      get() {
        return this['__' + cstrName] || Cstr;
      },
      set(cstr) {
        this['__' + cstrName] = cstr;
      },
      configurable: true,
      enumerable: true,
    });
  });
}
const WINDOW_FUNCTIONS = [
  'addEventListener',
  'alert',
  'blur',
  'cancelAnimationFrame',
  'cancelIdleCallback',
  'clearInterval',
  'clearTimeout',
  'close',
  'confirm',
  'dispatchEvent',
  'focus',
  'getComputedStyle',
  'matchMedia',
  'open',
  'prompt',
  'removeEventListener',
  'requestAnimationFrame',
  'requestIdleCallback',
  'URL',
];
const WINDOW_PROPS = [
  'customElements',
  'devicePixelRatio',
  'document',
  'history',
  'innerHeight',
  'innerWidth',
  'localStorage',
  'location',
  'navigator',
  'pageXOffset',
  'pageYOffset',
  'performance',
  'screenLeft',
  'screenTop',
  'screenX',
  'screenY',
  'scrollX',
  'scrollY',
  'sessionStorage',
  'CSS',
  'CustomEvent',
  'Event',
  'Element',
  'HTMLElement',
  'Node',
  'NodeList',
  'KeyboardEvent',
  'MouseEvent',
];
const GLOBAL_CONSTRUCTORS = [
  ['CustomEvent', MockCustomEvent],
  ['Event', MockEvent],
  ['Headers', MockHeaders],
  ['KeyboardEvent', MockKeyboardEvent],
  ['MouseEvent', MockMouseEvent],
  ['Request', MockRequest],
  ['Response', MockResponse],
  ['HTMLAnchorElement', MockAnchorElement],
  ['HTMLBaseElement', MockBaseElement],
  ['HTMLButtonElement', MockButtonElement],
  ['HTMLCanvasElement', MockCanvasElement],
  ['HTMLFormElement', MockFormElement],
  ['HTMLImageElement', MockImageElement],
  ['HTMLInputElement', MockInputElement],
  ['HTMLLinkElement', MockLinkElement],
  ['HTMLMetaElement', MockMetaElement],
  ['HTMLScriptElement', MockScriptElement],
  ['HTMLStyleElement', MockStyleElement],
  ['HTMLTemplateElement', MockTemplateElement],
  ['HTMLTitleElement', MockTitleElement],
];

const consoleNoop = () => {
  /**/
};
function createConsole() {
  return {
    debug: consoleNoop,
    error: consoleNoop,
    info: consoleNoop,
    log: consoleNoop,
    warn: consoleNoop,
    dir: consoleNoop,
    dirxml: consoleNoop,
    table: consoleNoop,
    trace: consoleNoop,
    group: consoleNoop,
    groupCollapsed: consoleNoop,
    groupEnd: consoleNoop,
    clear: consoleNoop,
    count: consoleNoop,
    countReset: consoleNoop,
    assert: consoleNoop,
    profile: consoleNoop,
    profileEnd: consoleNoop,
    time: consoleNoop,
    timeLog: consoleNoop,
    timeEnd: consoleNoop,
    timeStamp: consoleNoop,
    context: consoleNoop,
    memory: consoleNoop,
  };
}

class MockHistory {
  constructor() {
    this.items = [];
  }
  get length() {
    return this.items.length;
  }
  back() {
    this.go(-1);
  }
  forward() {
    this.go(1);
  }
  go(_value) {
    //
  }
  pushState(_state, _title, _url) {
    //
  }
  replaceState(_state, _title, _url) {
    //
  }
}

class MockIntersectionObserver {
  constructor() {
    /**/
  }
  disconnect() {
    /**/
  }
  observe() {
    /**/
  }
  takeRecords() {
    return [];
  }
  unobserve() {
    /**/
  }
}

class MockLocation {
  constructor() {
    this.ancestorOrigins = null;
    this.protocol = '';
    this.host = '';
    this.hostname = '';
    this.port = '';
    this.pathname = '';
    this.search = '';
    this.hash = '';
    this.username = '';
    this.password = '';
    this.origin = '';
    this._href = '';
  }
  get href() {
    return this._href;
  }
  set href(value) {
    const url = new URL(value, 'http://mockdoc.stenciljs.com');
    this._href = url.href;
    this.protocol = url.protocol;
    this.host = url.host;
    this.port = url.port;
    this.pathname = url.pathname;
    this.search = url.search;
    this.hash = url.hash;
    this.username = url.username;
    this.password = url.password;
    this.origin = url.origin;
  }
  assign(_url) {
    //
  }
  reload(_forcedReload) {
    //
  }
  replace(_url) {
    //
  }
  toString() {
    return this.href;
  }
}

class MockNavigator {
  constructor() {
    this.appCodeName = 'MockNavigator';
    this.appName = 'MockNavigator';
    this.appVersion = 'MockNavigator';
    this.platform = 'MockNavigator';
    this.userAgent = 'MockNavigator';
  }
}

/**
 * https://developer.mozilla.org/en-US/docs/Web/API/Performance
 */
class MockPerformance {
  constructor() {
    this.timeOrigin = Date.now();
  }
  addEventListener() {
    //
  }
  clearMarks() {
    //
  }
  clearMeasures() {
    //
  }
  clearResourceTimings() {
    //
  }
  dispatchEvent() {
    return true;
  }
  getEntries() {
    return [];
  }
  getEntriesByName() {
    return [];
  }
  getEntriesByType() {
    return [];
  }
  mark() {
    //
  }
  measure() {
    //
  }
  get navigation() {
    return {};
  }
  now() {
    return Date.now() - this.timeOrigin;
  }
  get onresourcetimingbufferfull() {
    return null;
  }
  removeEventListener() {
    //
  }
  setResourceTimingBufferSize() {
    //
  }
  get timing() {
    return {};
  }
  toJSON() {
    //
  }
}
function resetPerformance(perf) {
  if (perf != null) {
    try {
      perf.timeOrigin = Date.now();
    }
    catch (e) { }
  }
}

class MockStorage {
  constructor() {
    this.items = new Map();
  }
  key(_value) {
    //
  }
  getItem(key) {
    key = String(key);
    if (this.items.has(key)) {
      return this.items.get(key);
    }
    return null;
  }
  setItem(key, value) {
    if (value == null) {
      value = 'null';
    }
    this.items.set(String(key), String(value));
  }
  removeItem(key) {
    this.items.delete(String(key));
  }
  clear() {
    this.items.clear();
  }
}

const nativeClearInterval = clearInterval;
const nativeClearTimeout = clearTimeout;
const nativeSetInterval = setInterval;
const nativeSetTimeout = setTimeout;
const nativeURL = URL;
class MockWindow {
  constructor(html = null) {
    if (html !== false) {
      this.document = new MockDocument(html, this);
    }
    else {
      this.document = null;
    }
    this.performance = new MockPerformance();
    this.customElements = new MockCustomElementRegistry(this);
    this.console = createConsole();
    resetWindowDefaults(this);
    resetWindowDimensions(this);
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  alert(msg) {
    if (this.console) {
      this.console.debug(msg);
    }
    else {
      console.debug(msg);
    }
  }
  blur() {
    /**/
  }
  cancelAnimationFrame(id) {
    this.__clearTimeout(id);
  }
  cancelIdleCallback(id) {
    this.__clearTimeout(id);
  }
  get CharacterData() {
    if (this.__charDataCstr == null) {
      const ownerDocument = this.document;
      this.__charDataCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct CharacterData');
        }
      };
    }
    return this.__charDataCstr;
  }
  set CharacterData(charDataCstr) {
    this.__charDataCstr = charDataCstr;
  }
  clearInterval(id) {
    this.__clearInterval(id);
  }
  clearTimeout(id) {
    this.__clearTimeout(id);
  }
  close() {
    resetWindow(this);
  }
  confirm() {
    return false;
  }
  get CSS() {
    return {
      supports: () => true,
    };
  }
  get Document() {
    if (this.__docCstr == null) {
      const win = this;
      this.__docCstr = class extends MockDocument {
        constructor() {
          super(false, win);
          throw new Error('Illegal constructor: cannot construct Document');
        }
      };
    }
    return this.__docCstr;
  }
  set Document(docCstr) {
    this.__docCstr = docCstr;
  }
  get DocumentFragment() {
    if (this.__docFragCstr == null) {
      const ownerDocument = this.document;
      this.__docFragCstr = class extends MockDocumentFragment {
        constructor() {
          super(ownerDocument);
          throw new Error('Illegal constructor: cannot construct DocumentFragment');
        }
      };
    }
    return this.__docFragCstr;
  }
  set DocumentFragment(docFragCstr) {
    this.__docFragCstr = docFragCstr;
  }
  get DocumentType() {
    if (this.__docTypeCstr == null) {
      const ownerDocument = this.document;
      this.__docTypeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct DocumentType');
        }
      };
    }
    return this.__docTypeCstr;
  }
  set DocumentType(docTypeCstr) {
    this.__docTypeCstr = docTypeCstr;
  }
  get DOMTokenList() {
    if (this.__domTokenListCstr == null) {
      this.__domTokenListCstr = class MockDOMTokenList {
      };
    }
    return this.__domTokenListCstr;
  }
  set DOMTokenList(domTokenListCstr) {
    this.__domTokenListCstr = domTokenListCstr;
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get Element() {
    if (this.__elementCstr == null) {
      const ownerDocument = this.document;
      this.__elementCstr = class extends MockElement {
        constructor() {
          super(ownerDocument, '');
          throw new Error('Illegal constructor: cannot construct Element');
        }
      };
    }
    return this.__elementCstr;
  }
  focus() {
    /**/
  }
  getComputedStyle(_) {
    return {
      cssText: '',
      length: 0,
      parentRule: null,
      getPropertyPriority() {
        return null;
      },
      getPropertyValue() {
        return '';
      },
      item() {
        return null;
      },
      removeProperty() {
        return null;
      },
      setProperty() {
        return null;
      },
    };
  }
  get globalThis() {
    return this;
  }
  get history() {
    if (this.__history == null) {
      this.__history = new MockHistory();
    }
    return this.__history;
  }
  set history(hsty) {
    this.__history = hsty;
  }
  get JSON() {
    return JSON;
  }
  get HTMLElement() {
    if (this.__htmlElementCstr == null) {
      const ownerDocument = this.document;
      this.__htmlElementCstr = class extends MockHTMLElement {
        constructor() {
          super(ownerDocument, '');
          const observedAttributes = this.constructor.observedAttributes;
          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === 'function') {
            observedAttributes.forEach(attrName => {
              const attrValue = this.getAttribute(attrName);
              if (attrValue != null) {
                this.attributeChangedCallback(attrName, null, attrValue);
              }
            });
          }
        }
      };
    }
    return this.__htmlElementCstr;
  }
  set HTMLElement(htmlElementCstr) {
    this.__htmlElementCstr = htmlElementCstr;
  }
  get IntersectionObserver() {
    return MockIntersectionObserver;
  }
  get localStorage() {
    if (this.__localStorage == null) {
      this.__localStorage = new MockStorage();
    }
    return this.__localStorage;
  }
  set localStorage(locStorage) {
    this.__localStorage = locStorage;
  }
  get location() {
    if (this.__location == null) {
      this.__location = new MockLocation();
    }
    return this.__location;
  }
  set location(val) {
    if (typeof val === 'string') {
      if (this.__location == null) {
        this.__location = new MockLocation();
      }
      this.__location.href = val;
    }
    else {
      this.__location = val;
    }
  }
  matchMedia() {
    return {
      matches: false,
    };
  }
  get Node() {
    if (this.__nodeCstr == null) {
      const ownerDocument = this.document;
      this.__nodeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct Node');
        }
      };
    }
    return this.__nodeCstr;
  }
  get NodeList() {
    if (this.__nodeListCstr == null) {
      const ownerDocument = this.document;
      this.__nodeListCstr = class extends MockNodeList {
        constructor() {
          super(ownerDocument, [], 0);
          throw new Error('Illegal constructor: cannot construct NodeList');
        }
      };
    }
    return this.__nodeListCstr;
  }
  get navigator() {
    if (this.__navigator == null) {
      this.__navigator = new MockNavigator();
    }
    return this.__navigator;
  }
  set navigator(nav) {
    this.__navigator = nav;
  }
  get parent() {
    return null;
  }
  prompt() {
    return '';
  }
  open() {
    return null;
  }
  get origin() {
    return this.location.origin;
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  requestAnimationFrame(callback) {
    return this.setTimeout(() => {
      callback(Date.now());
    }, 0);
  }
  requestIdleCallback(callback) {
    return this.setTimeout(() => {
      callback({
        didTimeout: false,
        timeRemaining: () => 0,
      });
    }, 0);
  }
  scroll(_x, _y) {
    /**/
  }
  scrollBy(_x, _y) {
    /**/
  }
  scrollTo(_x, _y) {
    /**/
  }
  get self() {
    return this;
  }
  get sessionStorage() {
    if (this.__sessionStorage == null) {
      this.__sessionStorage = new MockStorage();
    }
    return this.__sessionStorage;
  }
  set sessionStorage(locStorage) {
    this.__sessionStorage = locStorage;
  }
  setInterval(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    if (this.__allowInterval) {
      const intervalId = this.__setInterval(() => {
        this.__timeouts.delete(intervalId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }, ms);
      this.__timeouts.add(intervalId);
      return intervalId;
    }
    const timeoutId = this.__setTimeout(() => {
      this.__timeouts.delete(timeoutId);
      try {
        callback(...args);
      }
      catch (e) {
        if (this.console) {
          this.console.error(e);
        }
        else {
          console.error(e);
        }
      }
    }, ms);
    this.__timeouts.add(timeoutId);
    return timeoutId;
  }
  setTimeout(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    const timeoutId = this.__setTimeout(() => {
      this.__timeouts.delete(timeoutId);
      try {
        callback(...args);
      }
      catch (e) {
        if (this.console) {
          this.console.error(e);
        }
        else {
          console.error(e);
        }
      }
    }, ms);
    this.__timeouts.add(timeoutId);
    return timeoutId;
  }
  get top() {
    return this;
  }
  get window() {
    return this;
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
}
addGlobalsToWindowPrototype(MockWindow.prototype);
function resetWindowDefaults(win) {
  win.__clearInterval = nativeClearInterval;
  win.__clearTimeout = nativeClearTimeout;
  win.__setInterval = nativeSetInterval;
  win.__setTimeout = nativeSetTimeout;
  win.__maxTimeout = 30000;
  win.__allowInterval = true;
  win.URL = nativeURL;
}
function cloneWindow(srcWin, opts = {}) {
  if (srcWin == null) {
    return null;
  }
  const clonedWin = new MockWindow(false);
  if (!opts.customElementProxy) {
    srcWin.customElements = null;
  }
  if (srcWin.document != null) {
    const clonedDoc = new MockDocument(false, clonedWin);
    clonedWin.document = clonedDoc;
    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);
  }
  else {
    clonedWin.document = new MockDocument(null, clonedWin);
  }
  return clonedWin;
}
function cloneDocument(srcDoc) {
  if (srcDoc == null) {
    return null;
  }
  const dstWin = cloneWindow(srcDoc.defaultView);
  return dstWin.document;
}
/**
 * Constrain setTimeout() to 1ms, but still async. Also
 * only allow setInterval() to fire once, also constrained to 1ms.
 */
function constrainTimeouts(win) {
  win.__allowInterval = false;
  win.__maxTimeout = 0;
}
function resetWindow(win) {
  if (win != null) {
    if (win.__timeouts) {
      win.__timeouts.forEach(timeoutId => {
        nativeClearInterval(timeoutId);
        nativeClearTimeout(timeoutId);
      });
      win.__timeouts.clear();
    }
    if (win.customElements && win.customElements.clear) {
      win.customElements.clear();
    }
    resetDocument(win.document);
    resetPerformance(win.performance);
    for (const key in win) {
      if (win.hasOwnProperty(key) && key !== 'document' && key !== 'performance' && key !== 'customElements') {
        delete win[key];
      }
    }
    resetWindowDefaults(win);
    resetWindowDimensions(win);
    resetEventListeners(win);
    if (win.document != null) {
      try {
        win.document.defaultView = win;
      }
      catch (e) { }
    }
  }
}
function resetWindowDimensions(win) {
  try {
    win.devicePixelRatio = 1;
    win.innerHeight = 768;
    win.innerWidth = 1366;
    win.pageXOffset = 0;
    win.pageYOffset = 0;
    win.screenLeft = 0;
    win.screenTop = 0;
    win.screenX = 0;
    win.screenY = 0;
    win.scrollX = 0;
    win.scrollY = 0;
    win.screen = {
      availHeight: win.innerHeight,
      availLeft: 0,
      availTop: 0,
      availWidth: win.innerWidth,
      colorDepth: 24,
      height: win.innerHeight,
      keepAwake: false,
      orientation: {
        angle: 0,
        type: 'portrait-primary',
      },
      pixelDepth: 24,
      width: win.innerWidth,
    };
  }
  catch (e) { }
}

class MockDocument extends MockHTMLElement {
  constructor(html = null, win = null) {
    super(null, null);
    this.nodeName = "#document" /* DOCUMENT_NODE */;
    this.nodeType = 9 /* DOCUMENT_NODE */;
    this.defaultView = win;
    this.cookie = '';
    this.referrer = '';
    this.appendChild(this.createDocumentTypeNode());
    if (typeof html === 'string') {
      const parsedDoc = parseDocumentUtil(this, html);
      const documentElement = parsedDoc.children.find(elm => elm.nodeName === 'HTML');
      if (documentElement != null) {
        this.appendChild(documentElement);
        setOwnerDocument(documentElement, this);
      }
    }
    else if (html !== false) {
      const documentElement = new MockHTMLElement(this, 'html');
      this.appendChild(documentElement);
      documentElement.appendChild(new MockHTMLElement(this, 'head'));
      documentElement.appendChild(new MockHTMLElement(this, 'body'));
    }
  }
  get location() {
    if (this.defaultView != null) {
      return this.defaultView.location;
    }
    return null;
  }
  set location(val) {
    if (this.defaultView != null) {
      this.defaultView.location = val;
    }
  }
  get baseURI() {
    const baseNode = this.head.childNodes.find(node => node.nodeName === 'BASE');
    if (baseNode) {
      return baseNode.href;
    }
    return this.URL;
  }
  get URL() {
    return this.location.href;
  }
  get styleSheets() {
    return this.querySelectorAll('style');
  }
  get scripts() {
    return this.querySelectorAll('script');
  }
  get forms() {
    return this.querySelectorAll('form');
  }
  get images() {
    return this.querySelectorAll('img');
  }
  get scrollingElement() {
    return this.documentElement;
  }
  get documentElement() {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeName === 'HTML') {
        return this.childNodes[i];
      }
    }
    const documentElement = new MockHTMLElement(this, 'html');
    this.appendChild(documentElement);
    return documentElement;
  }
  set documentElement(documentElement) {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeType !== 10 /* DOCUMENT_TYPE_NODE */) {
        this.childNodes[i].remove();
      }
    }
    if (documentElement != null) {
      this.appendChild(documentElement);
      setOwnerDocument(documentElement, this);
    }
  }
  get head() {
    const documentElement = this.documentElement;
    for (let i = 0; i < documentElement.childNodes.length; i++) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        return documentElement.childNodes[i];
      }
    }
    const head = new MockHTMLElement(this, 'head');
    documentElement.insertBefore(head, documentElement.firstChild);
    return head;
  }
  set head(head) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        documentElement.childNodes[i].remove();
      }
    }
    if (head != null) {
      documentElement.insertBefore(head, documentElement.firstChild);
      setOwnerDocument(head, this);
    }
  }
  get body() {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        return documentElement.childNodes[i];
      }
    }
    const body = new MockHTMLElement(this, 'body');
    documentElement.appendChild(body);
    return body;
  }
  set body(body) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        documentElement.childNodes[i].remove();
      }
    }
    if (body != null) {
      documentElement.appendChild(body);
      setOwnerDocument(body, this);
    }
  }
  appendChild(newNode) {
    newNode.remove();
    newNode.parentNode = this;
    this.childNodes.push(newNode);
    return newNode;
  }
  createComment(data) {
    return new MockComment(this, data);
  }
  createAttribute(attrName) {
    return new MockAttr(attrName.toLowerCase(), '');
  }
  createAttributeNS(namespaceURI, attrName) {
    return new MockAttr(attrName, '', namespaceURI);
  }
  createElement(tagName) {
    if (tagName === "#document" /* DOCUMENT_NODE */) {
      const doc = new MockDocument(false);
      doc.nodeName = tagName;
      doc.parentNode = null;
      return doc;
    }
    return createElement(this, tagName);
  }
  createElementNS(namespaceURI, tagName) {
    const elmNs = createElementNS(this, namespaceURI, tagName);
    elmNs.namespaceURI = namespaceURI;
    return elmNs;
  }
  createTextNode(text) {
    return new MockTextNode(this, text);
  }
  createDocumentFragment() {
    return new MockDocumentFragment(this);
  }
  createDocumentTypeNode() {
    return new MockDocumentTypeNode(this);
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  getElementsByName(elmName) {
    return getElementsByName(this, elmName.toLowerCase());
  }
  get title() {
    const title = this.head.childNodes.find(elm => elm.nodeName === 'TITLE');
    if (title != null) {
      return title.textContent;
    }
    return '';
  }
  set title(value) {
    const head = this.head;
    let title = head.childNodes.find(elm => elm.nodeName === 'TITLE');
    if (title == null) {
      title = this.createElement('title');
      head.appendChild(title);
    }
    title.textContent = value;
  }
}
function createDocument(html = null) {
  return new MockWindow(html).document;
}
function createFragment(html) {
  return parseHtmlToFragment(html, null);
}
function resetDocument(doc) {
  if (doc != null) {
    resetEventListeners(doc);
    const documentElement = doc.documentElement;
    if (documentElement != null) {
      resetElement(documentElement);
      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {
        const childNode = documentElement.childNodes[i];
        resetElement(childNode);
        childNode.childNodes.length = 0;
      }
    }
    for (const key in doc) {
      if (doc.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {
        delete doc[key];
      }
    }
    try {
      doc.nodeName = "#document" /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.nodeType = 9 /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.cookie = '';
    }
    catch (e) { }
    try {
      doc.referrer = '';
    }
    catch (e) { }
  }
}
const DOC_KEY_KEEPERS = new Set(['nodeName', 'nodeType', 'nodeValue', 'ownerDocument', 'parentNode', 'childNodes', '_shadowRoot']);
function getElementById(elm, id) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.id === id) {
      return childElm;
    }
    const childElmFound = getElementById(childElm, id);
    if (childElmFound != null) {
      return childElmFound;
    }
  }
  return null;
}
function getElementsByName(elm, elmName, foundElms = []) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.name && childElm.name.toLowerCase() === elmName) {
      foundElms.push(childElm);
    }
    getElementsByName(childElm, elmName, foundElms);
  }
  return foundElms;
}
function setOwnerDocument(elm, ownerDocument) {
  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
    elm.childNodes[i].ownerDocument = ownerDocument;
    if (elm.childNodes[i].nodeType === 1 /* ELEMENT_NODE */) {
      setOwnerDocument(elm.childNodes[i], ownerDocument);
    }
  }
}

function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {
  var globalThis = $stencilWindow;
  var self = $stencilWindow;
  var top = $stencilWindow;
  var parent = $stencilWindow;

  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);
  var alert = $stencilWindow.alert.bind($stencilWindow);
  var blur = $stencilWindow.blur.bind($stencilWindow);
  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);
  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);
  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);
  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);
  var close = () => {};
  var confirm = $stencilWindow.confirm.bind($stencilWindow);
  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);
  var focus = $stencilWindow.focus.bind($stencilWindow);
  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);
  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);
  var open = $stencilWindow.open.bind($stencilWindow);
  var prompt = $stencilWindow.prompt.bind($stencilWindow);
  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);
  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);
  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);
  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);
  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);

  var CharacterData = $stencilWindow.CharacterData;
  var CSS = $stencilWindow.CSS;
  var CustomEvent = $stencilWindow.CustomEvent;
  var Document = $stencilWindow.Document;
  var DocumentFragment = $stencilWindow.DocumentFragment;
  var DocumentType = $stencilWindow.DocumentType;
  var DOMTokenList = $stencilWindow.DOMTokenList;
  var Element = $stencilWindow.Element;
  var Event = $stencilWindow.Event;
  var HTMLElement = $stencilWindow.HTMLElement;
  var IntersectionObserver = $stencilWindow.IntersectionObserver;
  var KeyboardEvent = $stencilWindow.KeyboardEvent;
  var MouseEvent = $stencilWindow.MouseEvent;
  var Node = $stencilWindow.Node;
  var NodeList = $stencilWindow.NodeList;
  var URL = $stencilWindow.URL;

  var console = $stencilWindow.console;
  var customElements = $stencilWindow.customElements;
  var history = $stencilWindow.history;
  var localStorage = $stencilWindow.localStorage;
  var location = $stencilWindow.location;
  var navigator = $stencilWindow.navigator;
  var performance = $stencilWindow.performance;
  var sessionStorage = $stencilWindow.sessionStorage;

  var devicePixelRatio = $stencilWindow.devicePixelRatio;
  var innerHeight = $stencilWindow.innerHeight;
  var innerWidth = $stencilWindow.innerWidth;
  var origin = $stencilWindow.origin;
  var pageXOffset = $stencilWindow.pageXOffset;
  var pageYOffset = $stencilWindow.pageYOffset;
  var screen = $stencilWindow.screen;
  var screenLeft = $stencilWindow.screenLeft;
  var screenTop = $stencilWindow.screenTop;
  var screenX = $stencilWindow.screenX;
  var screenY = $stencilWindow.screenY;
  var scrollX = $stencilWindow.scrollX;
  var scrollY = $stencilWindow.scrollY;
  var exports = {};

  function hydrateAppClosure($stencilWindow) {
  const window = $stencilWindow;
  const document = $stencilWindow.document;
  /*hydrateAppClosure start*/


const NAMESPACE = 'sonnet';
const BUILD = /* sonnet */ { allRenderFn: false, appendChildSlotFix: false, asyncLoading: true, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: true, cmpDidUpdate: true, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: true, connectedCallback: true, constructableCSS: false, cssAnnotations: true, cssVarShim: false, devTools: false, disconnectedCallback: true, dynamicImportShim: false, element: false, event: true, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: true, hostListenerTargetDocument: true, hostListenerTargetParent: true, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: true, hydratedAttribute: false, hydratedClass: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, safari10: false, scoped: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: false, shadowDomShim: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: false, taskQueue: true, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };

function componentOnReady() {
  return getHostRef(this).$onReadyPromise$;
}

function forceUpdate$1() {}

function hydrateApp(e, t, o, n, s) {
  function l() {
    global.clearTimeout(p), i.clear(), r.clear();
    try {
      t.clientHydrateAnnotations && insertVdomAnnotations(e.document, t.staticComponents), 
      e.document.createElement = c, e.document.createElementNS = $;
    } catch (e) {
      renderCatchError(t, o, e);
    }
    n(e, t, o, s);
  }
  function a(e) {
    renderCatchError(t, o, e), l();
  }
  const r = new Set, i = new Set, d = new Set, c = e.document.createElement, $ = e.document.createElementNS, m = Promise.resolve();
  let p;
  try {
    function u() {
      return f(this);
    }
    function h(e) {
      if (isValidComponent(e, t) && !getHostRef(e)) {
        const t = loadModule({
          $tagName$: e.nodeName.toLowerCase(),
          $flags$: null
        });
        null != t && null != t.cmpMeta && (i.add(e), e.connectedCallback = u, registerHost(e, t.cmpMeta), 
        function o(e, t) {
          if ("function" != typeof e.componentOnReady && (e.componentOnReady = componentOnReady), 
          "function" != typeof e.forceUpdate && (e.forceUpdate = forceUpdate$1), 1 & t.$flags$ && (e.shadowRoot = e), 
          null != t.$members$) {
            const o = getHostRef(e);
            Object.entries(t.$members$).forEach(([n, s]) => {
              const l = s[0];
              if (31 & l) {
                const a = s[1] || n, r = e.getAttribute(a);
                if (null != r) {
                  const e = parsePropertyValue(r, l);
                  o.$instanceValues$.set(n, e);
                }
                const i = e[n];
                void 0 !== i && (o.$instanceValues$.set(n, i), delete e[n]), Object.defineProperty(e, n, {
                  get() {
                    return getValue(this, n);
                  },
                  set(e) {
                    setValue(this, n, e, t);
                  },
                  configurable: !0,
                  enumerable: !0
                });
              } else 64 & l && Object.defineProperty(e, n, {
                value() {
                  const e = getHostRef(this), t = arguments;
                  return e.$onInstancePromise$.then(() => e.$lazyInstance$[n].apply(e.$lazyInstance$, t)).catch(consoleError);
                }
              });
            });
          }
        }(e, t.cmpMeta));
      }
    }
    function f(n) {
      return i.delete(n), isValidComponent(n, t) && o.hydratedCount < t.maxHydrateCount && !r.has(n) && function e(t) {
        if (9 === t.nodeType) return !0;
        if (NO_HYDRATE_TAGS.has(t.nodeName)) return !1;
        if (t.hasAttribute("no-prerender")) return !1;
        const o = t.parentNode;
        return null == o || e(o);
      }(n) ? (r.add(n), async function s(e, t, o, n, l) {
        o = o.toLowerCase();
        const a = loadModule({
          $tagName$: o,
          $flags$: null
        });
        if (null != a && null != a.cmpMeta) {
          l.add(n);
          try {
            connectedCallback(n), await n.componentOnReady(), t.hydratedCount++;
            const e = getHostRef(n), s = e.$modeName$ ? e.$modeName$ : "$";
            t.components.some(e => e.tag === o && e.mode === s) || t.components.push({
              tag: o,
              mode: s,
              count: 0,
              depth: -1
            });
          } catch (t) {
            e.console.error(t);
          }
          l.delete(n);
        }
      }(e, o, n.nodeName, n, d)) : m;
    }
    e.document.createElement = function t(o) {
      const n = c.call(e.document, o);
      return h(n), n;
    }, e.document.createElementNS = function t(o, n) {
      const s = $.call(e.document, o, n);
      return h(s), s;
    }, p = global.setTimeout((function g() {
      a("Hydrate exceeded timeout" + function e(t) {
        return Array.from(t).map(waitingOnElementMsg);
      }(d));
    }), t.timeout), plt.$resourcesUrl$ = new URL(t.resourcesUrl || "./", doc.baseURI).href, 
    function e(t) {
      if (null != t && 1 === t.nodeType) {
        h(t);
        const o = t.children;
        for (let t = 0, n = o.length; t < n; t++) e(o[t]);
      }
    }(e.document.body), function e() {
      const t = Array.from(i).filter(e => e.parentElement);
      return t.length > 0 ? Promise.all(t.map(f)).then(e) : m;
    }().then(l).catch(a);
  } catch (e) {
    a(e);
  }
}

function isValidComponent(e, t) {
  if (null != e && 1 === e.nodeType) {
    const o = e.nodeName;
    if ("string" == typeof o && o.includes("-")) return !t.excludeComponents.includes(o.toLowerCase());
  }
  return !1;
}

function renderCatchError(e, t, o) {
  const n = {
    level: "error",
    type: "build",
    header: "Hydrate Error",
    messageText: "",
    relFilePath: null,
    absFilePath: null,
    lines: []
  };
  if (e.url) try {
    const t = new URL(e.url);
    "/" !== t.pathname && (n.header += ": " + t.pathname);
  } catch (e) {}
  null != o && (null != o.stack ? n.messageText = o.stack.toString() : null != o.message ? n.messageText = o.message.toString() : n.messageText = o.toString()), 
  t.diagnostics.push(n);
}

function printTag(e) {
  let t = "<" + e.nodeName.toLowerCase();
  if (Array.isArray(e.attributes)) for (let o = 0; o < e.attributes.length; o++) {
    const n = e.attributes[o];
    t += " " + n.name, "" !== n.value && (t += `="${n.value}"`);
  }
  return t += ">", t;
}

function waitingOnElementMsg(e) {
  let t = "";
  if (e) {
    const o = [];
    t = " - waiting on:";
    let n = e;
    for (;n && 9 !== n.nodeType && "BODY" !== n.nodeName; ) o.unshift(printTag(n)), 
    n = n.parentElement;
    let s = "";
    for (const e of o) s += "  ", t += `\n${s}${e}`;
  }
  return t;
}

const addHostEventListeners = (e, t, o, n) => {
   o && ( (o = n ? o.filter(([e]) => 16 & e) : o.filter(([e]) => !(16 & e))), 
  o.map(([o, n, s]) => {
    const l =  getHostListenerTarget(e, o) , a = hostListenerProxy(t, s), r = hostListenerOpts(o);
    plt.ael(l, n, a, r), (t.$rmListeners$ = t.$rmListeners$ || []).push(() => plt.rel(l, n, a, r));
  }));
}, hostListenerProxy = (e, t) => o => {
   256 & e.$flags$ ? e.$lazyInstance$[t](o) : (e.$queuedListeners$ = e.$queuedListeners$ || []).push([ t, o ]) ;
}, getHostListenerTarget = (e, t) =>  4 & t ? doc :  8 & t ? win :  32 & t ? doc.body :  16 & t ? e.parentElement : e, hostListenerOpts = e => 0 != (2 & e), XLINK_NS = "http://www.w3.org/1999/xlink";

const createTime = (e, t = "") => {
  return () => {};
}, rootAppliedStyles = new WeakMap, registerStyle = (e, t, o) => {
  let n = styles.get(e);
  n = t, styles.set(e, n);
}, addStyle = (e, t, o, n) => {
  let s = getScopeId(t), l = styles.get(s);
  if (e = 11 === e.nodeType ? e : doc, l) if ("string" == typeof l) {
    e = e.head || e;
    let o, a = rootAppliedStyles.get(e);
    if (a || rootAppliedStyles.set(e, a = new Set), !a.has(s)) {
      if ( e.host && (o = e.querySelector(`[sty-id="${s}"]`))) o.innerHTML = l; else {
        o = doc.createElement("style"), o.innerHTML = l;
         o.setAttribute("sty-id", s), 
        e.insertBefore(o, e.querySelector("link"));
      }
      a && a.add(s);
    }
  }
  return s;
}, attachStyles = e => {
  const t = e.$cmpMeta$, o = e.$hostElement$, s = createTime("attachStyles", t.$tagName$), l = addStyle( o.getRootNode(), t);
  s();
}, getScopeId = (e, t) => "sc-" + ( e.$tagName$), EMPTY_OBJ = {}, isComplexType = e => "object" == (e = typeof e) || "function" === e, IS_DENO_ENV = "undefined" != typeof Deno, IS_NODE_ENV = !(IS_DENO_ENV || "undefined" == typeof global || "function" != typeof require || !global.process || "string" != typeof __filename || global.origin && "string" == typeof global.origin), h = (IS_DENO_ENV && Deno.build.os, 
IS_NODE_ENV ? process.cwd : IS_DENO_ENV && Deno.cwd, 
IS_NODE_ENV ? process.exit : IS_DENO_ENV && Deno.exit, (e, t, ...o) => {
  let n = null, s = null, l = null, a = !1, r = !1, i = [];
  const d = t => {
    for (let o = 0; o < t.length; o++) n = t[o], Array.isArray(n) ? d(n) : null != n && "boolean" != typeof n && ((a = "function" != typeof e && !isComplexType(n)) ? n = String(n) : BUILD.isDev  , 
    a && r ? i[i.length - 1].$text$ += n : i.push(a ? newVNode(null, n) : n), r = a);
  };
  if (d(o), t && ( t.key && (s = t.key), 
   t.name && (l = t.name), BUILD.vdomClass)) {
    const e = t.className || t.class;
    e && (t.class = "object" != typeof e ? e : Object.keys(e).filter(t => e[t]).join(" "));
  }
  if ( "function" == typeof e) return e(null === t ? {} : t, i, vdomFnUtils);
  const c = newVNode(e, null);
  return c.$attrs$ = t, i.length > 0 && (c.$children$ = i),  (c.$key$ = s), 
   (c.$name$ = l), c;
}), newVNode = (e, t) => {
  const o = {
    $flags$: 0,
    $tag$: e,
    $text$: t,
    $elm$: null,
    $children$: null
  };
  return  (o.$attrs$ = null),  (o.$key$ = null), 
   (o.$name$ = null), o;
}, Host = {}, isHost = e => e && e.$tag$ === Host, vdomFnUtils = {
  forEach: (e, t) => e.map(convertToPublic).forEach(t),
  map: (e, t) => e.map(convertToPublic).map(t).map(convertToPrivate)
}, convertToPublic = e => ({
  vattrs: e.$attrs$,
  vchildren: e.$children$,
  vkey: e.$key$,
  vname: e.$name$,
  vtag: e.$tag$,
  vtext: e.$text$
}), convertToPrivate = e => {
  if ("function" == typeof e.vtag) {
    const t = Object.assign({}, e.vattrs);
    return e.vkey && (t.key = e.vkey), e.vname && (t.name = e.vname), h(e.vtag, t, ...e.vchildren || []);
  }
  const t = newVNode(e.vtag, e.vtext);
  return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, 
  t;
}, setAccessor = (e, t, o, n, s, l) => {
  if (o !== n) {
    let a = isMemberInElement(e, t), r = t.toLowerCase();
    if ( "class" === t) {
      const t = e.classList, s = parseClassList(o), l = parseClassList(n);
      t.remove(...s.filter(e => e && !l.includes(e))), t.add(...l.filter(e => e && !s.includes(e)));
    } else if ( "style" === t) {
      for (const t in o) n && null != n[t] || ( e.style[t] = "");
      for (const t in n) o && n[t] === o[t] || ( e.style[t] = n[t]);
    } else if ( "key" === t) ; else if ( "ref" === t) n && n(e); else if ( ( a ) || "o" !== t[0] || "n" !== t[1]) {
      {
        const i = isComplexType(n);
        if ((a || i && null !== n) && !s) try {
          if (e.tagName.includes("-")) e[t] = n; else {
            let s = null == n ? "" : n;
            "list" === t ? a = !1 : null != o && e[t] == s || (e[t] = s);
          }
        } catch (e) {}
        let d = !1;
         r !== (r = r.replace(/^xlink\:?/, "")) && (t = r, d = !0), null == n || !1 === n ? !1 === n && "" !== e.getAttribute(t) || ( d ? e.removeAttributeNS(XLINK_NS, t) : e.removeAttribute(t)) : (!a || 4 & l || s) && !i && (n = !0 === n ? "" : n, 
         d ? e.setAttributeNS(XLINK_NS, t, n) : e.setAttribute(t, n));
      }
    } else t = "-" === t[2] ? t.slice(3) : isMemberInElement(win, r) ? r.slice(2) : r[2] + t.slice(3), 
    o && plt.rel(e, t, o, !1), n && plt.ael(e, t, n, !1);
  }
}, parseClassListRegex = /\s/, parseClassList = e => e ? e.split(parseClassListRegex) : [], updateElement = (e, t, o, n) => {
  const s = 11 === t.$elm$.nodeType && t.$elm$.host ? t.$elm$.host : t.$elm$, l = e && e.$attrs$ || EMPTY_OBJ, a = t.$attrs$ || EMPTY_OBJ;
  for (n in l) n in a || setAccessor(s, n, l[n], void 0, o, t.$flags$);
  for (n in a) setAccessor(s, n, l[n], a[n], o, t.$flags$);
};

let contentRef, hostTagName, useNativeShadowDom = !1, checkSlotFallbackVisibility = !1, checkSlotRelocate = !1, isSvgMode = !1;

const createElm = (e, t, o, n) => {
  let s, l, a, r = t.$children$[o], i = 0;
  if ( !useNativeShadowDom && (checkSlotRelocate = !0, "slot" === r.$tag$ && (r.$flags$ |= r.$children$ ? 2 : 1)),  null !== r.$text$) s = r.$elm$ = doc.createTextNode(r.$text$); else if ( 1 & r.$flags$) s = r.$elm$ =  slotReferenceDebugNode(r) ; else {
    if (s = r.$elm$ =  doc.createElement( 2 & r.$flags$ ? "slot-fb" : r.$tag$), 
     updateElement(null, r, isSvgMode), 
    r.$children$) for (i = 0; i < r.$children$.length; ++i) l = createElm(e, r, i), 
    l && s.appendChild(l);
  }
  return  (s["s-hn"] = hostTagName, 3 & r.$flags$ && (s["s-sr"] = !0, 
  s["s-cr"] = contentRef, s["s-sn"] = r.$name$ || "", a = e && e.$children$ && e.$children$[o], 
  a && a.$tag$ === r.$tag$ && e.$elm$ && putBackInOriginalLocation(e.$elm$, !1))), 
  s;
}, putBackInOriginalLocation = (e, t) => {
  plt.$flags$ |= 1;
  const o = e.childNodes;
  for (let e = o.length - 1; e >= 0; e--) {
    const n = o[e];
    n["s-hn"] !== hostTagName && n["s-ol"] && (parentReferenceNode(n).insertBefore(n, referenceNode(n)), 
    n["s-ol"].remove(), n["s-ol"] = void 0, checkSlotRelocate = !0), t && putBackInOriginalLocation(n, t);
  }
  plt.$flags$ &= -2;
}, addVnodes = (e, t, o, n, s, l) => {
  let a, r =  e["s-cr"] && e["s-cr"].parentNode || e;
  for (BUILD.shadowDom   ; s <= l; ++s) n[s] && (a = createElm(null, o, s), 
  a && (n[s].$elm$ = a, r.insertBefore(a,  referenceNode(t) )));
}, removeVnodes = (e, t, o, n, s) => {
  for (;t <= o; ++t) (n = e[t]) && (s = n.$elm$, callNodeRefs(n),  (checkSlotFallbackVisibility = !0, 
  s["s-ol"] ? s["s-ol"].remove() : putBackInOriginalLocation(s, !0)), s.remove());
}, isSameVnode = (e, t) => e.$tag$ === t.$tag$ && ( "slot" === e.$tag$ ? e.$name$ === t.$name$ :  e.$key$ === t.$key$), referenceNode = e => e && e["s-ol"] || e, parentReferenceNode = e => (e["s-ol"] ? e["s-ol"] : e).parentNode, patch = (e, t) => {
  const o = t.$elm$ = e.$elm$, n = e.$children$, s = t.$children$, l = t.$tag$, a = t.$text$;
  let r;
   null !== a ?  (r = o["s-cr"]) ? r.parentNode.textContent = a :  e.$text$ !== a && (o.data = a) : ( ( "slot" === l || updateElement(e, t, isSvgMode)), 
   null !== n && null !== s ? ((e, t, o, n) => {
    let s, l, a = 0, r = 0, i = 0, d = 0, c = t.length - 1, $ = t[0], m = t[c], p = n.length - 1, u = n[0], h = n[p];
    for (;a <= c && r <= p; ) if (null == $) $ = t[++a]; else if (null == m) m = t[--c]; else if (null == u) u = n[++r]; else if (null == h) h = n[--p]; else if (isSameVnode($, u)) patch($, u), 
    $ = t[++a], u = n[++r]; else if (isSameVnode(m, h)) patch(m, h), m = t[--c], h = n[--p]; else if (isSameVnode($, h))  "slot" !== $.$tag$ && "slot" !== h.$tag$ || putBackInOriginalLocation($.$elm$.parentNode, !1), 
    patch($, h), e.insertBefore($.$elm$, m.$elm$.nextSibling), $ = t[++a], h = n[--p]; else if (isSameVnode(m, u))  "slot" !== $.$tag$ && "slot" !== h.$tag$ || putBackInOriginalLocation(m.$elm$.parentNode, !1), 
    patch(m, u), e.insertBefore(m.$elm$, $.$elm$), m = t[--c], u = n[++r]; else {
      if (i = -1, BUILD.vdomKey) for (d = a; d <= c; ++d) if (t[d] && null !== t[d].$key$ && t[d].$key$ === u.$key$) {
        i = d;
        break;
      }
       i >= 0 ? (l = t[i], l.$tag$ !== u.$tag$ ? s = createElm(t && t[r], o, i) : (patch(l, u), 
      t[i] = void 0, s = l.$elm$), u = n[++r]) : (s = createElm(t && t[r], o, r), u = n[++r]), 
      s && ( parentReferenceNode($.$elm$).insertBefore(s, referenceNode($.$elm$)) );
    }
    a > c ? addVnodes(e, null == n[p + 1] ? null : n[p + 1].$elm$, o, n, r, p) :  r > p && removeVnodes(t, a, c);
  })(o, n, t, s) : null !== s ? ( null !== e.$text$ && (o.textContent = ""), 
  addVnodes(o, null, t, s, 0, s.length - 1)) :  null !== n && removeVnodes(n, 0, n.length - 1), 
  BUILD.svg   );
}, updateFallbackSlotVisibility = e => {
  let t, o, n, s, l, a, r = e.childNodes;
  for (o = 0, n = r.length; o < n; o++) if (t = r[o], 1 === t.nodeType) {
    if (t["s-sr"]) for (l = t["s-sn"], t.hidden = !1, s = 0; s < n; s++) if (r[s]["s-hn"] !== t["s-hn"]) if (a = r[s].nodeType, 
    "" !== l) {
      if (1 === a && l === r[s].getAttribute("slot")) {
        t.hidden = !0;
        break;
      }
    } else if (1 === a || 3 === a && "" !== r[s].textContent.trim()) {
      t.hidden = !0;
      break;
    }
    updateFallbackSlotVisibility(t);
  }
}, relocateNodes = [], relocateSlotContent = e => {
  let t, o, n, s, l, a, r = 0, i = e.childNodes, d = i.length;
  for (;r < d; r++) {
    if (t = i[r], t["s-sr"] && (o = t["s-cr"])) for (n = o.parentNode.childNodes, s = t["s-sn"], 
    a = n.length - 1; a >= 0; a--) o = n[a], o["s-cn"] || o["s-nr"] || o["s-hn"] === t["s-hn"] || (isNodeLocatedInSlot(o, s) ? (l = relocateNodes.find(e => e.$nodeToRelocate$ === o), 
    checkSlotFallbackVisibility = !0, o["s-sn"] = o["s-sn"] || s, l ? l.$slotRefNode$ = t : relocateNodes.push({
      $slotRefNode$: t,
      $nodeToRelocate$: o
    }), o["s-sr"] && relocateNodes.map(e => {
      isNodeLocatedInSlot(e.$nodeToRelocate$, o["s-sn"]) && (l = relocateNodes.find(e => e.$nodeToRelocate$ === o), 
      l && !e.$slotRefNode$ && (e.$slotRefNode$ = l.$slotRefNode$));
    })) : relocateNodes.some(e => e.$nodeToRelocate$ === o) || relocateNodes.push({
      $nodeToRelocate$: o
    }));
    1 === t.nodeType && relocateSlotContent(t);
  }
}, isNodeLocatedInSlot = (e, t) => 1 === e.nodeType ? null === e.getAttribute("slot") && "" === t || e.getAttribute("slot") === t : e["s-sn"] === t || "" === t, callNodeRefs = e => {
   (e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(callNodeRefs));
}, renderVdom = (e, t) => {
  const o = e.$hostElement$, n = e.$cmpMeta$, s = e.$vnode$ || newVNode(null, null), l = isHost(t) ? t : h(null, null, t);
  if (hostTagName = o.tagName, BUILD.isDev  ) ;
  if ( n.$attrsToReflect$ && (l.$attrs$ = l.$attrs$ || {}, n.$attrsToReflect$.map(([e, t]) => l.$attrs$[t] = o[e])), 
  l.$tag$ = null, l.$flags$ |= 4, e.$vnode$ = l, l.$elm$ = s.$elm$ =  o, 
   (contentRef = o["s-cr"], 
  useNativeShadowDom = supportsShadow, checkSlotFallbackVisibility = !1), patch(s, l), 
  BUILD.slotRelocation) {
    if (plt.$flags$ |= 1, checkSlotRelocate) {
      let e, t, o, n, s, a;
      relocateSlotContent(l.$elm$);
      let r = 0;
      for (;r < relocateNodes.length; r++) e = relocateNodes[r], t = e.$nodeToRelocate$, 
      t["s-ol"] || (o =  originalLocationDebugNode(t) , 
      o["s-nr"] = t, t.parentNode.insertBefore(t["s-ol"] = o, t));
      for (r = 0; r < relocateNodes.length; r++) if (e = relocateNodes[r], t = e.$nodeToRelocate$, 
      e.$slotRefNode$) {
        for (n = e.$slotRefNode$.parentNode, s = e.$slotRefNode$.nextSibling, o = t["s-ol"]; o = o.previousSibling; ) if (a = o["s-nr"], 
        a && a["s-sn"] === t["s-sn"] && n === a.parentNode && (a = a.nextSibling, !a || !a["s-nr"])) {
          s = a;
          break;
        }
        (!s && n !== t.parentNode || t.nextSibling !== s) && t !== s && (!t["s-hn"] && t["s-ol"] && (t["s-hn"] = t["s-ol"].parentNode.nodeName), 
        n.insertBefore(t, s));
      } else 1 === t.nodeType && (t.hidden = !0);
    }
    checkSlotFallbackVisibility && updateFallbackSlotVisibility(l.$elm$), plt.$flags$ &= -2, 
    relocateNodes.length = 0;
  }
}, slotReferenceDebugNode = e => doc.createComment(`<slot${e.$name$ ? ' name="' + e.$name$ + '"' : ""}> (host=${hostTagName.toLowerCase()})`), originalLocationDebugNode = e => doc.createComment("org-location for " + (e.localName ? `<${e.localName}> (host=${e["s-hn"]})` : `[${e.textContent}]`)), getElement = e =>  getHostRef(e).$hostElement$ , createEvent = (e, t, o) => {
  const n = getElement(e);
  return {
    emit: e => (emitEvent(n, t, {
      bubbles: !!(4 & o),
      composed: !!(2 & o),
      cancelable: !!(1 & o),
      detail: e
    }))
  };
}, emitEvent = (e, t, o) => {
  const n = plt.ce(t, o);
  return e.dispatchEvent(n), n;
}, attachToAncestor = (e, t) => {
   t && !e.$onRenderResolve$ && t["s-p"] && t["s-p"].push(new Promise(t => e.$onRenderResolve$ = t));
}, scheduleUpdate = (e, t) => {
  if ( (e.$flags$ |= 16),  4 & e.$flags$) return void (e.$flags$ |= 512);
  attachToAncestor(e, e.$ancestorComponent$);
  const o = () => dispatchHooks(e, t);
  return  writeTask(o) ;
}, dispatchHooks = (e, t) => {
  const n = createTime("scheduleUpdate", e.$cmpMeta$.$tagName$), s =  e.$lazyInstance$ ;
  let l;
  return t ? ( (e.$flags$ |= 256, e.$queuedListeners$ && (e.$queuedListeners$.map(([e, t]) => safeCall(s, e, t)), 
  e.$queuedListeners$ = null)),  (l = safeCall(s, "componentWillLoad"))) : ( (l = safeCall(s, "componentWillUpdate"))),  (l = then(l, () => safeCall(s, "componentWillRender"))), 
  n(), then(l, () => updateComponent(e, s, t));
}, updateComponent = (e, t, o) => {
  const n = e.$hostElement$, s = createTime("update", e.$cmpMeta$.$tagName$), l = n["s-rc"];
   o && attachStyles(e);
  const a = createTime("render", e.$cmpMeta$.$tagName$);
  if ( ( renderVdom(e, callRender(e, t)) ), 
  BUILD.hydrateServerSide) try {
    serverSideConnected(n), o && (1 & e.$cmpMeta$.$flags$ ? n["s-en"] = "" : 2 & e.$cmpMeta$.$flags$ && (n["s-en"] = "c"));
  } catch (e) {
    consoleError(e);
  }
  if ( l && (l.map(e => e()), n["s-rc"] = void 0), a(), s(), 
  BUILD.asyncLoading) {
    const t = n["s-p"], o = () => postUpdateComponent(e);
    0 === t.length ? o() : (Promise.all(t).then(o), e.$flags$ |= 4, t.length = 0);
  }
};

const callRender = (e, t) => {
  try {
    t = ( t.render) && t.render(),  (e.$flags$ &= -17), 
     (e.$flags$ |= 2);
  } catch (e) {
    consoleError(e);
  }
  return t;
}, postUpdateComponent = e => {
  const t = e.$cmpMeta$.$tagName$, o = e.$hostElement$, n = createTime("postUpdate", t), s =  e.$lazyInstance$ , l = e.$ancestorComponent$;
   (safeCall(s, "componentDidRender"), 
  BUILD.isDev ), 64 & e.$flags$ ? ( (safeCall(s, "componentDidUpdate"), 
  BUILD.isDev ), n()) : (e.$flags$ |= 64,  addHydratedFlag(o), 
   (safeCall(s, "componentDidLoad"), 
  BUILD.isDev ), n(),  (e.$onReadyResolve$(o), l || appDidLoad())),  e.$onInstanceResolve$(o),  (e.$onRenderResolve$ && (e.$onRenderResolve$(), 
  e.$onRenderResolve$ = void 0), 512 & e.$flags$ && nextTick(() => scheduleUpdate(e, !1)), 
  e.$flags$ &= -517);
}, appDidLoad = e => {
   addHydratedFlag(doc.documentElement), nextTick(() => emitEvent(win, "appload", {
    detail: {
      namespace: NAMESPACE
    }
  })), BUILD.profile  ;
}, safeCall = (e, t, o) => {
  if (e && e[t]) try {
    return e[t](o);
  } catch (e) {
    consoleError(e);
  }
}, then = (e, t) => e && e.then ? e.then(t) : t(), addHydratedFlag = e =>  e.classList.add("hydrated") , serverSideConnected = e => {
  const t = e.children;
  if (null != t) for (let e = 0, o = t.length; e < o; e++) {
    const o = t[e];
    "function" == typeof o.connectedCallback && o.connectedCallback(), serverSideConnected(o);
  }
}, clientHydrate = (e, t, o, n, s, l, a) => {
  let r, i, d, c;
  if (1 === l.nodeType) {
    for (r = l.getAttribute("c-id"), r && (i = r.split("."), i[0] !== a && "0" !== i[0] || (d = {
      $flags$: 0,
      $hostId$: i[0],
      $nodeId$: i[1],
      $depth$: i[2],
      $index$: i[3],
      $tag$: l.tagName.toLowerCase(),
      $elm$: l,
      $attrs$: null,
      $children$: null,
      $key$: null,
      $name$: null,
      $text$: null
    }, t.push(d), l.removeAttribute("c-id"), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
    e = d, n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))), c = l.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.childNodes[c], a);
    if (l.shadowRoot) for (c = l.shadowRoot.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.shadowRoot.childNodes[c], a);
  } else if (8 === l.nodeType) i = l.nodeValue.split("."), i[1] !== a && "0" !== i[1] || (r = i[0], 
  d = {
    $flags$: 0,
    $hostId$: i[1],
    $nodeId$: i[2],
    $depth$: i[3],
    $index$: i[4],
    $elm$: l,
    $attrs$: null,
    $children$: null,
    $key$: null,
    $name$: null,
    $tag$: null,
    $text$: null
  }, "t" === r ? (d.$elm$ = l.nextSibling, d.$elm$ && 3 === d.$elm$.nodeType && (d.$text$ = d.$elm$.textContent, 
  t.push(d), l.remove(), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
  n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))) : d.$hostId$ === a && ("s" === r ? (d.$tag$ = "slot", 
  i[5] ? l["s-sn"] = d.$name$ = i[5] : l["s-sn"] = "", l["s-sr"] = !0, o.push(d), e.$children$ || (e.$children$ = []), 
  e.$children$[d.$index$] = d) : "r" === r && (  (s["s-cr"] = l, 
  l["s-cn"] = !0)))); else if (e && "style" === e.$tag$) {
    const t = newVNode(null, l.textContent);
    t.$elm$ = l, t.$index$ = "0", e.$children$ = [ t ];
  }
}, initializeDocumentHydrate = (e, t) => {
  if (1 === e.nodeType) {
    let o = 0;
    for (;o < e.childNodes.length; o++) initializeDocumentHydrate(e.childNodes[o], t);
    if (e.shadowRoot) for (o = 0; o < e.shadowRoot.childNodes.length; o++) initializeDocumentHydrate(e.shadowRoot.childNodes[o], t);
  } else if (8 === e.nodeType) {
    const o = e.nodeValue.split(".");
    "o" === o[0] && (t.set(o[1] + "." + o[2], e), e.nodeValue = "", e["s-en"] = o[3]);
  }
}, parsePropertyValue = (e, t) => null == e || isComplexType(e) ? e :  4 & t ? "false" !== e && ("" === e || !!e) :  2 & t ? parseFloat(e) :  1 & t ? String(e) : e, getValue = (e, t) => getHostRef(e).$instanceValues$.get(t), setValue = (e, t, o, n) => {
  const s = getHostRef(e), a = s.$instanceValues$.get(t), r = s.$flags$, i =  s.$lazyInstance$ ;
  if (o = parsePropertyValue(o, n.$members$[t][0]), !( 8 & r && void 0 !== a || o === a) && (s.$instanceValues$.set(t, o), 
   i)) {
    if ( n.$watchers$ && 128 & r) {
      const e = n.$watchers$[t];
      e && e.map(e => {
        try {
          i[e](o, a, t);
        } catch (e) {
          consoleError(e);
        }
      });
    }
    if ( 2 == (18 & r)) {
      scheduleUpdate(s, !1);
    }
  }
}, proxyComponent = (e, t, o) => {
  if ( t.$members$) {
     e.watchers && (t.$watchers$ = e.watchers);
    const n = Object.entries(t.$members$), s = e.prototype;
    if (n.map(([e, [n]]) => {
       (31 & n || ( 2 & o) && 32 & n) ? Object.defineProperty(s, e, {
        get() {
          return getValue(this, e);
        },
        set(s) {
          setValue(this, e, s, t);
        },
        configurable: !0,
        enumerable: !0
      }) :  1 & o && 64 & n && Object.defineProperty(s, e, {
        value(...t) {
          const o = getHostRef(this);
          return o.$onInstancePromise$.then(() => o.$lazyInstance$[e](...t));
        }
      });
    }),  ( 1 & o)) {
      const o = new Map;
      s.attributeChangedCallback = function(e, t, n) {
        plt.jmp(() => {
          const t = o.get(e);
          this[t] = (null !== n || "boolean" != typeof this[t]) && n;
        });
      }, e.observedAttributes = n.filter(([e, t]) => 15 & t[0]).map(([e, n]) => {
        const s = n[1] || e;
        return o.set(s, e),  512 & n[0] && t.$attrsToReflect$.push([ e, s ]), 
        s;
      });
    }
  }
  return e;
}, initializeComponent = async (e, t, o, n, s) => {
  if ( 0 == (32 & t.$flags$)) {
    {
      if (t.$flags$ |= 32, (s = loadModule(o)).then) {
        const e = ( () => {});
        s = await s, e();
      }
       !s.isProxied && ( (o.$watchers$ = s.watchers), 
      proxyComponent(s, o, 2), s.isProxied = !0);
      const e = createTime("createInstance", o.$tagName$);
       (t.$flags$ |= 8);
      try {
        new s(t);
      } catch (e) {
        consoleError(e);
      }
       (t.$flags$ &= -9),  (t.$flags$ |= 128), e(), 
      fireConnectedCallback(t.$lazyInstance$);
    }
    if ( s.style) {
      let n = s.style;
      const l = getScopeId(o);
      if (!styles.has(l)) {
        const e = createTime("registerStyles", o.$tagName$);
        registerStyle(l, n), e();
      }
    }
  }
  const r = t.$ancestorComponent$, i = () => scheduleUpdate(t, !0);
   r && r["s-rc"] ? r["s-rc"].push(i) : i();
}, fireConnectedCallback = e => {
   safeCall(e, "connectedCallback");
}, connectedCallback = e => {
  if (0 == (1 & plt.$flags$)) {
    const t = getHostRef(e), o = t.$cmpMeta$, n = createTime("connectedCallback", o.$tagName$);
    if ( addHostEventListeners(e, t, o.$listeners$, !0), 
    1 & t.$flags$) addHostEventListeners(e, t, o.$listeners$, !1), fireConnectedCallback(t.$lazyInstance$); else {
      let n;
      if (t.$flags$ |= 1,  (n = e.getAttribute("s-id"), n)) {
        ((e, t, o, n) => {
          const s = createTime("hydrateClient", t), l = e.shadowRoot, a = [], r =  null, i = n.$vnode$ = newVNode(t, null);
          plt.$orgLocNodes$ || initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map), 
          e["s-id"] = o, e.removeAttribute("s-id"), clientHydrate(i, a, [], r, e, e, o), a.map(e => {
            const o = e.$hostId$ + "." + e.$nodeId$, n = plt.$orgLocNodes$.get(o), s = e.$elm$;
            n && supportsShadow && "" === n["s-en"] && n.parentNode.insertBefore(s, n.nextSibling), 
            l || (s["s-hn"] = t, n && (s["s-ol"] = n, s["s-ol"]["s-nr"] = s)), plt.$orgLocNodes$.delete(o);
          }), s();
        })(e, o.$tagName$, n, t);
      }
      if ( !n && (BUILD.hydrateServerSide ) && setContentReference(e), 
      BUILD.asyncLoading) {
        let o = e;
        for (;o = o.parentNode || o.host; ) if ( 1 === o.nodeType && o.hasAttribute("s-id") && o["s-p"] || o["s-p"]) {
          attachToAncestor(t, t.$ancestorComponent$ = o);
          break;
        }
      }
       initializeComponent(e, t, o);
    }
    n();
  }
}, setContentReference = e => {
  const t = e["s-cr"] = doc.createComment( "");
  t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, getAssetPath = e => {
  const t = new URL(e, plt.$resourcesUrl$);
  return t.origin !== win.location.origin ? t.href : t.pathname;
}, getContext = (e, t) => t in Context ? Context[t] : "window" === t ? win : "document" === t ? doc : "isServer" === t || "isPrerender" === t ? !!BUILD.hydrateServerSide : "isClient" === t ? !BUILD.hydrateServerSide : "resourcesUrl" === t || "publicPath" === t ? getAssetPath(".") : "queue" === t ? {
  write: writeTask,
  read: readTask,
  tick: {
    then: e => nextTick(e)
  }
} : void 0, insertVdomAnnotations = (e, t) => {
  if (null != e) {
    const o = {
      hostIds: 0,
      rootLevelIds: 0,
      staticComponents: new Set(t)
    }, n = [];
    parseVNodeAnnotations(e, e.body, o, n), n.forEach(t => {
      if (null != t) {
        const n = t["s-nr"];
        let s = n["s-host-id"], l = n["s-node-id"], a = `${s}.${l}`;
        if (null == s) if (s = 0, o.rootLevelIds++, l = o.rootLevelIds, a = `${s}.${l}`, 
        1 === n.nodeType) n.setAttribute("c-id", a); else if (3 === n.nodeType) {
          if (0 === s && "" === n.nodeValue.trim()) return void t.remove();
          const o = e.createComment(a);
          o.nodeValue = "t." + a, n.parentNode.insertBefore(o, n);
        }
        let r = "o." + a;
        const i = t.parentElement;
        i && ("" === i["s-en"] ? r += "." : "c" === i["s-en"] && (r += ".c")), t.nodeValue = r;
      }
    });
  }
}, parseVNodeAnnotations = (e, t, o, n) => {
  null != t && (null != t["s-nr"] && n.push(t), 1 === t.nodeType && t.childNodes.forEach(t => {
    const s = getHostRef(t);
    if (null != s && !o.staticComponents.has(t.nodeName.toLowerCase())) {
      const n = {
        nodeIds: 0
      };
      insertVNodeAnnotations(e, t, s.$vnode$, o, n);
    }
    parseVNodeAnnotations(e, t, o, n);
  }));
}, insertVNodeAnnotations = (e, t, o, n, s) => {
  if (null != o) {
    const l = ++n.hostIds;
    if (t.setAttribute("s-id", l), null != t["s-cr"] && (t["s-cr"].nodeValue = "r." + l), 
    null != o.$children$) {
      const t = 0;
      o.$children$.forEach((o, n) => {
        insertChildVNodeAnnotations(e, o, s, l, t, n);
      });
    }
    if (t && o && o.$elm$ && !t.hasAttribute("c-id")) {
      const e = t.parentElement;
      if (e && e.childNodes) {
        const n = Array.from(e.childNodes), s = n.find(e => 8 === e.nodeType && e["s-sr"]);
        if (s) {
          const e = n.indexOf(t) - 1;
          o.$elm$.setAttribute("c-id", `${s["s-host-id"]}.${s["s-node-id"]}.0.${e}`);
        }
      }
    }
  }
}, insertChildVNodeAnnotations = (e, t, o, n, s, l) => {
  const a = t.$elm$;
  if (null == a) return;
  const r = o.nodeIds++, i = `${n}.${r}.${s}.${l}`;
  if (a["s-host-id"] = n, a["s-node-id"] = r, 1 === a.nodeType) a.setAttribute("c-id", i); else if (3 === a.nodeType) {
    const t = a.parentNode;
    if ("STYLE" !== t.nodeName) {
      const o = "t." + i, n = e.createComment(o);
      t.insertBefore(n, a);
    }
  } else if (8 === a.nodeType && a["s-sr"]) {
    const e = `s.${i}.${a["s-sn"] || ""}`;
    a.nodeValue = e;
  }
  if (null != t.$children$) {
    const l = s + 1;
    t.$children$.forEach((t, s) => {
      insertChildVNodeAnnotations(e, t, o, n, l, s);
    });
  }
}, NO_HYDRATE_TAGS = new Set([ "CODE", "HEAD", "IFRAME", "INPUT", "OBJECT", "OUTPUT", "NOSCRIPT", "PRE", "SCRIPT", "SELECT", "STYLE", "TEMPLATE", "TEXTAREA" ]), cmpModules = new Map, getModule = e => {
  if ("string" == typeof e) {
    e = e.toLowerCase();
    const t = cmpModules.get(e);
    if (null != t) return t[e];
  }
  return null;
}, loadModule = (e, t, o) => getModule(e.$tagName$), isMemberInElement = (e, t) => {
  if (null != e) {
    if (t in e) return !0;
    const o = getModule(e.nodeName);
    if (null != o) {
      const e = o;
      if (null != e && null != e.cmpMeta && null != e.cmpMeta.$members$) return t in e.cmpMeta.$members$;
    }
  }
  return !1;
}, registerComponents = e => {
  for (const t of e) {
    const e = t.cmpMeta.$tagName$;
    cmpModules.set(e, {
      [e]: t
    });
  }
}, win = window, doc = win.document, readTask = e => {
  process.nextTick(() => {
    try {
      e();
    } catch (e) {
      consoleError(e);
    }
  });
}, writeTask = e => {
  process.nextTick(() => {
    try {
      e();
    } catch (e) {
      consoleError(e);
    }
  });
}, resolved = Promise.resolve(), nextTick = e => resolved.then(e), consoleError = e => {
  null != e && console.error(e.stack || e.message || e);
}, Context = {}, plt = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: e => e(),
  raf: e => requestAnimationFrame(e),
  ael: (e, t, o, n) => e.addEventListener(t, o, n),
  rel: (e, t, o, n) => e.removeEventListener(t, o, n),
  ce: (e, t) => new win.CustomEvent(e, t)
}, supportsShadow = !1, hostRefs = new WeakMap, getHostRef = e => hostRefs.get(e), registerInstance = (e, t) => hostRefs.set(t.$lazyInstance$ = e, t), registerHost = (e, t) => {
  const o = {
    $flags$: 0,
    $cmpMeta$: t,
    $hostElement$: e,
    $instanceValues$: new Map,
    $renderCount$: 0
  };
  return o.$onInstancePromise$ = new Promise(e => o.$onInstanceResolve$ = e), o.$onReadyPromise$ = new Promise(e => o.$onReadyResolve$ = e), 
  e["s-p"] = [], e["s-rc"] = [], addHostEventListeners(e, o, t.$listeners$, !1), hostRefs.set(e, o);
}, styles = new Map;

class Pair {
    static of(left, right) {
        return new MutablePair(left, right);
    }
}
class MutablePair extends Pair {
    constructor(left, right) {
        super();
        this.tuple = [left, right];
    }
    getLeft() {
        return this.tuple[0];
    }
    getRight() {
        return this.tuple[1];
    }
}

class ComponentConstants {
}
ComponentConstants.EXTRA_SMALL = Pair.of(0, 319);
ComponentConstants.SMALL = Pair.of(320, 767);
ComponentConstants.MEDIUM = Pair.of(768, 1023);
ComponentConstants.LARGE = Pair.of(1024, 1439);
ComponentConstants.EXTRA_LARGE = Pair.of(1440, null);
ComponentConstants.CART_COOKIE_NAME = "cart_number_of_quotes";
ComponentConstants.AUTH_COOKIE_NAME = "_auth";

class StringUtils {
    static toCamelCase(value) {
        const arr = value.split(/[_-]/);
        let result = "";
        for (let i = 1; i < arr.length; i++) {
            result += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
        }
        return arr[0] + result;
    }
    static toDashCase(value) {
        return value.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();
    }
    static hasValue(value) {
        return (!(StringUtils.isNullOrUndefined(value)) && ((StringUtils.isString(value)) && (value.trim().length > 0)));
    }
    static hasLength(value) {
        return !(StringUtils.isEmpty(value));
    }
    static isEmpty(value) {
        return ((StringUtils.isNullOrUndefined(value)) || (StringUtils.tryIsString(value) && (value.length == 0)));
    }
    static notEmpty(object) {
        return !(StringUtils.isEmpty(object));
    }
    static isString(value) {
        return (typeof (value) == "string");
    }
    static empty() {
        return "";
    }
    static join(values, separator) {
        return Array.from(values).join(separator);
    }
    static tryIsString(value) {
        if (!(StringUtils.isString(value))) {
            throw "Object " + value + " is not an instance of type string";
        }
        return true;
    }
}
StringUtils.SPACE_SEPARATOR = " ";
StringUtils.COMMA_SEPARATOR = ", ";
StringUtils.isNullOrUndefined = function (object) {
    return ((object === undefined) || (object === null));
};

class WebUtils {
    static getObjectReference(value, base) {
        return value.split('.').reduce((obj, i) => {
            const reference = obj[i];
            if (reference) {
                return reference;
            }
            throw Error(`Argument value with value ${value} does not exist.`);
        }, base);
    }
    static sleep(duration) {
        return new Promise(resolve => setTimeout(resolve, duration));
    }
    static getTransitionDuration(element) {
        return parseFloat(getComputedStyle(element).transitionDuration) * 1000;
    }
    static isValidEscapeKey(event) {
        return ((event["keyCode"] && event.keyCode == 27) || (event["key"] && event.key == "Escape") || (event["code"] && event.key == "Escape"));
    }
    static appendElement(parent, element, elementRequired = false) {
        if (element) {
            parent.appendChild(element);
        }
        else if (elementRequired) {
            throw Error("Argument element is null and marked as required.");
        }
    }
    static generateClasses(classes, value) {
        let results = new Set(classes);
        new Set(value.split(StringUtils.SPACE_SEPARATOR)).forEach(results.add, results);
        return StringUtils.join(results, StringUtils.SPACE_SEPARATOR);
    }
    static getAbsoluteHeight(el) {
        // Get the DOM Node if you pass in a string
        el = (typeof el === 'string') ? document.querySelector(el) : el;
        var styles = window.getComputedStyle(el);
        var margin = parseFloat(styles['marginTop']) +
            parseFloat(styles['marginBottom']);
        return Math.ceil(el.offsetHeight + margin);
    }
    static getObjectFromString(string) {
        try {
            return JSON.parse(string);
        }
        catch (e) {
            throw new Error("Error!");
        }
    }
    static getMediaQueryInstances() {
        const mediaQueryInstances = [
            {
                name: 'extra-small',
                mediaQueryList: window.matchMedia(`(max-width: ${ComponentConstants.EXTRA_SMALL.getRight()}px)`)
            },
            {
                name: 'small',
                mediaQueryList: window.matchMedia(`(min-width: ${ComponentConstants.SMALL.getLeft()}px) and (max-width: ${ComponentConstants.SMALL.getRight()}px)`)
            },
            {
                name: 'medium',
                mediaQueryList: window.matchMedia(`(min-width: ${ComponentConstants.MEDIUM.getLeft()}px) and (max-width: ${ComponentConstants.MEDIUM.getRight()}px)`)
            },
            {
                name: 'large',
                mediaQueryList: window.matchMedia(`(min-width: ${ComponentConstants.LARGE.getLeft()}px) and (max-width: ${ComponentConstants.LARGE.getRight()}px)`)
            },
            {
                name: 'extra-large',
                mediaQueryList: window.matchMedia(`(min-width: ${ComponentConstants.EXTRA_LARGE.getLeft()}px)`)
            }
        ];
        return mediaQueryInstances;
    }
}

var AccordionStateEnum;
(function (AccordionStateEnum) {
    AccordionStateEnum[AccordionStateEnum["COLLAPSED"] = 0] = "COLLAPSED";
    AccordionStateEnum[AccordionStateEnum["EXPANDED"] = 1] = "EXPANDED";
})(AccordionStateEnum || (AccordionStateEnum = {}));

class AccordionEvent {
    constructor(state) {
        this.state = state;
    }
}

const accordionComponentCss = "snt-accordion{display:block;width:100%;margin-bottom:5px}snt-accordion .card{border:none;background-color:transparent}snt-accordion .card-header{position:relative;overflow:hidden;z-index:0;border:0.25px solid #262626;background-color:transparent;padding:0;border-radius:0}snt-accordion .card-header:first-child{border-radius:0}snt-accordion .card-header button{position:relative;width:100%;z-index:0;text-align:left;white-space:normal;background-color:transparent;border:none;padding:17px 75px 16px 30px}snt-accordion .card-panel{overflow:hidden;-webkit-transition:height 0.75s;transition:height 0.75s}snt-accordion .card-panel.transitioning{display:block}snt-accordion[expanded] .card-header button:after{background-image:url(\"data:image/svg+xml,%3Csvg width='100%' height='100%' viewBox='0 0 45 45' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 57.1 (83088) - https://sketch.com --%3E%3Ctitle%3Eicon_global_caret_lk%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Cpath d='M22.4891039,34 C21.9795084,34 21.4699128,33.8149412 21.0709531,33.4448236 L0.680426242,14.6563092 C-0.174487332,13.8689682 -0.23148157,12.5365449 0.553027357,11.6785451 C1.33753628,10.8239099 2.66851938,10.7700746 3.51672775,11.554051 L22.4891039,29.0370597 L41.4815957,11.5574157 C42.3365092,10.7734393 43.6574345,10.8272746 44.4486486,11.6852745 C45.229805,12.5432743 45.1761633,13.8756976 44.3178972,14.6630387 L23.9106072,33.4481883 C23.508295,33.8149412 22.9986994,34 22.4891039,34 Z' id='path-1'%3E%3C/path%3E%3C/defs%3E%3Cg id='icon_global_caret_lk' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cmask id='mask-2' fill='white'%3E%3Cuse xlink:href='%23path-1'%3E%3C/use%3E%3C/mask%3E%3Cuse id='icon_global_caret' fill='%23FFFFFF' fill-rule='nonzero' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3C/svg%3E\");-webkit-transform:translate(50%, -50%) rotate(-180deg);transform:translate(50%, -50%) rotate(-180deg)}snt-accordion.faq-accordion .card-header{background-color:#ffffff}snt-accordion.faq-accordion .card-header:before{position:absolute;z-index:-1;top:0;left:0;content:\" \";background-color:#147582;height:0;width:calc(100% + 4px);-webkit-transition:0.65s height;transition:0.65s height}snt-accordion.faq-accordion .card-panel{border-left:0.25px solid #262626;border-right:0.25px solid #262626;border-bottom:0.25px solid #262626}snt-accordion.faq-accordion .card-body{padding:20px 15px 20px 15px}@media (min-width: 768px){snt-accordion.faq-accordion .card-body{padding:20px 45px 20px 15px}}@media (min-width: 1024px){snt-accordion.faq-accordion .card-body{padding:30px}}snt-accordion.faq-accordion button:after{position:absolute;top:50%;right:1.5rem;background-position:center;-webkit-transform:translate(50%, -50%) rotate(0deg);transform:translate(50%, -50%) rotate(0deg);content:\" \";-webkit-transition:0.65s -webkit-transform;transition:0.65s -webkit-transform;transition:0.65s transform;transition:0.65s transform, 0.65s -webkit-transform;width:15px;height:15px;background-image:url(\"data:image/svg+xml,%3Csvg width='100%' height='100%' viewBox='0 0 45 45' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 57.1 (83088) - https://sketch.com --%3E%3Ctitle%3Eicon_global_caret_lk%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Cpath d='M22.4891039,34 C21.9795084,34 21.4699128,33.8149412 21.0709531,33.4448236 L0.680426242,14.6563092 C-0.174487332,13.8689682 -0.23148157,12.5365449 0.553027357,11.6785451 C1.33753628,10.8239099 2.66851938,10.7700746 3.51672775,11.554051 L22.4891039,29.0370597 L41.4815957,11.5574157 C42.3365092,10.7734393 43.6574345,10.8272746 44.4486486,11.6852745 C45.229805,12.5432743 45.1761633,13.8756976 44.3178972,14.6630387 L23.9106072,33.4481883 C23.508295,33.8149412 22.9986994,34 22.4891039,34 Z' id='path-1'%3E%3C/path%3E%3C/defs%3E%3Cg id='icon_global_caret_lk' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cmask id='mask-2' fill='white'%3E%3Cuse xlink:href='%23path-1'%3E%3C/use%3E%3C/mask%3E%3Cuse id='icon_global_caret' fill='%23147582' fill-rule='nonzero' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3C/svg%3E\")}@media (min-width: 768px){snt-accordion.faq-accordion button:after{right:32px}}snt-accordion.faq-accordion button:before{position:absolute;z-index:-1;top:0;left:0;content:\" \";background-color:#147582;width:0;height:2px;-webkit-transition:0.65s width;transition:0.65s width}snt-accordion.faq-accordion button:hover,snt-accordion.faq-accordion button:focus{-webkit-box-shadow:none;box-shadow:none;outline:0}snt-accordion.faq-accordion button:hover:before,snt-accordion.faq-accordion button:focus:before{width:calc(100% + 4px)}snt-accordion.faq-accordion[expanded] .card-header button{color:#ffffff}snt-accordion.faq-accordion[expanded] .card-header button:before{width:100%}snt-accordion.faq-accordion[expanded] .card-header:before{height:100%}snt-accordion.transcript-accordion .card-header{border:none}snt-accordion.transcript-accordion .card-header .h1,snt-accordion.transcript-accordion .card-header .h2,snt-accordion.transcript-accordion .card-header .h3,snt-accordion.transcript-accordion .card-header .h4,snt-accordion.transcript-accordion .card-header .h5,snt-accordion.transcript-accordion .card-header .h6{font-size:14px;line-height:23px}snt-accordion.transcript-accordion .card-header button{padding:0 1rem 0 1.5625rem}snt-accordion.transcript-accordion .card-header button:after{right:1rem}snt-accordion.transcript-accordion .card-header button:hover,snt-accordion.transcript-accordion .card-header button:focus{color:#147582;outline:none;-webkit-box-shadow:none;box-shadow:none}@media (min-width: 768px){snt-accordion.transcript-accordion .card-header button:hover [slot=summary]:before,snt-accordion.transcript-accordion .card-header button:focus [slot=summary]:before{visibility:visible;-webkit-transform:scaleX(1);transform:scaleX(1)}}snt-accordion.transcript-accordion [slot=summary]{font-family:\"Averta-Regular\", Arial, Helvetica, sans-serif;font-size:0.875rem;line-height:1.625rem;position:relative;display:inline-block}snt-accordion.transcript-accordion [slot=summary]:before{content:\"\";position:absolute;width:100%;height:1px;bottom:4px;left:0;background-color:#9e0a9a;visibility:hidden;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s;background:#147582}snt-accordion.transcript-accordion .card-panel{margin-top:20px;border:1px solid #E5E5E5;background-color:#FFFFFF;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;border-radius:0}snt-accordion.transcript-accordion .card-panel ::-webkit-scrollbar{width:10px}snt-accordion.transcript-accordion .card-panel ::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px whitesmoke;-webkit-border-radius:10px;border-radius:10px;background-color:#f5f5f5}snt-accordion.transcript-accordion .card-panel ::-webkit-scrollbar-thumb{-webkit-border-radius:10px;border-radius:10px;background:#147582;-webkit-box-shadow:inset 0 0 6px rgba(0, 0, 0, 0.5)}snt-accordion.transcript-accordion .card-panel ::-webkit-scrollbar-thumb:window-inactive{background:#147582}snt-accordion.transcript-accordion .card-body{padding:1.5625rem 0.9375rem}@media (min-width: 768px){snt-accordion.transcript-accordion .card-body{padding:1.5625rem}}snt-accordion.transcript-accordion .card-body [slot=details]{overflow-y:auto;scrollbar-width:thin;scrollbar-color:#7f7f7f transparent;max-height:250px;padding:0 1.5625rem 0 0}@media (min-width: 768px){snt-accordion.transcript-accordion .card-body [slot=details]{padding:0 3.1255rem 0 0}}@media (min-width: 1024px){snt-accordion.transcript-accordion .card-body [slot=details]{max-height:350px}}snt-accordion.transcript-accordion .card-body [slot=details] p{font-size:0.875rem;line-height:1.45rem}snt-accordion.transcript-accordion .expand-icon{height:0.9375rem;width:0.9375rem;font-size:0.9375rem;line-height:0.9375rem;position:absolute;left:0;top:6px;margin:auto}@media (min-width: 768px){snt-accordion.transcript-accordion .expand-icon{top:0;bottom:0}}snt-accordion-group{width:100%}snt-accordion-group snt-layout[viewport=medium] snt-accordion.faq-accordion button,snt-accordion-group snt-layout[viewport=small] snt-accordion.faq-accordion button,snt-accordion-group snt-layout[viewport=extra-small] snt-accordion.faq-accordion button{padding:15px 45px 15px 15px}.two-column-combined snt-accordion-group{-ms-flex-positive:1;flex-grow:1}";

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class AccordionComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.accordionEvent = createEvent(this, "accordionEvent", 7);
        this.expanded = false;
    }
    isCollapsed() {
        return __awaiter(this, void 0, void 0, function* () {
            return Promise.resolve(!this.expanded);
        });
    }
    isExpanded() {
        return __awaiter(this, void 0, void 0, function* () {
            return Promise.resolve(this.expanded);
        });
    }
    collapse() {
        return __awaiter(this, void 0, void 0, function* () {
            this.expanded = false;
        });
    }
    expand() {
        return __awaiter(this, void 0, void 0, function* () {
            this.expanded = true;
        });
    }
    toggle() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.expanded) {
                this.collapse();
            }
            else {
                this.expand();
            }
        });
    }
    /** TODO: Annotate this function **/
    transition(transitionType) {
        return __awaiter(this, void 0, void 0, function* () {
            const panel = this.element.querySelector(AccordionComponent.CARD_PANEL);
            panel.classList.add(AccordionComponent.TRANSITIONING_CLASS_NAME);
            if (transitionType == AccordionStateEnum.EXPANDED) {
                const eventualHeight = panel.scrollHeight;
                panel.style.height = "0px";
                yield WebUtils.sleep(100);
                panel.style.height = `${eventualHeight}px`;
            }
            else {
                panel.style.height = `${panel.scrollHeight}px`;
                yield WebUtils.sleep(100);
                panel.style.height = "0px";
            }
            setTimeout(() => {
                panel.classList.remove(AccordionComponent.TRANSITIONING_CLASS_NAME);
                panel.style.height = "";
                return Promise.resolve();
            }, (parseFloat(getComputedStyle(panel).transitionDuration) * 650));
        });
    }
    expandedChanged(newValue) {
        this.accordionEvent.emit(new AccordionEvent(this.expanded ? AccordionStateEnum.EXPANDED : AccordionStateEnum.COLLAPSED));
        const transitionType = (newValue == true) ? AccordionStateEnum.EXPANDED : AccordionStateEnum.COLLAPSED;
        this.transition(transitionType).then(null);
    }
    getExpandIcon(isTranscriptAccordion, isExpanded) {
        return isTranscriptAccordion == true
            ? h("span", { class: `expand-icon icon-font ${isExpanded ? 'icon-icon_legalAccordion_minus' : 'icon-icon_legalAccordion_plus'}` })
            : null;
    }
    render() {
        const accordionId = this.element.id;
        const panelClass = `card-panel collapse ${this.expanded ? "show" : ""}`;
        const ariaExpanded = (this.expanded) ? "true" : "false";
        const isTranscriptAccordion = this.element.classList.contains('transcript-accordion');
        return (h(Host, { expanded: this.expanded }, h("div", { class: "card pas-accordion" }, h("div", { id: `${accordionId}-header`, class: "card-header" }, h("button", { onClick: this.toggle.bind(this), class: "btn accordion-btn", "aria-expanded": ariaExpanded, "aria-controls": `${accordionId}-panel` }, this.getExpandIcon(isTranscriptAccordion, this.expanded), h("div", { class: `mb-0 ${isTranscriptAccordion ? '' : 'h4'}` }, h("slot", { name: "summary" })))), h("div", { id: `${accordionId}-panel`, class: panelClass, "aria-labelledby": `${accordionId}-header` }, h("div", { class: "card-body" }, h("slot", { name: "details" }))))));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "expanded": ["expandedChanged"]
    }; }
    static get style() { return accordionComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-accordion",
        "$members$": {
            "expanded": [1540],
            "isCollapsed": [64],
            "isExpanded": [64],
            "collapse": [64],
            "expand": [64],
            "toggle": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["expanded", "expanded"]]
    }; }
}
AccordionComponent.TAG_NAME = "snt-accordion";
AccordionComponent.CARD_PANEL = ".card-panel";
AccordionComponent.TRANSITIONING_CLASS_NAME = "transitioning";

class AccordionComponentBuilder {
    constructor() { }
    static newInstance() {
        return new AccordionComponentBuilder();
    }
    withSummary(summary) {
        this.summary = summary;
        return this;
    }
    withDetails(details) {
        this.details = details;
        return this;
    }
    build() {
        let component = document.createElement(AccordionComponent.TAG_NAME);
        // TODO: Determine if we want an API for adding details and summary
        WebUtils.appendElement(component, this.summary, false);
        WebUtils.appendElement(component, this.details, false);
        return component;
    }
}

class HtmlElementBuilder {
    constructor() { }
    static newInstance() {
        return new HtmlElementBuilder();
    }
    withTag(value) {
        this.tag = value;
        return this;
    }
    withInnerText(value) {
        this.innerText = value;
        return this;
    }
    withAttribute(key, value) {
        this.attributes = this.attributes || new Map();
        this.attributes.set(key, value);
        return this;
    }
    withClass(value) {
        this.classList = this.classList || new Set();
        this.classList.add(value);
        return this;
    }
    build() {
        if (!(this.tag)) {
            throw new Error("HTML Element cannot be created without a valid tag.");
        }
        let element = document.createElement(this.tag);
        this.applyInnerText(element);
        this.applyAttributes(element);
        this.applyClasses(element);
        return element;
    }
    applyInnerText(element) {
        if (this.innerText && this.innerText.length > 0) {
            element.innerText = this.innerText;
        }
    }
    applyAttributes(element) {
        if (this.attributes && this.attributes.size > 0) {
            this.attributes.forEach((value, key) => {
                element.setAttribute(key, value);
            });
        }
    }
    applyClasses(element) {
        if (this.classList && this.classList.size > 0) {
            this.classList.forEach((value) => {
                element.classList.add(value);
            });
        }
    }
}

class AccordionBuilderComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    buildAccordions() {
        const accordions = document.createDocumentFragment();
        const accordion = AccordionComponentBuilder.newInstance()
            .withSummary(HtmlElementBuilder.newInstance()
            .withTag("strong")
            .withInnerText("Accordion 1 Title")
            .build())
            .withDetails(HtmlElementBuilder.newInstance()
            .withTag("p")
            .withInnerText("Lorem Ipsum Dolor Samet")
            .build())
            .build();
        accordions.appendChild(accordion);
        return accordions;
    }
    render() {
        return ([
            h("div", { ref: (nodeElement) => { nodeElement.append(this.buildAccordions()); } })
        ]);
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-accordion-builder",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AccordionBuilderComponent.TAG_NAME = "snt-accordion-builder";

class AccordionExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", { class: "wrapper" }, h("h3", null, "Transcript Accordion"), h("br", null), h("snt-accordion", { class: "transcript-accordion" }, h("div", { slot: "summary" }, "Open \"Video Title Here\" text transcript."), h("div", { slot: "details" }, h("p", null, "[We open on a black backdrop with Marc-Andr\u00E9 Fleury]"), h("p", null, "[On-screen text: Sonnet logo]"), h("p", null, "[On-screen text: Presents Then & Now]"), h("p", null, "[On-screen text: With Marc-Andr\u00E9 Fleury, Vegas Golden Knights]"), h("p", null, ">> MARC-ANDR\u00C9: When I saw an opportunity to make it to the National Hockey League, it was very late. When I was drafted, it was the first time I went to the training camp and saw that I could stop the pucks in front of the net. I stopped Mario Lemieux and said \u201CHey!\u201D"), h("p", null, "[On-screen text: Today, you play in the National League. How does that feel?]"), h("p", null, ">> MARC-ANDR\u00C9: Sometimes it\u2019s a little stressful, especially during the playoffs. There are so many people in the stands. You can feel the pressure. The stress rises. I don\u2019t think there are many jobs in the world that can bring you these types of experiences, feelings and emotions. I think it\u2019s also about enjoying it."), h("p", null, "[On-screen text: What attracted you to hockey?]"), h("p", null, ">> MARC-ANDR\u00C9: I always played hockey because I loved it. My dad always told me: work hard and have fun. Those are the two most important things."), h("p", null, "[On-screen text: Were your parents always supportive?]"), h("p", null, ">> MARC-ANDR\u00C9: I owe my parents a lot for their support. They made so many sacrifices to get us to the arena early in the morning and after school. We travelled a lot to play in different cities around Sorel."), h("p", null, "[On-screen text: In hindsight, what were the most memorable moments of your career?]"), h("p", null, ">> MARC-ANDR\u00C9: When I left home. I didn\u2019t think I was going to make the junior team at Cape Breton. But when they told me I was staying, I was very happy and proud to have made the team. It was certainly difficult to leave my friends and family behind because we were very close. It was one of the most difficult moments but at the end, it helped me fulfil my dream."), h("p", null, "[On-screen text: Sonnet Brand Mark + NHLPA Logo]"), h("p", null, "[Marc-Andr\u00E9 Fleury is a paid spokesperson for Sonnet. NHLPA, National Hockey League Players\u2019 Association and the NHLPA logo are trademarks of the NHLPA and are used under license. \u00A9 NHLPA. All Rights Reserved. Sonnet Insurance is a registered trademark. Sonnet Insurance Company is a federally regulated insurance company.]"))), h("h3", null, "Stand-Alone Accordion Components"), h("div", { class: "standalone-components" }, h("snt-accordion", { expanded: true, id: "standalone-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, h("p", null, "[We open on a black backdrop with Marc-Andr\u00E9 Fleury]"), h("p", null, "[On-screen text: Sonnet logo]"), h("p", null, "[On-screen text: Presents Then & Now]"), h("p", null, "[On-screen text: With Marc-Andr\u00E9 Fleury, Vegas Golden Knights]"), h("p", null, ">> MARC-ANDR\u00C9: When I saw an opportunity to make it to the National Hockey League, it was very late. When I was drafted, it was the first time I went to the training camp and saw that I could stop the pucks in front of the net. I stopped Mario Lemieux and said \u201CHey!\u201D"), h("p", null, "[On-screen text: Today, you play in the National League. How does that feel?]"), h("p", null, ">> MARC-ANDR\u00C9: Sometimes it\u2019s a little stressful, especially during the playoffs. There are so many people in the stands. You can feel the pressure. The stress rises. I don\u2019t think there are many jobs in the world that can bring you these types of experiences, feelings and emotions. I think it\u2019s also about enjoying it."), h("p", null, "[On-screen text: What attracted you to hockey?]"), h("p", null, ">> MARC-ANDR\u00C9: I always played hockey because I loved it. My dad always told me: work hard and have fun. Those are the two most important things."), h("p", null, "[On-screen text: Were your parents always supportive?]"), h("p", null, ">> MARC-ANDR\u00C9: I owe my parents a lot for their support. They made so many sacrifices to get us to the arena early in the morning and after school. We travelled a lot to play in different cities around Sorel."), h("p", null, "[On-screen text: In hindsight, what were the most memorable moments of your career?]"), h("p", null, ">> MARC-ANDR\u00C9: When I left home. I didn\u2019t think I was going to make the junior team at Cape Breton. But when they told me I was staying, I was very happy and proud to have made the team. It was certainly difficult to leave my friends and family behind because we were very close. It was one of the most difficult moments but at the end, it helped me fulfil my dream."), h("p", null, "[On-screen text: Sonnet Brand Mark + NHLPA Logo]"), h("p", null, "[Marc-Andr\u00E9 Fleury is a paid spokesperson for Sonnet. NHLPA, National Hockey League Players\u2019 Association and the NHLPA logo are trademarks of the NHLPA and are used under license. \u00A9 NHLPA. All Rights Reserved. Sonnet Insurance is a registered trademark. Sonnet Insurance Company is a federally regulated insurance company.]"))), h("snt-accordion", { id: "standalone-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, " Lorem ipsum dolor samet.")), h("snt-accordion", { id: "standalone-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, " Lorem ipsum dolor samet."))), h("br", null), h("hr", null), h("br", null), h("div", { class: "neutral-fill" }, h("h3", null, "Grouped Accordion Components (Default)"), h("snt-accordion-group", null, h("snt-accordion", { id: "grouped-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet."))), h("br", null), h("hr", null), h("br", null), h("h3", null, "Grouped Accordion Components (Multi-Expand Enabled)"), h("snt-accordion-group", { "multi-expand": "true" }, h("snt-accordion", { expanded: true, id: "grouped-accordion-with-multi-expand-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-with-multi-expand-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-with-multi-expand-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("br", null), h("div", { id: "accordion-group-controls" }, h("p", null, h("b", null, "Accordion Group Control Buttons - For example Only")), h("button", { class: "btn-expand-all" }, "Expand All"), h("button", { class: "btn-collapse-all" }, "Collapse All")))), h("br", null), h("hr", null), h("br", null), h("h3", null, "Grouped Accordion Components Two Column"), h("div", { style: { display: 'flex' } }, h("div", { style: { width: '50%', flex: '0 0 50%' }, class: "two-column dark-fill" }, h("snt-accordion-group", null, h("snt-accordion", { id: "grouped-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")))), h("div", { style: { width: '50%', flex: '0 0 50%' }, class: "two-column dark-fill" }, h("snt-accordion-group", null, h("snt-accordion", { id: "grouped-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet."))))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "accordion-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AccordionExample.TAG_NAME = "accordion-example";

class AccordionExample$1 {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        const modal = document.querySelector("snt-modal#modal-1");
        if (modal) {
            modal.show();
        }
    }
    render() {
        return [
            h("div", null, h("h3", null, "Modal Component Examples"), h("snt-modal", { id: "modal-1", "language-string": "{\"close\":\"Close\"}", "style-classes": "contact-us-login" }, h("snt-title-copy", { "title-string": "What can we help with?" }, h("p", { style: { textAlign: "center" } }, "Tell us a little bit about you and your inquiry - we'll point you in the right direction")), h("snt-multi-column-mixed", { "column-count": '{"extra-small": 1,"small": 1,"medium": 2,"large": 2,"extra-large": 2}' }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://t.ly/9hiJ", \r\n                                "smallIconUrl": "https://t.ly/9hiJ"\r\n                            }', "title-string": "I have a Sonnet account", "link-href": "https://secure.sonnet.ca/#/login?lang=en" }, h("p", null, "Log in first, then start a chat. This way, we can talk about policy and account specifics."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                    "largeIconUrl": "https://t.ly/9hiJ", \r\n                                    "smallIconUrl": "https://t.ly/9hiJ"\r\n                                }', "title-string": "I have a general inquiry", "link-action-reference": "Action.dismiss", "link-action-data": '{}' }, h("p", null, "Ask us your general questions about quoting, insurance and more via chat or email. "))))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "modal-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AccordionExample$1.TAG_NAME = "modal-example";

const accordionGroupComponentCss = ".white-fill snt-accordion-group,snt-accordion-group.white-fill{display:block;background-color:#ffffff}.neutral-fill snt-accordion-group,snt-accordion-group.neutral-fill{display:block;background-color:#f8f8f8}";

var __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class AccordionGroupComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.multiExpand = false;
    }
    expandAll() {
        return __awaiter$1(this, void 0, void 0, function* () {
            let children = this.element.querySelectorAll(`${AccordionComponent.TAG_NAME}:not([expanded])`);
            children.forEach((child) => {
                child.expand().then(null);
            });
        });
    }
    collapseAll() {
        return __awaiter$1(this, void 0, void 0, function* () {
            let children = this.element.querySelectorAll(`${AccordionComponent.TAG_NAME}[expanded]`);
            children.forEach((child) => {
                child.collapse().then(null);
            });
        });
    }
    addAccordion(accordion) {
        return __awaiter$1(this, void 0, void 0, function* () {
            // TODO: Add code to inject in position of other accordion
            this.element.appendChild(accordion);
        });
    }
    componentWillRender() {
        if (this.element) {
            if (!this.multiExpand) {
                let numberOfExpandedItems = 0;
                this.element.querySelectorAll("snt-accordion").forEach(c => {
                    if (c.hasAttribute("expanded")) {
                        numberOfExpandedItems++;
                    }
                    if (numberOfExpandedItems >= 2) {
                        c.expanded = false;
                    }
                });
            }
        }
    }
    render() {
        return (h("snt-layout", null, h("slot", null)));
    }
    onAccordionEvent(event) {
        if ((event.detail.state == AccordionStateEnum.EXPANDED) && (!(this.multiExpand))) {
            this.collapseSibling(event);
        }
    }
    collapseSibling(event) {
        let children = this.element.querySelectorAll(`${AccordionComponent.TAG_NAME}[expanded]`);
        children.forEach((child) => {
            if (child != event.target) {
                child.collapse().then(null);
            }
        });
    }
    get element() { return getElement(this); }
    static get style() { return accordionGroupComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-accordion-group",
        "$members$": {
            "multiExpand": [4, "multi-expand"],
            "expandAll": [64],
            "collapseAll": [64],
            "addAccordion": [64]
        },
        "$listeners$": [[0, "accordionEvent", "onAccordionEvent"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AccordionGroupComponent.TAG_NAME = "snt-accordion-group";

class AccordionGroupBuilder {
    constructor() { }
    static newInstance() {
        return new AccordionGroupBuilder();
    }
    withAccordion(accordion) {
        this.accordions = this.accordions || new Array();
        this.accordions.push(accordion);
        return this;
    }
    build() {
        let component = document.createElement(AccordionGroupComponent.TAG_NAME);
        if (this.accordions) {
            this.accordions.forEach((accordion) => {
                component.addAccordion(accordion);
                WebUtils.appendElement(component, accordion, false);
            });
        }
        return component;
    }
}

class AccordionGroupBuilderComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    buildGroups() {
        const accordionGroups = document.createDocumentFragment();
        const accordionOne = AccordionComponentBuilder.newInstance()
            .withSummary(HtmlElementBuilder.newInstance()
            .withTag("strong")
            .withInnerText("Accordion 1 Title")
            .build())
            .withDetails(HtmlElementBuilder.newInstance()
            .withTag("p")
            .withInnerText("Lorem Ipsum Dolor Samet")
            .build())
            .build();
        const accordionTwo = AccordionComponentBuilder.newInstance()
            .withSummary(HtmlElementBuilder.newInstance()
            .withTag("strong")
            .withInnerText("Accordion 1 Title")
            .build())
            .withDetails(HtmlElementBuilder.newInstance()
            .withTag("p")
            .withInnerText("Lorem Ipsum Dolor Samet")
            .build())
            .build();
        const accordionGroup = AccordionGroupBuilder.newInstance()
            .withAccordion(accordionOne)
            .withAccordion(accordionTwo)
            .build();
        accordionGroups.appendChild(accordionGroup);
        return accordionGroups;
    }
    render() {
        return ([
            h("div", { ref: (nodeElement) => { nodeElement.append(this.buildGroups()); } })
        ]);
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-accordion-group-builder",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AccordionGroupBuilderComponent.TAG_NAME = "snt-accordion-group-builder";

class EventConfiguration {
    constructor() {
        this.configurations = new Map();
    }
    add(event) {
        this.configurations.set(event.type, event);
    }
    remove(event) {
        this.configurations.delete(event.type);
    }
    findByType(type) {
        return this.configurations.get(type);
    }
    hasConfigurations() {
        return (this.configurations.size > 0);
    }
    getConfigurations() {
        return this.configurations;
    }
}

var EventTypeEnum;
(function (EventTypeEnum) {
    EventTypeEnum["CLICK"] = "click";
    EventTypeEnum["KEYDOWN"] = "keydown";
})(EventTypeEnum || (EventTypeEnum = {}));
(function (EventTypeEnum) {
    function exists(value) {
        if (value) {
            return (EventTypeEnum[value.toUpperCase().trim()] != null);
        }
        throw new Error(`Argument with value ${value} must be a valid string.`);
    }
    EventTypeEnum.exists = exists;
    function findByValue(text) {
        if (exists(text)) {
            return EventTypeEnum[text.toUpperCase().trim()];
        }
        throw new Error(`Argument text with value ${text} does not exist.`);
    }
    EventTypeEnum.findByValue = findByValue;
})(EventTypeEnum || (EventTypeEnum = {}));

var EventFilterEnum;
(function (EventFilterEnum) {
    EventFilterEnum["ENTER"] = "enter";
    EventFilterEnum["SPACE"] = "space";
    EventFilterEnum["ESCAPE"] = "escape";
    EventFilterEnum["BACKSPACE"] = "backspace";
    EventFilterEnum["TAB"] = "tab";
    EventFilterEnum["ARROW_UP"] = "arrow-up";
    EventFilterEnum["ARROW_DOWN"] = "arrow-down";
    EventFilterEnum["ARROW_RIGHT"] = "arrow-right";
    EventFilterEnum["ARROW_LEFT"] = "arrow-left";
    EventFilterEnum["HOME"] = "home";
    EventFilterEnum["END"] = "end";
    EventFilterEnum["DELETE"] = "delete";
    EventFilterEnum["PAGE_UP"] = "page-up";
    EventFilterEnum["PAGE_DOWN"] = "page-down";
    EventFilterEnum["ASTERISK"] = "*";
})(EventFilterEnum || (EventFilterEnum = {}));
(function (EventFilterEnum) {
    function exists(value) {
        const eventFilter = value.toUpperCase().trim().replace("-", "_");
        return (EventFilterEnum[eventFilter] != null);
    }
    EventFilterEnum.exists = exists;
    function findByValue(text) {
        if (exists(text)) {
            const eventFilter = text.toUpperCase().trim().replace("-", "_");
            return (text) ? EventFilterEnum[eventFilter] : null;
        }
        throw Error(`Argument text with value ${text} does not exist.`);
    }
    EventFilterEnum.findByValue = findByValue;
})(EventFilterEnum || (EventFilterEnum = {}));

class EventConfigurationElement {
    constructor(type, filters) {
        this.type = type;
        this.filters = filters;
    }
    hasKeys() {
        return (this.type == EventTypeEnum.KEYDOWN && this.filters.size > 0);
    }
    getKeys() {
        const results = new Set();
        if (this.hasKeys()) {
            this.filters.forEach((filter) => {
                results.add(filter.getKey());
            });
        }
        return results;
    }
}

class EventKey {
    constructor(key) {
        this.key = key;
    }
    getKey() {
        return this.key;
    }
    isMouseEvent() {
        return (this.key == null || false);
    }
    isKeyboardEvent() {
        return !(this.key == null || false);
    }
    static find(value) {
        return this.VALUES.get(value);
    }
}
EventKey.VALUES = new Map([
    [EventFilterEnum.ENTER, new EventKey("Enter")],
    [EventFilterEnum.SPACE, new EventKey(" ")],
    [EventFilterEnum.ESCAPE, new EventKey("Escape")],
    [EventFilterEnum.BACKSPACE, new EventKey("Backspace")],
    [EventFilterEnum.TAB, new EventKey("Tab")],
    [EventFilterEnum.ARROW_UP, new EventKey("ArrowUp")],
    [EventFilterEnum.ARROW_DOWN, new EventKey("ArrowDown")],
    [EventFilterEnum.ARROW_RIGHT, new EventKey("ArrowRight")],
    [EventFilterEnum.ARROW_LEFT, new EventKey("ArrowLeft")],
    [EventFilterEnum.HOME, new EventKey("Home")],
    [EventFilterEnum.END, new EventKey("End")],
    [EventFilterEnum.DELETE, new EventKey("Delete")],
    [EventFilterEnum.PAGE_UP, new EventKey("PageUp")],
    [EventFilterEnum.PAGE_DOWN, new EventKey("PageDown")]
]);

class EventComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() { }
    componentWillUpdate() { }
    componentDidLoad() { }
    render() {
        return (h(Host, null, h("slot", null)));
    }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-event",
        "$members$": {
            "type": [513],
            "filters": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["type", "type"], ["filters", "filters"]]
    }; }
}
EventComponent.TAG_NAME = "snt-event";

var __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class ReflectionUtils {
    static getObjectReference(value, base) {
        return __awaiter$2(this, void 0, void 0, function* () {
            if (!(base)) {
                base = yield Promise.resolve().then(function () { return index; });
            }
            return value.split('.').reduce(function (obj, i) {
                const reference = obj[i];
                if (reference) {
                    return reference;
                }
                throw Error(`Argument value with value ${value} does not exist.`);
            }, base);
        });
    }
}

class EventConfigurationUtils {
    static processEvent(customEvent, eventConfiguration, actionReference, actionData) {
        if (eventConfiguration.hasConfigurations()) {
            const eventTypeEnum = (EventTypeEnum.exists(customEvent.detail.type)) ? EventTypeEnum.findByValue(customEvent.detail.type) : null;
            const configurationElement = (eventTypeEnum) ? eventConfiguration.findByType(eventTypeEnum) : null;
            if (configurationElement) {
                if (configurationElement.hasKeys()) {
                    const eventConfigurationKeyCodes = configurationElement.getKeys();
                    if (!eventConfigurationKeyCodes.has(customEvent.detail.key))
                        return;
                }
                ReflectionUtils.getObjectReference(actionReference).then((ref) => {
                    ref(customEvent, actionData);
                });
            }
        }
    }
    static buildConfiguration(element) {
        const configuration = new EventConfiguration();
        const elements = element.querySelectorAll(EventComponent.TAG_NAME);
        if (elements && elements.length > 0) {
            Array.from(elements).forEach((eventElement) => {
                let filterSet = null;
                if (eventElement.filters) {
                    const filters = eventElement.filters.split(" ");
                    filterSet = new Set(filters
                        .filter((filter) => EventFilterEnum.exists(filter))
                        .map((filter) => EventKey.find(EventFilterEnum.findByValue(filter))));
                }
                const eventTypeEnum = (EventTypeEnum.exists(eventElement.type)) ? EventTypeEnum.findByValue(eventElement.type) : null;
                if (eventTypeEnum) {
                    if (eventTypeEnum == EventTypeEnum.KEYDOWN && filterSet == null) {
                        throw new Error("Event type keydown must have a valid filter");
                    }
                    configuration.add(new EventConfigurationElement(eventTypeEnum, filterSet));
                }
                else {
                    throw new Error("Event configuration type not supported.");
                }
            });
        }
        else {
            throw new Error("Configuration must contain at least one event configuration element.");
        }
        return configuration;
    }
}

class EventConfigurationBuilder {
    constructor() { }
    static newInstanceof() {
        return new EventConfigurationBuilder();
    }
    withComponent(element) {
        this.element = element;
        return this;
    }
    build() {
        if (this.element) {
            return EventConfigurationUtils.buildConfiguration(this.element);
        }
        throw new Error();
    }
}

var __awaiter$3 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class ActionButtonComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.actionReference = StringUtils.empty();
        this.actionData = StringUtils.empty();
        this.iconClassName = StringUtils.empty();
        this.linkTitle = StringUtils.empty();
        this.styleClasses = StringUtils.empty();
        this.buttonId = StringUtils.empty();
        this.eventConfiguration = null;
        this.actionDataJsonObj = null;
    }
    getEventConfiguration() {
        return __awaiter$3(this, void 0, void 0, function* () {
            return this.eventConfiguration;
        });
    }
    onSntButtonClick(event) {
        EventConfigurationUtils.processEvent(event, this.eventConfiguration, this.actionReference, this.actionDataJsonObj);
    }
    onSntButtonKeyDown(event) {
        EventConfigurationUtils.processEvent(event, this.eventConfiguration, this.actionReference, this.actionDataJsonObj);
    }
    componentDidLoad() {
        if (StringUtils.isEmpty(this.actionReference)) {
            throw new Error("ActionButtonComponent must contain a valid action-reference attribute!");
        }
        if (!StringUtils.isEmpty(this.actionData)) {
            try {
                this.actionDataJsonObj = JSON.parse(this.actionData);
            }
            catch (error) {
                throw new Error("Invalid JSON string in ActionButtonComponent's action-data property.");
            }
        }
        this.eventConfiguration = EventConfigurationBuilder.newInstanceof().withComponent(this.element).build();
    }
    render() {
        const icon = (StringUtils.notEmpty(this.iconClassName)) ? h("snt-icon", { styleClasses: this.iconClassName }) : "";
        const button = h("snt-button", { "button-id": this.buttonId, styleClasses: WebUtils.generateClasses([], this.styleClasses), "hidden-title": this.linkTitle }, icon, this.linkTitle);
        const events = (this.element.children.length > 0) ? h("slot", null) : [h("snt-event", { type: "click" }), h("snt-event", { type: "keydown", filters: "space" })];
        return [events, button];
    }
    get element() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-action-button",
        "$members$": {
            "actionReference": [513, "action-reference"],
            "actionData": [513, "action-data"],
            "iconClassName": [1, "icon-class-name"],
            "linkTitle": [1, "link-title"],
            "styleClasses": [513, "style-classes"],
            "buttonId": [1, "button-id"],
            "getEventConfiguration": [64]
        },
        "$listeners$": [[0, "sntButtonClick", "onSntButtonClick"], [0, "sntButtonKeyDown", "onSntButtonKeyDown"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["actionReference", "action-reference"], ["actionData", "action-data"], ["styleClasses", "style-classes"]]
    }; }
}
ActionButtonComponent.TAG_NAME = "snt-action-button";

var __awaiter$4 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class ActionLinkComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.actionReference = StringUtils.empty();
        this.actionData = StringUtils.empty();
        this.linkTitle = StringUtils.empty();
        this.iconClassName = StringUtils.empty();
        this.styleClasses = StringUtils.empty();
        this.linkId = StringUtils.empty();
        this.eventConfiguration = null;
        this.actionDataJsonObj = null;
    }
    getEventConfiguration() {
        return __awaiter$4(this, void 0, void 0, function* () {
            return this.eventConfiguration;
        });
    }
    sntBtnEvent(event) {
        EventConfigurationUtils.processEvent(event, this.eventConfiguration, this.actionReference, this.actionDataJsonObj);
    }
    componentWillLoad() {
        this.eventElems = this.element.querySelectorAll('snt-event');
    }
    componentDidLoad() {
        if (StringUtils.isEmpty(this.actionReference)) {
            throw new Error("SntActionLink must contain a valid action-reference attribute!");
        }
        if (!StringUtils.isEmpty(this.actionData)) {
            try {
                this.actionDataJsonObj = JSON.parse(this.actionData);
            }
            catch (error) {
                throw new Error("Invalid JSON string in ActionButtonComponent's action-data property.");
            }
        }
        this.eventConfiguration = EventConfigurationBuilder.newInstanceof().withComponent(this.element).build();
    }
    render() {
        const icon = (StringUtils.notEmpty(this.iconClassName)) ? h("snt-icon", { styleClasses: this.iconClassName }) : "";
        const link = h("snt-link", { "link-id": this.linkId, classNames: this.styleClasses, href: "javascript:void(0);" }, icon, this.linkTitle, h("slot", null));
        const events = this.eventElems.length == 0 ? [h("snt-event", { type: "click" }), h("snt-event", { type: "keydown", filters: "space" })] : '';
        return [events, link];
    }
    get element() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-action-link",
        "$members$": {
            "actionReference": [513, "action-reference"],
            "actionData": [513, "action-data"],
            "linkTitle": [1, "link-title"],
            "iconClassName": [1, "icon-class-name"],
            "styleClasses": [513, "style-classes"],
            "linkId": [1, "link-id"],
            "getEventConfiguration": [64]
        },
        "$listeners$": [[0, "linkEvent", "sntBtnEvent"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["actionReference", "action-reference"], ["actionData", "action-data"], ["styleClasses", "style-classes"]]
    }; }
}
ActionLinkComponent.TAG_NAME = "snt-action-link";

/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.
 *
 *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document
 *
 */
(function() {

// Exit early if we're not running in a browser.
if (typeof window !== 'object') {
  return;
}

// Exit early if all IntersectionObserver and IntersectionObserverEntry
// features are natively supported.
if ('IntersectionObserver' in window &&
    'IntersectionObserverEntry' in window &&
    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {

  // Minimal polyfill for Edge 15's lack of `isIntersecting`
  // See: https://github.com/w3c/IntersectionObserver/issues/211
  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {
    Object.defineProperty(window.IntersectionObserverEntry.prototype,
      'isIntersecting', {
      get: function () {
        return this.intersectionRatio > 0;
      }
    });
  }
  return;
}


/**
 * A local reference to the document.
 */
var document = window.document;


/**
 * Creates the global IntersectionObserverEntry constructor.
 * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry
 * @param {Object} entry A dictionary of instance properties.
 * @constructor
 */
function IntersectionObserverEntry(entry) {
  this.time = entry.time;
  this.target = entry.target;
  this.rootBounds = entry.rootBounds;
  this.boundingClientRect = entry.boundingClientRect;
  this.intersectionRect = entry.intersectionRect || getEmptyRect();
  this.isIntersecting = !!entry.intersectionRect;

  // Calculates the intersection ratio.
  var targetRect = this.boundingClientRect;
  var targetArea = targetRect.width * targetRect.height;
  var intersectionRect = this.intersectionRect;
  var intersectionArea = intersectionRect.width * intersectionRect.height;

  // Sets intersection ratio.
  if (targetArea) {
    // Round the intersection ratio to avoid floating point math issues:
    // https://github.com/w3c/IntersectionObserver/issues/324
    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
  } else {
    // If area is zero and is intersecting, sets to 1, otherwise to 0
    this.intersectionRatio = this.isIntersecting ? 1 : 0;
  }
}


/**
 * Creates the global IntersectionObserver constructor.
 * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface
 * @param {Function} callback The function to be invoked after intersection
 *     changes have queued. The function is not invoked if the queue has
 *     been emptied by calling the `takeRecords` method.
 * @param {Object=} opt_options Optional configuration options.
 * @constructor
 */
function IntersectionObserver(callback, opt_options) {

  var options = opt_options || {};

  if (typeof callback != 'function') {
    throw new Error('callback must be a function');
  }

  if (options.root && options.root.nodeType != 1) {
    throw new Error('root must be an Element');
  }

  // Binds and throttles `this._checkForIntersections`.
  this._checkForIntersections = throttle(
      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);

  // Private properties.
  this._callback = callback;
  this._observationTargets = [];
  this._queuedEntries = [];
  this._rootMarginValues = this._parseRootMargin(options.rootMargin);

  // Public properties.
  this.thresholds = this._initThresholds(options.threshold);
  this.root = options.root || null;
  this.rootMargin = this._rootMarginValues.map(function(margin) {
    return margin.value + margin.unit;
  }).join(' ');
}


/**
 * The minimum interval within which the document will be checked for
 * intersection changes.
 */
IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;


/**
 * The frequency in which the polyfill polls for intersection changes.
 * this can be updated on a per instance basis and must be set prior to
 * calling `observe` on the first target.
 */
IntersectionObserver.prototype.POLL_INTERVAL = null;

/**
 * Use a mutation observer on the root element
 * to detect intersection changes.
 */
IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;


/**
 * Starts observing a target element for intersection changes based on
 * the thresholds values.
 * @param {Element} target The DOM element to observe.
 */
IntersectionObserver.prototype.observe = function(target) {
  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
    return item.element == target;
  });

  if (isTargetAlreadyObserved) {
    return;
  }

  if (!(target && target.nodeType == 1)) {
    throw new Error('target must be an Element');
  }

  this._registerInstance();
  this._observationTargets.push({element: target, entry: null});
  this._monitorIntersections();
  this._checkForIntersections();
};


/**
 * Stops observing a target element for intersection changes.
 * @param {Element} target The DOM element to observe.
 */
IntersectionObserver.prototype.unobserve = function(target) {
  this._observationTargets =
      this._observationTargets.filter(function(item) {

    return item.element != target;
  });
  if (!this._observationTargets.length) {
    this._unmonitorIntersections();
    this._unregisterInstance();
  }
};


/**
 * Stops observing all target elements for intersection changes.
 */
IntersectionObserver.prototype.disconnect = function() {
  this._observationTargets = [];
  this._unmonitorIntersections();
  this._unregisterInstance();
};


/**
 * Returns any queue entries that have not yet been reported to the
 * callback and clears the queue. This can be used in conjunction with the
 * callback to obtain the absolute most up-to-date intersection information.
 * @return {Array} The currently queued entries.
 */
IntersectionObserver.prototype.takeRecords = function() {
  var records = this._queuedEntries.slice();
  this._queuedEntries = [];
  return records;
};


/**
 * Accepts the threshold value from the user configuration object and
 * returns a sorted array of unique threshold values. If a value is not
 * between 0 and 1 and error is thrown.
 * @private
 * @param {Array|number=} opt_threshold An optional threshold value or
 *     a list of threshold values, defaulting to [0].
 * @return {Array} A sorted list of unique and valid threshold values.
 */
IntersectionObserver.prototype._initThresholds = function(opt_threshold) {
  var threshold = opt_threshold || [0];
  if (!Array.isArray(threshold)) threshold = [threshold];

  return threshold.sort().filter(function(t, i, a) {
    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {
      throw new Error('threshold must be a number between 0 and 1 inclusively');
    }
    return t !== a[i - 1];
  });
};


/**
 * Accepts the rootMargin value from the user configuration object
 * and returns an array of the four margin values as an object containing
 * the value and unit properties. If any of the values are not properly
 * formatted or use a unit other than px or %, and error is thrown.
 * @private
 * @param {string=} opt_rootMargin An optional rootMargin value,
 *     defaulting to '0px'.
 * @return {Array<Object>} An array of margin objects with the keys
 *     value and unit.
 */
IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {
  var marginString = opt_rootMargin || '0px';
  var margins = marginString.split(/\s+/).map(function(margin) {
    var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
    if (!parts) {
      throw new Error('rootMargin must be specified in pixels or percent');
    }
    return {value: parseFloat(parts[1]), unit: parts[2]};
  });

  // Handles shorthand.
  margins[1] = margins[1] || margins[0];
  margins[2] = margins[2] || margins[0];
  margins[3] = margins[3] || margins[1];

  return margins;
};


/**
 * Starts polling for intersection changes if the polling is not already
 * happening, and if the page's visibility state is visible.
 * @private
 */
IntersectionObserver.prototype._monitorIntersections = function() {
  if (!this._monitoringIntersections) {
    this._monitoringIntersections = true;

    // If a poll interval is set, use polling instead of listening to
    // resize and scroll events or DOM mutations.
    if (this.POLL_INTERVAL) {
      this._monitoringInterval = setInterval(
          this._checkForIntersections, this.POLL_INTERVAL);
    }
    else {
      addEvent(window, 'resize', this._checkForIntersections, true);
      addEvent(document, 'scroll', this._checkForIntersections, true);

      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {
        this._domObserver = new MutationObserver(this._checkForIntersections);
        this._domObserver.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      }
    }
  }
};


/**
 * Stops polling for intersection changes.
 * @private
 */
IntersectionObserver.prototype._unmonitorIntersections = function() {
  if (this._monitoringIntersections) {
    this._monitoringIntersections = false;

    clearInterval(this._monitoringInterval);
    this._monitoringInterval = null;

    removeEvent(window, 'resize', this._checkForIntersections, true);
    removeEvent(document, 'scroll', this._checkForIntersections, true);

    if (this._domObserver) {
      this._domObserver.disconnect();
      this._domObserver = null;
    }
  }
};


/**
 * Scans each observation target for intersection changes and adds them
 * to the internal entries queue. If new entries are found, it
 * schedules the callback to be invoked.
 * @private
 */
IntersectionObserver.prototype._checkForIntersections = function() {
  var rootIsInDom = this._rootIsInDom();
  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();

  this._observationTargets.forEach(function(item) {
    var target = item.element;
    var targetRect = getBoundingClientRect(target);
    var rootContainsTarget = this._rootContainsTarget(target);
    var oldEntry = item.entry;
    var intersectionRect = rootIsInDom && rootContainsTarget &&
        this._computeTargetAndRootIntersection(target, rootRect);

    var newEntry = item.entry = new IntersectionObserverEntry({
      time: now(),
      target: target,
      boundingClientRect: targetRect,
      rootBounds: rootRect,
      intersectionRect: intersectionRect
    });

    if (!oldEntry) {
      this._queuedEntries.push(newEntry);
    } else if (rootIsInDom && rootContainsTarget) {
      // If the new entry intersection ratio has crossed any of the
      // thresholds, add a new entry.
      if (this._hasCrossedThreshold(oldEntry, newEntry)) {
        this._queuedEntries.push(newEntry);
      }
    } else {
      // If the root is not in the DOM or target is not contained within
      // root but the previous entry for this target had an intersection,
      // add a new record indicating removal.
      if (oldEntry && oldEntry.isIntersecting) {
        this._queuedEntries.push(newEntry);
      }
    }
  }, this);

  if (this._queuedEntries.length) {
    this._callback(this.takeRecords(), this);
  }
};


/**
 * Accepts a target and root rect computes the intersection between then
 * following the algorithm in the spec.
 * TODO(philipwalton): at this time clip-path is not considered.
 * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo
 * @param {Element} target The target DOM element
 * @param {Object} rootRect The bounding rect of the root after being
 *     expanded by the rootMargin value.
 * @return {?Object} The final intersection rect object or undefined if no
 *     intersection is found.
 * @private
 */
IntersectionObserver.prototype._computeTargetAndRootIntersection =
    function(target, rootRect) {

  // If the element isn't displayed, an intersection can't happen.
  if (window.getComputedStyle(target).display == 'none') return;

  var targetRect = getBoundingClientRect(target);
  var intersectionRect = targetRect;
  var parent = getParentNode(target);
  var atRoot = false;

  while (!atRoot) {
    var parentRect = null;
    var parentComputedStyle = parent.nodeType == 1 ?
        window.getComputedStyle(parent) : {};

    // If the parent isn't displayed, an intersection can't happen.
    if (parentComputedStyle.display == 'none') return;

    if (parent == this.root || parent == document) {
      atRoot = true;
      parentRect = rootRect;
    } else {
      // If the element has a non-visible overflow, and it's not the <body>
      // or <html> element, update the intersection rect.
      // Note: <body> and <html> cannot be clipped to a rect that's not also
      // the document rect, so no need to compute a new intersection.
      if (parent != document.body &&
          parent != document.documentElement &&
          parentComputedStyle.overflow != 'visible') {
        parentRect = getBoundingClientRect(parent);
      }
    }

    // If either of the above conditionals set a new parentRect,
    // calculate new intersection data.
    if (parentRect) {
      intersectionRect = computeRectIntersection(parentRect, intersectionRect);

      if (!intersectionRect) break;
    }
    parent = getParentNode(parent);
  }
  return intersectionRect;
};


/**
 * Returns the root rect after being expanded by the rootMargin value.
 * @return {Object} The expanded root rect.
 * @private
 */
IntersectionObserver.prototype._getRootRect = function() {
  var rootRect;
  if (this.root) {
    rootRect = getBoundingClientRect(this.root);
  } else {
    // Use <html>/<body> instead of window since scroll bars affect size.
    var html = document.documentElement;
    var body = document.body;
    rootRect = {
      top: 0,
      left: 0,
      right: html.clientWidth || body.clientWidth,
      width: html.clientWidth || body.clientWidth,
      bottom: html.clientHeight || body.clientHeight,
      height: html.clientHeight || body.clientHeight
    };
  }
  return this._expandRectByRootMargin(rootRect);
};


/**
 * Accepts a rect and expands it by the rootMargin value.
 * @param {Object} rect The rect object to expand.
 * @return {Object} The expanded rect.
 * @private
 */
IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {
  var margins = this._rootMarginValues.map(function(margin, i) {
    return margin.unit == 'px' ? margin.value :
        margin.value * (i % 2 ? rect.width : rect.height) / 100;
  });
  var newRect = {
    top: rect.top - margins[0],
    right: rect.right + margins[1],
    bottom: rect.bottom + margins[2],
    left: rect.left - margins[3]
  };
  newRect.width = newRect.right - newRect.left;
  newRect.height = newRect.bottom - newRect.top;

  return newRect;
};


/**
 * Accepts an old and new entry and returns true if at least one of the
 * threshold values has been crossed.
 * @param {?IntersectionObserverEntry} oldEntry The previous entry for a
 *    particular target element or null if no previous entry exists.
 * @param {IntersectionObserverEntry} newEntry The current entry for a
 *    particular target element.
 * @return {boolean} Returns true if a any threshold has been crossed.
 * @private
 */
IntersectionObserver.prototype._hasCrossedThreshold =
    function(oldEntry, newEntry) {

  // To make comparing easier, an entry that has a ratio of 0
  // but does not actually intersect is given a value of -1
  var oldRatio = oldEntry && oldEntry.isIntersecting ?
      oldEntry.intersectionRatio || 0 : -1;
  var newRatio = newEntry.isIntersecting ?
      newEntry.intersectionRatio || 0 : -1;

  // Ignore unchanged ratios
  if (oldRatio === newRatio) return;

  for (var i = 0; i < this.thresholds.length; i++) {
    var threshold = this.thresholds[i];

    // Return true if an entry matches a threshold or if the new ratio
    // and the old ratio are on the opposite sides of a threshold.
    if (threshold == oldRatio || threshold == newRatio ||
        threshold < oldRatio !== threshold < newRatio) {
      return true;
    }
  }
};


/**
 * Returns whether or not the root element is an element and is in the DOM.
 * @return {boolean} True if the root element is an element and is in the DOM.
 * @private
 */
IntersectionObserver.prototype._rootIsInDom = function() {
  return !this.root || containsDeep(document, this.root);
};


/**
 * Returns whether or not the target element is a child of root.
 * @param {Element} target The target element to check.
 * @return {boolean} True if the target element is a child of root.
 * @private
 */
IntersectionObserver.prototype._rootContainsTarget = function(target) {
  return containsDeep(this.root || document, target);
};


/**
 * Adds the instance to the global IntersectionObserver registry if it isn't
 * already present.
 * @private
 */
IntersectionObserver.prototype._registerInstance = function() {
};


/**
 * Removes the instance from the global IntersectionObserver registry.
 * @private
 */
IntersectionObserver.prototype._unregisterInstance = function() {
};


/**
 * Returns the result of the performance.now() method or null in browsers
 * that don't support the API.
 * @return {number} The elapsed time since the page was requested.
 */
function now() {
  return window.performance && performance.now && performance.now();
}


/**
 * Throttles a function and delays its execution, so it's only called at most
 * once within a given time period.
 * @param {Function} fn The function to throttle.
 * @param {number} timeout The amount of time that must pass before the
 *     function can be called again.
 * @return {Function} The throttled function.
 */
function throttle(fn, timeout) {
  var timer = null;
  return function () {
    if (!timer) {
      timer = setTimeout(function() {
        fn();
        timer = null;
      }, timeout);
    }
  };
}


/**
 * Adds an event handler to a DOM node ensuring cross-browser compatibility.
 * @param {Node} node The DOM node to add the event handler to.
 * @param {string} event The event name.
 * @param {Function} fn The event handler to add.
 * @param {boolean} opt_useCapture Optionally adds the even to the capture
 *     phase. Note: this only works in modern browsers.
 */
function addEvent(node, event, fn, opt_useCapture) {
  if (typeof node.addEventListener == 'function') {
    node.addEventListener(event, fn, opt_useCapture || false);
  }
  else if (typeof node.attachEvent == 'function') {
    node.attachEvent('on' + event, fn);
  }
}


/**
 * Removes a previously added event handler from a DOM node.
 * @param {Node} node The DOM node to remove the event handler from.
 * @param {string} event The event name.
 * @param {Function} fn The event handler to remove.
 * @param {boolean} opt_useCapture If the event handler was added with this
 *     flag set to true, it should be set to true here in order to remove it.
 */
function removeEvent(node, event, fn, opt_useCapture) {
  if (typeof node.removeEventListener == 'function') {
    node.removeEventListener(event, fn, opt_useCapture || false);
  }
  else if (typeof node.detatchEvent == 'function') {
    node.detatchEvent('on' + event, fn);
  }
}


/**
 * Returns the intersection between two rect objects.
 * @param {Object} rect1 The first rect.
 * @param {Object} rect2 The second rect.
 * @return {?Object} The intersection rect or undefined if no intersection
 *     is found.
 */
function computeRectIntersection(rect1, rect2) {
  var top = Math.max(rect1.top, rect2.top);
  var bottom = Math.min(rect1.bottom, rect2.bottom);
  var left = Math.max(rect1.left, rect2.left);
  var right = Math.min(rect1.right, rect2.right);
  var width = right - left;
  var height = bottom - top;

  return (width >= 0 && height >= 0) && {
    top: top,
    bottom: bottom,
    left: left,
    right: right,
    width: width,
    height: height
  };
}


/**
 * Shims the native getBoundingClientRect for compatibility with older IE.
 * @param {Element} el The element whose bounding rect to get.
 * @return {Object} The (possibly shimmed) rect of the element.
 */
function getBoundingClientRect(el) {
  var rect;

  try {
    rect = el.getBoundingClientRect();
  } catch (err) {
    // Ignore Windows 7 IE11 "Unspecified error"
    // https://github.com/w3c/IntersectionObserver/pull/205
  }

  if (!rect) return getEmptyRect();

  // Older IE
  if (!(rect.width && rect.height)) {
    rect = {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.right - rect.left,
      height: rect.bottom - rect.top
    };
  }
  return rect;
}


/**
 * Returns an empty rect object. An empty rect is returned when an element
 * is not in the DOM.
 * @return {Object} The empty rect.
 */
function getEmptyRect() {
  return {
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    width: 0,
    height: 0
  };
}

/**
 * Checks to see if a parent element contains a child element (including inside
 * shadow DOM).
 * @param {Node} parent The parent element.
 * @param {Node} child The child element.
 * @return {boolean} True if the parent node contains the child node.
 */
function containsDeep(parent, child) {
  var node = child;
  while (node) {
    if (node == parent) return true;

    node = getParentNode(node);
  }
  return false;
}


/**
 * Gets the parent node of an element or its host element if the parent node
 * is a shadow root.
 * @param {Node} node The node whose parent to get.
 * @return {Node|null} The parent node or null if no parent exists.
 */
function getParentNode(node) {
  var parent = node.parentNode;

  if (parent && parent.nodeType == 11 && parent.host) {
    // If the parent is a shadow root, return the host element.
    return parent.host;
  }

  if (parent && parent.assignedSlot) {
    // If the parent is distributed in a <slot>, return the parent of a slot.
    return parent.assignedSlot.parentNode;
  }

  return parent;
}


// Exposes the constructors globally.
window.IntersectionObserver = IntersectionObserver;
window.IntersectionObserverEntry = IntersectionObserverEntry;

}());

class AbstractIntersectionObserver {
    observe(element) {
        const observer = new IntersectionObserver(this.onIntersection, { rootMargin: '50px 0px', threshold: 0.2 });
        (window[AbstractIntersectionObserver.INTERSECTION_OBSERVER_IDENTIFIER_NAME]) ? observer.observe(element) : this.observerDoesNotExist(element);
    }
    unobserve(observer) {
        if ((window[AbstractIntersectionObserver.INTERSECTION_OBSERVER_IDENTIFIER_NAME]) && (typeof observer)) {
            observer.disconnect();
        }
    }
}
AbstractIntersectionObserver.INTERSECTION_OBSERVER_IDENTIFIER_NAME = "IntersectionObserver";

class LazyLoadIntersectionObserverManager extends AbstractIntersectionObserver {
    constructor() { super(); }
    static getInstance() {
        return new LazyLoadIntersectionObserverManager();
    }
    onIntersection(entries, observer) {
        const currentImg = entries[0];
        if (currentImg.isIntersecting) {
            currentImg.target.querySelector('img').setAttribute('src', currentImg.target.getAttribute('data-src'));
            currentImg.target.querySelectorAll('source').forEach((sourceEl) => {
                sourceEl.setAttribute('srcSet', sourceEl.getAttribute('data-srcSet'));
            });
            super.unobserve(observer);
        }
    }
    observerDoesNotExist(element) {
        element.setAttribute('src', element.getAttribute('data-src'));
    }
}

const adComponentCss = "snt-ad.left .content,snt-ad left.content,.left snt-ad .content{text-align:left}@media (max-width: 767px){snt-ad snt-layout.left-mobile .content,snt-ad snt-layout .left-mobile.content,.left-mobile snt-ad snt-layout .content{text-align:left}}snt-ad.center .content,snt-ad center.content,.center snt-ad .content{text-align:center}@media (max-width: 767px){snt-ad snt-layout.center-mobile .content,snt-ad snt-layout .center-mobile.content,.center-mobile snt-ad snt-layout .content{text-align:center}}snt-ad.right .content,snt-ad right.content,.right snt-ad .content{text-align:right}@media (max-width: 767px){snt-ad snt-layout.right-mobile .content,snt-ad snt-layout .right-mobile.content,.right-mobile snt-ad snt-layout .content{text-align:right}}.desktop-only snt-ad,snt-ad.desktop-only{display:none}@media (min-width: 1024px){.desktop-only snt-ad,snt-ad.desktop-only{display:block}}snt-ad h3{text-align:center;margin-bottom:15px}snt-ad .icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0px auto 40px;-webkit-box-sizing:border-box;box-sizing:border-box;height:60px;width:60px;border:3px solid #acdde4;background-color:#acdde4;border-radius:150px}.neutral-fill snt-ad .icon,snt-ad .icon.neutral-fill{border:3px solid #acdde4;background-color:#acdde4}.light-fill snt-ad .icon,snt-ad .icon.light-fill{border:3px solid #6ebac5;background-color:#ffffff}.float-fill snt-ad .icon,snt-ad .icon.float-fill{border:3px solid #acdde4;background-color:#acdde4}.primary-fill snt-ad .icon,snt-ad .icon.primary-fill{border:3px solid #acdde4;background-color:#ffffff}.light-stroke snt-ad .icon,snt-ad .icon.light-stroke{border:3px solid #acdde4;background-color:#acdde4}.dark-fill snt-ad .icon,snt-ad .icon.dark-fill{border:3px solid #ffffff;background-color:#147582}snt-ad .ad-panel{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;border:3px solid #e5e5e5;padding:40px 30px}.neutral-fill snt-ad .ad-panel,snt-ad .ad-panel.neutral-fill{color:#323232;background-color:#ffffff;border:3px solid #e5e5e5}.light-fill snt-ad .ad-panel,snt-ad .ad-panel.light-fill{color:#323232;background-color:#d9f0f4;border:none}.dark-fill snt-ad .ad-panel,snt-ad .ad-panel.dark-fill{color:#ffffff;background-color:#147582;border:none}.float-fill snt-ad .ad-panel,snt-ad .ad-panel.float-fill{color:#323232;background-color:#ffffff;border:none}.primary-fill snt-ad .ad-panel,snt-ad .ad-panel.primary-fill{color:#323232;background-color:#6ebac5;border:none}.light-stroke snt-ad .ad-panel,snt-ad .ad-panel.light-stroke{color:#323232;background-color:#ffffff;border:3px solid #acdde4}snt-ad .hidden{display:none}snt-ad .logo{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0px auto 40px;height:60px;width:214px}snt-ad .logo-image{max-height:60px;max-width:214px}snt-ad button-link-group{width:unset;margin-top:15px}snt-ad button-link-group button-link,snt-ad button-link-group snt-button button{width:unset;background-color:#ffffff;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link:hover,snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button:hover,snt-ad button-link-group snt-button button:focus{color:#323232;background-color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.neutral-fill,.neutral-fill snt-ad button-link-group button-link,snt-ad button-link-group snt-button button.neutral-fill,.neutral-fill snt-ad button-link-group snt-button button{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.neutral-fill:hover,snt-ad button-link-group button-link.neutral-fill:focus,.neutral-fill snt-ad button-link-group button-link:hover,.neutral-fill snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button.neutral-fill:hover,snt-ad button-link-group snt-button button.neutral-fill:focus,.neutral-fill snt-ad button-link-group snt-button button:hover,.neutral-fill snt-ad button-link-group snt-button button:focus{color:#ffffff;background-color:#323232}snt-ad button-link-group button-link.light-fill,.light-fill snt-ad button-link-group button-link,snt-ad button-link-group snt-button button.light-fill,.light-fill snt-ad button-link-group snt-button button{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.light-fill:hover,snt-ad button-link-group button-link.light-fill:focus,.light-fill snt-ad button-link-group button-link:hover,.light-fill snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button.light-fill:hover,snt-ad button-link-group snt-button button.light-fill:focus,.light-fill snt-ad button-link-group snt-button button:hover,.light-fill snt-ad button-link-group snt-button button:focus{color:#ffffff;background-color:#d9f0f4}snt-ad button-link-group button-link.float-fill,.float-fill snt-ad button-link-group button-link,snt-ad button-link-group snt-button button.float-fill,.float-fill snt-ad button-link-group snt-button button{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.float-fill:hover,snt-ad button-link-group button-link.float-fill:focus,.float-fill snt-ad button-link-group button-link:hover,.float-fill snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button.float-fill:hover,snt-ad button-link-group snt-button button.float-fill:focus,.float-fill snt-ad button-link-group snt-button button:hover,.float-fill snt-ad button-link-group snt-button button:focus{color:#ffffff;background-color:#323232}snt-ad button-link-group button-link.primary-fill,.primary-fill snt-ad button-link-group button-link,snt-ad button-link-group snt-button button.primary-fill,.primary-fill snt-ad button-link-group snt-button button{background-color:#323232;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.primary-fill:hover,snt-ad button-link-group button-link.primary-fill:focus,.primary-fill snt-ad button-link-group button-link:hover,.primary-fill snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button.primary-fill:hover,snt-ad button-link-group snt-button button.primary-fill:focus,.primary-fill snt-ad button-link-group snt-button button:hover,.primary-fill snt-ad button-link-group snt-button button:focus{color:#323232;background-color:transparent}snt-ad button-link-group button-link.light-stroke,.light-stroke snt-ad button-link-group button-link,snt-ad button-link-group snt-button button.light-stroke,.light-stroke snt-ad button-link-group snt-button button{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-ad button-link-group button-link.light-stroke:hover,snt-ad button-link-group button-link.light-stroke:focus,.light-stroke snt-ad button-link-group button-link:hover,.light-stroke snt-ad button-link-group button-link:focus,snt-ad button-link-group snt-button button.light-stroke:hover,snt-ad button-link-group snt-button button.light-stroke:focus,.light-stroke snt-ad button-link-group snt-button button:hover,.light-stroke snt-ad button-link-group snt-button button:focus{color:#ffffff;background-color:#323232}@media (min-width: 768px){snt-ad h3{margin-bottom:20px}snt-ad .logo{height:60px;width:min(100%, 286px)}snt-ad .logo-image{max-height:60px;max-width:min(100%, 286px)}snt-ad button-link-group{margin-top:20px}}@media (min-width: 1024px){snt-ad h3{margin-bottom:25px}snt-ad .icon{height:80px;width:80px}snt-ad .icon-image{height:45px;width:45px}snt-ad .logo{height:80px;width:min(100%, 228px)}snt-ad .logo-image{max-height:80px;max-width:min(100%, 228px)}snt-ad button-link-group{margin-top:25px}}@media (min-width: 1440px){snt-ad h3{margin-bottom:30px}snt-ad .icon{height:80px;width:80px}snt-ad .icon-image{height:45px;width:45px}snt-ad .logo{height:80px;width:min(100%, 324px)}snt-ad .logo-image{max-height:80px;max-width:min(100%, 324px)}snt-ad button-link-group{margin-top:30px}}";

class AdComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.titleString = "";
        this.styleClasses = StringUtils.empty();
        this.logoIsSet = false;
        this.iconIsSet = false;
    }
    componentWillLoad() {
        if (StringUtils.hasValue(this.iconSources)) {
            this.iconSourceJson = JSON.parse(this.iconSources);
            if (this.iconSourceJson.largeIconUrl || this.iconSourceJson.smallIconUrl) {
                this.iconIsSet = true;
            }
        }
        if (StringUtils.hasValue(this.logoSources)) {
            this.logoSourceJson = JSON.parse(this.logoSources);
            if (Object.keys(this.logoSourceJson).length > 0) {
                this.logoIsSet = true;
            }
        }
    }
    componentDidLoad() {
        if (this.logoIsSet || this.iconIsSet) {
            LazyLoadIntersectionObserverManager.getInstance().observe(this.element);
        }
    }
    render() {
        var content;
        if (this.logoIsSet) {
            content = (h("div", { class: "logo" }, h("picture", null, h("source", { "data-srcSet": this.logoSourceJson.extraLargeLogoUrl, media: "(min-width: 1440px)" }), h("source", { "data-srcSet": this.logoSourceJson.largeLogoUrl, media: "(min-width: 1024px)" }), h("source", { "data-srcSet": this.logoSourceJson.mediumLogoUrl, media: "(min-width: 768px)" }), h("source", { "data-srcSet": this.logoSourceJson.smallLogoUrl, media: "(min-width: 0px)" }), h("img", { class: "logo-image", src: "", "data-src": "", alt: "", "aria-hidden": "true" }))));
        }
        else if (this.iconIsSet) {
            content = (h("div", { class: "icon" }, h("picture", { class: "icon-image" }, h("source", { "data-srcSet": this.iconSourceJson.largeIconUrl, media: "(min-width: 1024px)" }), h("source", { "data-srcSet": this.iconSourceJson.smallIconUrl, media: "(min-width: 0px)" }), h("img", { class: "icon-image", src: "", "data-src": "", alt: "", "aria-hidden": "true" }))));
        }
        const buttonContent = this.buildButtonContent();
        const titleContent = StringUtils.hasValue(this.titleString)
            ? h("h3", null, this.titleString)
            : null;
        return (h(Host, null, h("snt-layout", null, h("div", { class: "ad-panel" }, content, titleContent, h("div", { class: WebUtils.generateClasses(["content"], this.styleClasses) }, h("slot", null)), buttonContent))));
    }
    buildButtonContent() {
        if (this.href && this.buttonLabel) {
            return (h("button-link-group", null, h("button-link", { href: this.href, target: this.target, "aria-label": this.ariaLabel }, this.buttonLabel)));
        }
        else if (this.actionReference && this.actionData && this.buttonLabel) {
            return (h("button-link-group", null, h("snt-action-button", { "action-reference": this.actionReference, "action-data": this.actionData, "style-classes": "cta", "link-title": this.buttonLabel })));
        }
        else if (this.linkLabel && this.href) {
            return (h("snt-link", { "class-names": "theme-link theme-action", "aria-label": this.linkLabel, href: this.href }, " ", h("span", { class: "link-content" }, this.linkLabel), "  "));
        }
        else {
            return null;
        }
    }
    get element() { return getElement(this); }
    static get style() { return adComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-ad",
        "$members$": {
            "titleString": [513, "title-string"],
            "styleClasses": [513, "style-classes"],
            "iconSources": [1, "icon-sources"],
            "logoSources": [1, "logo-sources"],
            "href": [513],
            "target": [513],
            "buttonLabel": [513, "button-label"],
            "linkLabel": [513, "link-label"],
            "ariaLabel": [513, "aria-label"],
            "actionReference": [513, "action-reference"],
            "actionData": [513, "action-data"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["styleClasses", "style-classes"], ["href", "href"], ["target", "target"], ["buttonLabel", "button-label"], ["linkLabel", "link-label"], ["ariaLabel", "aria-label"], ["actionReference", "action-reference"], ["actionData", "action-data"]]
    }; }
}
AdComponent.TAG_NAME = "snt-ad";

class AdExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", null, h("h1", null, "Ad"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 neutral-fill" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))), h("br", null), h("h1", null, "Ad With Logo"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 primary-fill" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))), h("h1", null, "Ad With Icon"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 light-fill" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "logo-sources": "", "style-classes": "center", "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))), h("br", null), h("h1", null, "Ad With No Title"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 light-fill" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "logo-sources": "", "style-classes": "center" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))), h("br", null), h("h1", null, "Ad With Link"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 light-stroke" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "title-string": "My Title", href: "https://google.com", "button-label": "Google", target: "_self" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))), h("br", null), h("h1", null, "Ad With CTA"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 light-stroke" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "title-string": "My Title", "button-label": "CTA", "action-reference": "Action.logAction", "action-data": '{"data": 123}', target: "_self" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))), h("br", null), h("h1", null, "Ad For Desktop Only"), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4 float-fill" }, h("snt-ad", { class: "desktop-only", "icon-sources": '{\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."))))),
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "ad-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
AdExample.TAG_NAME = "ad-example";

const alertComponentCss = "snt-alert{display:block;border-radius:0 !important;padding-left:0 !important;padding-right:0 !important;margin-bottom:0 !important;border:0 !important}snt-alert.alert-grey{background-color:#F8F8F8}snt-alert.alert-primary{background-color:#147582}@media (min-width: 1440px){snt-alert .alert-container{max-width:1170px;margin:0 auto}}snt-alert.alert-primary p2{color:#ffffff !important;display:block}@media (min-width: 1440px){snt-alert.alert-primary p2{max-width:95%}}@media (max-width: 480px){snt-alert.alert-primary p2{max-width:85%}}snt-alert.alert-primary p2 a{color:#ffffff}.alert-dismissible .close{position:relative !important;padding:0 !important;opacity:1;top:4px !important}.close{position:absolute;right:32px;top:32px;width:32px;height:32px;opacity:1}.close:hover{opacity:0.8}.close:before,.close:after{position:absolute;left:20px;content:\" \";height:20px;width:1.5px}.alert-grey .close:before,.alert-grey .close:after{background-color:#147582}.alert-primary .close:before,.alert-primary .close:after{background-color:#F8F8F8}.close:before{-webkit-transform:rotate(45deg);transform:rotate(45deg);top:0px}.close:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);top:0px}";

var __awaiter$5 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class AlertsBanner {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.dismissed = createEvent(this, "dismissed", 7);
        this.dismissible = false;
        this.animatable = true;
        this.type = 'warning';
        this.explorerOnly = StringUtils.empty();
    }
    dismiss() {
        return __awaiter$5(this, void 0, void 0, function* () {
            this.show = false;
            setTimeout(() => {
                this.dismissed(this.el);
            }, 450);
            setTimeout(() => {
                this.el.parentNode.removeChild(this.el);
            }, 100);
            this.setCookies();
        });
    }
    componentWillLoad() {
        this.setShowFadeState();
        this.checkCookies();
        this.checkIE11();
    }
    render() {
        return (h(Host, { class: {
                alert: true,
                [`alert-${this.type}`]: true,
                'alert-dismissible': this.dismissible,
                show: this.animatable && this.show,
                fade: this.animatable && this.fade,
            }, role: "alert" }, h("snt-layout", { padding: "vertical-only" }, h("div", { class: 'alert-container' }, this.getDismissButton(), h("p2", null, h("slot", null))))));
    }
    setShowFadeState() {
        if (this.animatable) {
            this.show = true;
            this.fade = true;
        }
    }
    getDismissButton() {
        if (!this.dismissible)
            return null;
        return (h("button", { type: "button", class: "close", "aria-label": "Close", onClick: this.dismiss.bind(this) }, h("span", { "aria-hidden": "true" })));
    }
    setCookies() {
        let now = new Date(), time = now.getTime();
        time += 30 * 60 * 1000;
        now.setTime(time);
        document.cookie = `closedAlert-${this.el.id}=true; expires= ${now.toUTCString()}; path=/`;
    }
    checkCookies() {
        if (document.cookie.split(';').some((item) => item.includes(`closedAlert-${this.el.id}=true`))) {
            this.el.style.display = 'none';
        }
    }
    checkIE11() {
        if (StringUtils.hasValue(this.explorerOnly) && window.document['documentMode'] === undefined) {
            this.el.style.display = 'none';
        }
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "animatable": ["componentWillLoad"]
    }; }
    static get style() { return alertComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-alert",
        "$members$": {
            "dismissible": [4],
            "animatable": [4],
            "type": [1],
            "explorerOnly": [513, "explorer-only"],
            "show": [32],
            "fade": [32],
            "dismiss": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["explorerOnly", "explorer-only"]]
    }; }
}

const articleLinkComponentCss = "snt-article-link{display:block}snt-article-link a{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;color:#323232;padding:10px;height:66px;-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#ffffff;overflow:hidden}@media (min-width: 768px){snt-article-link a{padding:15px;height:76px}}@media (min-width: 1024px){snt-article-link a{height:82px}}snt-article-link a:hover{color:#323232;text-decoration:none;outline-width:3px;outline-style:solid;outline-color:#147582;outline-offset:-3px}snt-article-link .article-link{display:block;overflow:hidden;max-height:46px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}@media (min-width: 768px){snt-article-link .article-link{max-height:46px}}@media (min-width: 1024px){snt-article-link .article-link{max-height:52px}}";

class ArticleLinkComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.hiddenTitle = StringUtils.empty();
    }
    render() {
        return (h("a", { href: this.href, "aria-label": this.ariaLabel, "hidden-title": this.hiddenTitle }, h("span", { class: "article-link" }, this.copy)));
    }
    static get style() { return articleLinkComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-article-link",
        "$members$": {
            "href": [513],
            "copy": [513],
            "ariaLabel": [513, "aria-label"],
            "hiddenTitle": [513, "hidden-title"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["copy", "copy"], ["ariaLabel", "aria-label"], ["hiddenTitle", "hidden-title"]]
    }; }
}
ArticleLinkComponent.TAG_NAME = "snt-article-link";

const articleListComponentCss = "snt-article-list .article-list{background-color:#f5f5f5;padding:15px 30px;-webkit-box-sizing:border-box;box-sizing:border-box}@media (min-width: 768px){snt-article-list .article-list{padding:15px 15px}}snt-article-list .article-list a{text-decoration:none}snt-article-list .article-list a:hover{border:2px solid #147582;-webkit-box-sizing:border-box;box-sizing:border-box;padding:15px 13px}@media (max-width: 768px){snt-article-list .article-list a:hover{padding:8px}}snt-article-list .article-list a:focus{outline:2px dotted #323232;outline-offset:3px}snt-article-list .article-list a:hover:focus{outline-offset:3px;border:3px solid #147582;padding:15px 12px}@media (max-width: 768px){snt-article-list .article-list a:hover:focus{padding:7px}}snt-article-list .article-list snt-article-link:not(:last-child){margin-bottom:15px}snt-article-list .article-title{font-family:\"Averta-ExtraBold\", sans-serif;font-weight:500;margin-bottom:15px}";

class ArticleListComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.articlesJson = StringUtils.empty();
        this.articles = [];
        this.heading = StringUtils.empty();
    }
    componentWillLoad() {
        if (StringUtils.hasValue(this.articlesJson)) {
            this.articles = JSON.parse(this.articlesJson).articles;
        }
    }
    render() {
        return (h("div", { class: "article-list" }, StringUtils.hasValue(this.heading)
            ? h("div", { class: "article-title" }, this.heading)
            : null, this.articles.map((article) => {
            return h("snt-article-link", { copy: article.copy, href: article.href, "aria-label": article.ariaLabel, "hidden-title": article.hiddenTitle });
        })));
    }
    static get style() { return articleListComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-article-list",
        "$members$": {
            "articlesJson": [513, "articles-json"],
            "articles": [16],
            "heading": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["articlesJson", "articles-json"], ["heading", "heading"]]
    }; }
}
ArticleListComponent.TAG_NAME = "snt-article-list";

class ArticleListExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", { class: "col-sm-12 col-md-5 col-lg-5 col-xl-5" }, h("h2", null, "With Title"), h("snt-article-list", { heading: "My list", articlesJson: '{ "articles": [\r\n                        {\r\n                            "href": "https://www.google.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google"\r\n                        },\r\n                        {\r\n                            "href": "https://www.yahoo.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Yahoo"\r\n                        },\r\n                        {\r\n                            "href": "https://www.facebook.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Facebook"\r\n                        }\r\n                    ]}' }), h("br", null), h("h2", null, "Without Title"), h("snt-article-list", { articlesJson: '{ "articles": [\r\n                        {\r\n                            "href": "https://www.google.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google"\r\n                        },\r\n                        {\r\n                            "href": "https://www.yahoo.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Yahoo"\r\n                        },\r\n                        {\r\n                            "href": "https://www.facebook.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Facebook"\r\n                        }\r\n                    ]}' })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "article-list-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ArticleListExample.TAG_NAME = "article-list-example";

class AsyncContent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.content = '';
    }
    componentWillLoad() {
        if (this.documentLocation != null) {
            return this.fetchNewContent(this.documentLocation);
        }
    }
    fetchNewContent(newDocumentLocation) {
        return fetch(newDocumentLocation)
            .then(response => response.text())
            .then(data => {
            this.content = data;
        });
    }
    render() {
        return (h("div", { innerHTML: this.content }));
    }
    static get watchers() { return {
        "documentLocation": ["fetchNewContent"]
    }; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "stencil-async-content",
        "$members$": {
            "documentLocation": [1, "document-location"],
            "content": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class EventUtils {
}
EventUtils.now = (ev) => {
    return ev.timeStamp || Date.now();
};

const backdropComponentCss = "snt-backdrop{display:none;top:0;bottom:0;left:0;right:0;position:fixed;height:100%;width:100%;z-index:-1;background-color:rgba(51, 51, 51, 0.75);overflow:hidden}";

class BackdropComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sntBackdropTap = createEvent(this, "sntBackdropTap", 7);
        this.lastClick = -10000;
        /**
         * If `true`, the backdrop can be clicked and will emit `ionBackdropTap` event.
         */
        this.tappable = true;
        /**
         * If `true`, the backdroo will stop propagation on tap
         */
        this.stopPropagation = true;
    }
    onTouchStart(evt) {
        this.lastClick = EventUtils.now(evt);
        this.emitTap(evt);
    }
    onMouseDown(evt) {
        if (this.lastClick < EventUtils.now(evt) - 2500) {
            this.emitTap(evt);
        }
    }
    emitTap(evt) {
        if (this.stopPropagation) {
            evt.preventDefault();
            evt.stopPropagation();
        }
        if (this.tappable) {
            this.sntBackdropTap.emit(evt);
        }
    }
    render() {
        return (h(Host, { tabindex: "-1" }));
    }
    static get style() { return backdropComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-backdrop",
        "$members$": {
            "tappable": [16],
            "stopPropagation": [16]
        },
        "$listeners$": [[2, "touchstart", "onTouchStart"], [2, "click", "onMouseDown"], [2, "mousedown", "onMouseDown"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
BackdropComponent.TAG_NAME = "snt-backdrop";

const blogComponentCss = "snt-blog .blog-container{position:relative;height:304px;width:100%;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5}snt-blog a{width:100%;display:inline-block;text-decoration:none}snt-blog a:focus,snt-blog a:active,snt-blog a:hover{border:none;outline:none;text-decoration:none}snt-blog a:focus .blog-container,snt-blog a:active .blog-container,snt-blog a:hover .blog-container{outline:5px solid #147582}snt-blog .blog-img{width:100%;height:153px}snt-blog .blog-img img{-o-object-fit:cover;object-fit:cover;width:100%;height:100%}snt-blog snt-image{display:-ms-flexbox;display:flex;width:100%;height:100%}snt-blog .blog-tag{position:absolute;background-color:#acdde4;color:#323232;padding:10px 20px;top:130px;font-size:14px;font-family:\"Averta-ExtraBold\";font-weight:800;line-height:23px;text-transform:uppercase}snt-blog .blog-content{position:relative;padding:15px}snt-blog .blog-title{position:relative;color:#323232;text-align:left;margin-top:15px;margin-bottom:40px;font-size:14px;line-height:21px}snt-blog .blog-min-read{position:absolute;color:#6f6f6f;font-family:\"Averta-Regular\";padding-left:20px;bottom:16px;font-size:12px;line-height:18px}snt-blog .h4{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}[viewport=medium] snt-blog .blog-container,snt-blog[viewport=medium] .blog-container{height:308px}[viewport=medium] snt-blog .blog-img,snt-blog[viewport=medium] .blog-img{height:167px}[viewport=medium] snt-blog .blog-img img,snt-blog[viewport=medium] .blog-img img{height:167px}[viewport=medium] snt-blog .blog-tag,snt-blog[viewport=medium] .blog-tag{padding:10px 20px;top:145px;font-size:14px;line-height:23px}[viewport=medium] snt-blog .blog-content,snt-blog[viewport=medium] .blog-content{padding:15px}[viewport=medium] snt-blog .blog-title,snt-blog[viewport=medium] .blog-title{margin-top:15px;margin-bottom:40px;font-size:14px;line-height:21px}[viewport=medium] snt-blog .blog-min-read,snt-blog[viewport=medium] .blog-min-read{padding-left:20px;bottom:16px;font-size:12px;line-height:18px}[viewport=large] snt-blog .blog-container,snt-blog[viewport=large] .blog-container{height:276px}[viewport=large] snt-blog .blog-img,snt-blog[viewport=large] .blog-img{height:120px}[viewport=large] snt-blog .blog-img img,snt-blog[viewport=large] .blog-img img{height:120px}[viewport=large] snt-blog .blog-tag,snt-blog[viewport=large] .blog-tag{padding:10px 20px;top:97px;font-size:14px;line-height:23px}[viewport=large] snt-blog .blog-content,snt-blog[viewport=large] .blog-content{padding:20px}[viewport=large] snt-blog .blog-title,snt-blog[viewport=large] .blog-title{margin-top:10px;margin-bottom:50px}[viewport=large] snt-blog .blog-title-text,snt-blog[viewport=large] .blog-title-text{font-size:16px;line-height:21px}[viewport=large] snt-blog .blog-min-read,snt-blog[viewport=large] .blog-min-read{padding-left:20px;bottom:20px;font-size:14px;line-height:20px}[viewport=extra-large] snt-blog .blog-container,snt-blog[viewport=extra-large] .blog-container{height:317px}[viewport=extra-large] snt-blog .blog-img,snt-blog[viewport=extra-large] .blog-img{height:161px}[viewport=extra-large] snt-blog .blog-img img,snt-blog[viewport=extra-large] .blog-img img{height:161px}[viewport=extra-large] snt-blog .blog-tag,snt-blog[viewport=extra-large] .blog-tag{padding:10px 20px;top:139px;font-size:14px;line-height:23px}[viewport=extra-large] snt-blog .blog-content,snt-blog[viewport=extra-large] .blog-content{padding:20px}[viewport=extra-large] snt-blog .blog-title,snt-blog[viewport=extra-large] .blog-title{margin-top:10px;margin-bottom:50px;font-size:16px;line-height:21px}[viewport=extra-large] snt-blog .blog-min-read,snt-blog[viewport=extra-large] .blog-min-read{padding-left:20px;bottom:20px;font-size:14px;line-height:20px}";

class BlogComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.imgSrcSet = StringUtils.empty();
        this.imgAltText = "";
        this.openInNewWindow = false;
    }
    render() {
        return [
            h("a", { href: this.blogLink, target: this.openInNewWindow ? "_blank" : "_self" }, h("div", { class: "blog-container" }, h("div", { class: 'blog-img' }, h("snt-image", { "data-src": this.imgSrc, "img-alt": this.imgAltText })), h("div", { class: 'blog-tag' }, h("span", null, this.tagText)), h("div", { class: 'blog-content' }, h("div", { class: "blog-title" }, h("div", { class: "h4" }, this.titleText))), h("span", { class: "blog-min-read" }, this.timeToRead)))
        ];
    }
    get hostElement() { return getElement(this); }
    static get style() { return blogComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-blog",
        "$members$": {
            "imgSrc": [513, "img-src"],
            "imgSrcSet": [513, "img-src-set"],
            "titleText": [513, "title-text"],
            "timeToRead": [513, "time-to-read"],
            "tagText": [513, "tag-text"],
            "blogLink": [513, "blog-link"],
            "imgAltText": [513, "img-alt-text"],
            "openInNewWindow": [516, "open-in-new-window"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["imgSrc", "img-src"], ["imgSrcSet", "img-src-set"], ["titleText", "title-text"], ["timeToRead", "time-to-read"], ["tagText", "tag-text"], ["blogLink", "blog-link"], ["imgAltText", "img-alt-text"], ["openInNewWindow", "open-in-new-window"]]
    }; }
}
BlogComponent.TAG_NAME = "snt-blog";

class BlogExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("div", { class: "col-3" }, h("snt-blog", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" })), h("br", null), h("div", { class: "col-12" }, h("snt-blog-info", { "accessibility-text": "{\r\n                        \"linkedIn\": \"Share on LinkedIn\",\r\n                        \"facebook\":\"Share on Facebook\",\r\n                        \"twitter\":\"Share on Twitter\",\r\n                        \"email\":\"Share with email\"\r\n                    }", "title-text": "What to know when buying your second home", timeToRead: "5 min read", "blog-link": "https://www.sonnet.ca/blog/buying-your-second-home", "published-time": "September 19, 2020" }), h("div", { class: "test-content" }, h("h3", null, "TEST BLOG CONTENT "), h("blockquote", null, h("p", null, "Make sure you\u2019re looking at builders who are part of", h("br", null), "your local builders\u2019 association.")), h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse luctus laoreet facilisis. Sed commodo orci quis commodo lacinia. Quisque tellus risus, lacinia ac lacinia semper, faucibus a lacus. Vestibulum laoreet turpis ligula, vel lobortis sapien molestie sed. Vivamus congue urna eget rutrum porta. Nam gravida mattis nibh quis pharetra. Mauris tristique suscipit mi, nec blandit urna dignissim nec. Nullam vulputate imperdiet purus a finibus. Pellentesque pharetra et mi vel egestas. Maecenas a pretium tortor."), h("p", null, "Sed sit amet laoreet tortor. Sed aliquam sem eu lorem accumsan euismod. Donec et elit elit. Etiam dictum finibus urna a cursus. Duis euismod, turpis sed gravida rhoncus, justo dolor molestie ante, vel consectetur neque ligula vitae justo. Nam tempus porttitor ultrices. Aenean vitae malesuada sapien. Donec bibendum sapien a venenatis venenatis. Vestibulum imperdiet sollicitudin lacinia. Etiam eleifend nisi massa, vel ultrices elit volutpat nec. Vivamus accumsan fringilla lectus eget interdum. Nullam id efficitur metus, quis dapibus lacus. Proin non bibendum mauris. Duis pellentesque libero non est convallis vehicula. Duis imperdiet vitae lectus quis porta."), h("p", null, "Nulla hendrerit enim nec vehicula consectetur. Nam tempus orci ipsum, sit amet tincidunt turpis auctor sit amet. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Morbi feugiat tortor sed tempor porta. Mauris sit amet mi iaculis ex ultricies interdum. Ut ornare orci lorem, at tincidunt ipsum maximus in. Nunc ornare tempor facilisis. Pellentesque neque nisi, faucibus sit amet iaculis quis, posuere eget diam. Sed rhoncus lobortis felis, vel posuere turpis vehicula vel. Nunc et orci elementum, ullamcorper eros eu, tempor dui. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc sed eros at eros lobortis dictum. Sed lacus orci, tristique vel fringilla in, cursus sit amet odio."), h("p", null, "Vivamus aliquam nisi at tortor mollis, vel condimentum urna hendrerit. Praesent euismod tellus id ante fermentum, at rutrum nunc pretium. Curabitur et tempor metus. Vestibulum aliquet neque non ligula mollis, ullamcorper cursus sapien bibendum. Curabitur consectetur laoreet aliquet. Nulla eget purus eu mauris euismod sodales lacinia in sem. Integer at faucibus sapien. Cras fermentum et arcu at blandit. Donec feugiat efficitur elit ac efficitur. Nulla in sapien justo. Aenean rutrum justo pretium metus maximus, eu molestie eros efficitur. Cras imperdiet semper egestas. Vestibulum at feugiat magna."), h("p", null, "Donec sed metus sit amet urna molestie consectetur nec non nunc. Donec felis sem, vulputate sed convallis quis, pharetra id magna. Nullam quis tortor id dolor feugiat auctor at sed ipsum. Ut porttitor finibus mauris ut dignissim. Vivamus scelerisque pellentesque lorem sed pellentesque. Proin congue, neque eu molestie vulputate, sem massa vulputate sapien, ut bibendum eros nisl in risus. Aliquam purus nisi, suscipit non ornare sed, scelerisque vel lacus. Donec purus neque, posuere quis nisi a, commodo dictum massa.")))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "blog-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
BlogExample.TAG_NAME = "blog-example";

class BlogFeaturedArticlesExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h("h1", null, "Blog Featured Articles Example"), h("h2", null, "Desktop"), h("div", { id: "desktop-preview" }, this.getMarkup())));
    }
    getMarkup() {
        return (h("snt-blog-feature-articles", null, h("snt-feature-left", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }), h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }), h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "blog-feature-articles-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class BlogResultsExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        var blogResultJson = `[
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 1\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"},
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 2\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"},
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 3\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"},
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 4\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"},
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 5\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"},
            {\"imageSource\":\"https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg\",\"titleText\":\"Blog Post 6\",\"tagText\":\"at home\",\"timeToRead\":\"5 min to read\",\"blogLink\":\"https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance\"}
        ]`;
        return (h("div", null, h("h3", null, "Blog Empty"), h("snt-blog-results", { id: "first", blogResultsString: "[]" }), h("h3", null, "Blog Results"), h("snt-blog-results", { blogResultsString: blogResultJson })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "blog-results-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const breadcrumbComponentCss = "snt-breadcrumb{display:none}@media (min-width: 1024px){snt-breadcrumb{display:block}}snt-breadcrumb ul{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}snt-breadcrumb ul li{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;list-style:none;margin-right:5px}snt-breadcrumb ul li a{margin-right:5px;color:#323232;text-decoration:none}snt-breadcrumb ul li a:hover{color:#147582}snt-breadcrumb .iconChevron{font-size:10px}";

class BreadcrumbComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() {
        this._trailObj = JSON.parse(this.trail);
    }
    render() {
        return (h("snt-layout", null, h("ul", null, this._trailObj.map((r, idx) => h("li", null, (r.href.length > 0)
            ? h("a", { href: r.href }, r.title)
            : h("span", null, r.title), (idx !== this._trailObj.length - 1) ? h("snt-icon", { styleClasses: "iconChevron" }) : null)))));
    }
    static get style() { return breadcrumbComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-breadcrumb",
        "$members$": {
            "trail": [8]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
BreadcrumbComponent.TAG_NAME = "snt-breadcrumb";

class BreadcrumbExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", { class: "col-6" }, h("snt-breadcrumb", { trail: '[{"title": "test", "href": "/test" },{ "title": "miguel", "href": "/test/miguel"},{ "title": "Current Page", "href": ""}]' }))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "breadcrumb-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const buttonComponentCss = "snt-button.cta button{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;padding:13px 21px;font-size:1.125em;width:100%;cursor:pointer;line-height:normal;font-family:\"Averta-ExtraBold\", sans-serif;overflow:visible;outline:none;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;border:none}@media (min-width: 768px){snt-button.cta button{width:auto}}snt-button.cta.theme-default button{background-color:#6ebac5;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}snt-button.cta.theme-default button:hover,snt-button.cta.theme-default button:focus{color:#ffffff;background-color:#147582;-webkit-box-shadow:inset 0 0 0 3px #147582;box-shadow:inset 0 0 0 3px #147582}snt-button.cta.theme-secondary button{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-button.cta.theme-secondary button:hover,snt-button.cta.theme-secondary button:focus{color:#ffffff;background-color:#323232}snt-button.cta.theme-secondaryDarkBg button{background-color:transparent;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #ffffff;box-shadow:inset 0 0 0 3px #ffffff}snt-button.cta.theme-secondaryDarkBg button:hover,snt-button.cta.theme-secondaryDarkBg button:focus{color:#323232;background-color:#ffffff}snt-button.cta.theme-primary button{background-color:#323232;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-button.cta.theme-primary button:hover,snt-button.cta.theme-primary button:focus{color:#323232;background-color:transparent}snt-button.cta.theme-headerNav button{background-color:transparent;color:#6ebac5;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}snt-button.cta.theme-headerNav button:hover,snt-button.cta.theme-headerNav button:focus{color:#323232;background-color:#6ebac5}snt-button.cta.theme-disabled button{background-color:#e5e5e5;color:#7f7f7f;-webkit-box-shadow:inset 0 0 0 3px #e5e5e5;box-shadow:inset 0 0 0 3px #e5e5e5}snt-button.cta.theme-disabled button:hover,snt-button.cta.theme-disabled button:focus{color:#7f7f7f}snt-button.cta.theme-disabledSecondary button{background-color:transparent;color:#b2b2b2;-webkit-box-shadow:inset 0 0 0 3px #b2b2b2;box-shadow:inset 0 0 0 3px #b2b2b2}snt-button.cta.theme-disabledSecondary button:hover,snt-button.cta.theme-disabledSecondary button:focus{color:#b2b2b2}";

class ButtonComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sntButtonClick = createEvent(this, "sntButtonClick", 7);
        this.sntButtonKeyDown = createEvent(this, "sntButtonKeyDown", 7);
        this.styleClasses = StringUtils.empty();
        this.hiddenTitle = StringUtils.empty();
        this.buttonId = StringUtils.empty();
    }
    handleKeyDown(keyboardEvent) {
        this.sntButtonKeyDown.emit(keyboardEvent);
    }
    handleClick(clickEvent) {
        this.sntButtonClick.emit(clickEvent);
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("button", { id: this.buttonId }, h("slot", null))));
    }
    get element() { return getElement(this); }
    static get style() { return buttonComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-button",
        "$members$": {
            "iconClassName": [1, "icon-class-name"],
            "styleClasses": [513, "style-classes"],
            "hiddenTitle": [513, "hidden-title"],
            "buttonId": [1, "button-id"]
        },
        "$listeners$": [[0, "keydown", "handleKeyDown"], [0, "click", "handleClick"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"], ["hiddenTitle", "hidden-title"]]
    }; }
}
ButtonComponent.TAG_NAME = "snt-button";

class LanguageUtils {
    static isEnglish() {
        return document.documentElement.lang == this.LANGUAGE_CODES.en;
    }
    static isFrench() {
        return document.documentElement.lang == this.LANGUAGE_CODES.fr;
    }
    static current() {
        return this.isFrench() ? this.LANGUAGE_CODES.fr : this.LANGUAGE_CODES.en;
    }
    static getVariablesFromString(languageString, requiredLanguageVariables) {
        try {
            const parsedJson = JSON.parse(languageString);
            const languageVariables = new Map();
            requiredLanguageVariables.forEach((key) => {
                if (parsedJson.hasOwnProperty(key)) {
                    languageVariables.set(key, parsedJson[key]);
                }
                else {
                    console.error(`Required language variable '${key}' not passed through 'language-string' property.`);
                }
            });
            return languageVariables;
        }
        catch (e) {
            throw new Error("Invalid JSON string in language-string attribute.");
        }
    }
}
LanguageUtils.LANGUAGE_CODES = {
    "en": "en-us",
    "fr": "fr-ca"
};
LanguageUtils.LANGUAGE_ID = {
    "en": "1",
    "fr": "1584454943708" //DotCMS language id for French
};

class AccessibilityUtils {
    static isAccessibilityLinkRequired(element, href, target) {
        let hasChildNodes = (element.querySelectorAll("*").length > 0);
        let isBlank = target == "_blank";
        let isHrefExternal = (href && !(href.lastIndexOf('#') >= 0 || href.indexOf('javascript') >= 0 || href.indexOf('mailto') >= 0));
        return !hasChildNodes && isBlank && isHrefExternal;
    }
    static generateNewWindow() {
        //let title = this.getNewWindowTitle();
        return `aa`;
    }
    static getNewWindowTitle() {
        return (LanguageUtils.current() == LanguageUtils.LANGUAGE_CODES.en) ? AccessibilityUtils.NEW_WINDOW_TITLE_EN : AccessibilityUtils.NEW_WINDOW_TITLE_FR;
    }
    static getNewWindowText() {
        return (LanguageUtils.current() == LanguageUtils.LANGUAGE_CODES.en) ? AccessibilityUtils.NEW_WINDOW_TEXT_EN : AccessibilityUtils.NEW_WINDOW_TEXT_FR;
    }
}
AccessibilityUtils.NEW_WINDOW_TITLE_EN = "This is an external link.";
AccessibilityUtils.NEW_WINDOW_TITLE_FR = "Il s’agit d’un lien externe.";
AccessibilityUtils.NEW_WINDOW_TEXT_EN = "Open in a new window";
AccessibilityUtils.NEW_WINDOW_TEXT_FR = "Affiche une nouvelle fenêtre";

const buttonLinkComponentCss = "@charset \"UTF-8\";button-link{width:100%}button-link.theme-default{background-color:#6ebac5;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}button-link.theme-default:hover,button-link.theme-default:focus,button-link.theme-default:focus-within{color:#ffffff;background-color:#147582;-webkit-box-shadow:inset 0 0 0 3px #147582;box-shadow:inset 0 0 0 3px #147582}button-link.theme-secondary{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}button-link.theme-secondary:hover,button-link.theme-secondary:focus,button-link.theme-secondary:focus-within{color:#ffffff;background-color:#323232}button-link.theme-secondaryDarkBg{background-color:transparent;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #ffffff;box-shadow:inset 0 0 0 3px #ffffff}button-link.theme-secondaryDarkBg:hover,button-link.theme-secondaryDarkBg:focus,button-link.theme-secondaryDarkBg:focus-within{color:#323232;background-color:#ffffff}button-link.theme-primary{background-color:#323232;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}button-link.theme-primary:hover,button-link.theme-primary:focus,button-link.theme-primary:focus-within{color:#323232;background-color:transparent}button-link.theme-headerNav{background-color:transparent;color:#6ebac5;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}button-link.theme-headerNav:hover,button-link.theme-headerNav:focus,button-link.theme-headerNav:focus-within{color:#323232;background-color:#6ebac5}button-link.theme-disabled{background-color:#e5e5e5;color:#7f7f7f;-webkit-box-shadow:inset 0 0 0 3px #e5e5e5;box-shadow:inset 0 0 0 3px #e5e5e5}button-link.theme-disabled:hover,button-link.theme-disabled:focus,button-link.theme-disabled:focus-within{color:#7f7f7f}button-link.theme-disabledSecondary{background-color:transparent;color:#b2b2b2;-webkit-box-shadow:inset 0 0 0 3px #b2b2b2;box-shadow:inset 0 0 0 3px #b2b2b2}button-link.theme-disabledSecondary:hover,button-link.theme-disabledSecondary:focus,button-link.theme-disabledSecondary:focus-within{color:#b2b2b2}@media (min-width: 768px){button-link{width:auto}}button-link a:hover{color:inherit;text-decoration:inherit}button-link a:hover .icon-new-window:after{color:inherit}button-link a:focus .icon-new-window:after{color:inherit}button-link a{color:inherit;text-decoration:inherit;display:inline-block;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;padding:13px 21px;font-size:1.125em;width:100%;text-align:center;cursor:pointer;line-height:normal;font-family:\"Averta-ExtraBold\", sans-serif;overflow:visible;outline:none;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;border:none}button-link .icon-new-window:before{all:unset}button-link .icon-new-window:after{content:\"\";font-size:1.02em !important;right:-21px;padding-left:5px;color:#323232;display:inline-block}";

class ButtonLinkComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.linkEvent = createEvent(this, "linkEvent", 7);
        this.classNames = StringUtils.empty();
    }
    handleKeyDown(keyboardEvent) {
        this.linkEvent.emit(keyboardEvent);
    }
    handleClick(clickEvent) {
        this.linkEvent.emit(clickEvent);
    }
    handleMouseover(clickEvent) {
        this.linkEvent.emit(clickEvent);
    }
    render() {
        let content = h("slot", null);
        if (this.target === "_blank" && StringUtils.hasValue(this.href)) {
            let title = AccessibilityUtils.getNewWindowTitle();
            let text = AccessibilityUtils.getNewWindowText();
            content = [
                content,
                h("span", { class: "icon-font icon-new-window", title: title }, h("span", { class: "sr-only" }, " ", text)),
            ];
        }
        return [
            h("a", { id: this.buttonId, href: this.href, target: this.target, "aria-label": this.ariaLabel, "aria-describedby": StringUtils.hasValue(this.ariaDescribedByText) && this.buttonId ? `${this.buttonId}-describedby` : null, class: WebUtils.generateClasses([], this.classNames) }, content),
            StringUtils.hasValue(this.ariaDescribedByText) && this.buttonId ? (h("div", { class: "sr-only", id: `${this.buttonId}-describedby` }, this.ariaDescribedByText)) : null,
        ];
    }
    get element() { return getElement(this); }
    static get style() { return buttonLinkComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "button-link",
        "$members$": {
            "href": [513],
            "target": [513],
            "ariaLabel": [513, "aria-label"],
            "ariaDescribedByText": [513, "aria-described-by-text"],
            "classNames": [1, "class-names"],
            "buttonId": [1, "button-id"]
        },
        "$listeners$": [[0, "keydown", "handleKeyDown"], [0, "click", "handleClick"], [1, "mouseover", "handleMouseover"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["target", "target"], ["ariaLabel", "aria-label"], ["ariaDescribedByText", "aria-described-by-text"]]
    }; }
}
ButtonLinkComponent.TAG_NAME = "button-link";

class ButtonLinkExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        //return (<div>Hello!</div>);
        return [
            h("div", null, "Mobile"),
            h("div", { class: "mobile" }, h("button-link", { class: "theme-primary", href: "https//www.sonnet.ca" }, "Click!")),
            h("div", null, "Tablet"),
            h("div", { class: "tablet" }, h("button-link", { class: "theme-primary", href: "https//www.sonnet.ca" }, "Click!")),
            h("div", null, "Desktop"),
            h("div", { class: "desktop" }, h("button-link", { class: "theme-primary", href: "https//www.sonnet.ca" }, "Click!")),
            h("div", null, "HD"),
            h("div", { class: "hd" }, h("button-link", { class: "theme-primary", href: "https//www.sonnet.ca" }, "Click!"))
        ];
    }
    static get style() { return ".mobile {\n        width: 320px;\n    }\n    .tablet {\n        width: 768px;\n    }\n    .desktop {\n        width: 1024px;\n    }\n    .hd {\n        width: 1440px;\n    }"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "button-link-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ButtonLinkExample.TAG_NAME = "button-link-example";

const buttonLinkGroupComponentCss = "button-link-group{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}button-link-group button-link{text-align:center;width:100%}button-link-group button-link:nth-child(n+2){margin-top:40px}";

class ButtonLinkGroupComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("slot", null));
    }
    static get style() { return buttonLinkGroupComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "button-link-group",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ButtonLinkGroupComponent.TAG_NAME = "button-link-group";

class CommonStylesExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("div", { class: "button_container" }, h("h1", null, "Buttons"), h("snt-action-button", { styleClasses: "cta theme-default", "action-reference": "logAction", "link-title": "Default CTA" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-primary", "action-reference": "logAction", "link-title": "Primary CTA" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-secondary", "action-reference": "logAction", "link-title": "Secondary CTA" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-secondaryDarkBg", "action-reference": "logAction", "link-title": "Secondary" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-headerNav", "action-reference": "logAction", "link-title": "Secondary CTA" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-disabled", "action-reference": "logAction", "link-title": "Disabled" }), h("br", null), h("br", null), h("snt-action-button", { styleClasses: "cta theme-disabledSecondary", "action-reference": "logAction", "link-title": "Disabled" }), h("br", null), h("br", null), h("button-link", { href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1", target: "_blank", class: "theme-default", "button-id": "pet-button", ariaDescribedByText: "Click for pet insurance" }, "Pet"), h("br", null), h("button-link", { href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1", target: "_blank", class: "theme-secondary" }, "Pet")), h("br", null), h("br", null), h("div", { id: "typography" }, h("h1", null, "H1: Get a home and auto insurance quote and buy online"), h("br", null), h("h2", null, "H2: Get a home and auto insurance quote and buy online"), h("br", null), h("h3", null, "H3: Get a home and auto insurance quote and buy online"), h("br", null), h("h4", null, "H4: Get a home and auto insurance quote and buy online"), h("br", null), h("br", null), h("p", null, "Body 1: At Sonnet, we offer customized coverage, in language you can understand, at a competitive price \u2013 and we do it all online. ", h("strong", null, "We\u2019ve changed insurance for the better, so you can worry less and live more."))), h("br", null), h("br", null), h("div", { class: "button-link-container" }, h("button-link-group", null, h("button-link", { href: "https://www.sonnet.ca/auto-insurance", class: "theme-default" }, "Home & Auto"), h("button-link", { href: "https://www.sonnet.ca/home-insurance", class: "theme-default" }, "Home"), h("button-link", { href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1", target: "_blank", class: "theme-default" }, "Pet"))), h("br", null), h("h3", null, "Enhanced Button Single Left Icon"), h("snt-enhanced-button", { ctaText: "Home", target: "_self", "left-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1" }), h("h3", null, "Enhanced Button Right Icon"), h("snt-enhanced-button", { ctaText: "Home", target: "_blank", "right-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1" }), h("h3", null, "Enhanced Button Both Icons"), h("snt-enhanced-button", { ctaText: "Home", target: "_self", "left-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', "right-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1" }), h("h3", null, "Enhanced Button Both Icons With Discount Text"), h("snt-enhanced-button", { ctaText: "Home", target: "_self", "left-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', "right-icon-sources": '{\r\n                        "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                        "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                    }', href: "https://secure.sonnet.ca/#/quoting/auto/vehicle_details?discount=F95C2BB931EC4C1", "discount-text": "Save up to 20%" })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "common-styles-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sntConnectOffersCss = "snt-connect-offers{-ms-flex-item-align:stretch;align-self:stretch;min-height:100%}snt-connect-offers .connect-offers-panel{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;color:#323232;background-color:#ffffff;border:3px solid #e5e5e5;padding:40px 20px;position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-left:-3px;margin-right:-3px}snt-connect-offers .connect-offers-panel button-link-group{margin-top:auto}snt-connect-offers .offer-available{border:3px solid #acdde4}snt-connect-offers .offer-available .offer-wrapper{position:absolute;top:0;left:0;height:40px;line-height:40px;padding:0 20px;font-size:14px;font-family:\"Averta-ExtraBold\", sans-serif !important;font-weight:500 !important;background-color:#acdde4}snt-connect-offers .logo{margin-bottom:40px}snt-connect-offers h3{margin-bottom:30px}snt-connect-offers h3,snt-connect-offers p{text-align:center}snt-connect-offers snt-modal .offer-code{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:15px 0;position:relative;width:100%;text-align:center;border-bottom:1px solid #e5e5e5;position:relative;height:21px}snt-connect-offers snt-modal .offer-code .offer-code-wrapper{padding:0 24px 0 15px;background:white}snt-connect-offers snt-modal span.iconCopy{position:absolute;top:1px;right:-18px}snt-connect-offers snt-modal snt-link a{position:relative;font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;top:10px;margin-right:5px;font-size:14px;outline:1px solid transparent;padding:1px;-webkit-box-sizing:border-box;box-sizing:border-box;background-image:none}snt-connect-offers snt-modal snt-link a:before{bottom:3px}snt-connect-offers snt-modal snt-link a:hover{background-image:none}snt-connect-offers snt-modal snt-link a:focus{background-image:none;margin:0px;margin-right:5px;outline-color:#9e0a9a}snt-connect-offers snt-modal button-link-group button-link{width:auto}snt-connect-offers snt-modal .couponCode{position:absolute;left:-9999px}snt-connect-offers snt-modal .code_copied{font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;text-align:center;margin-top:21px}snt-connect-offers snt-accordion.transcript-accordion{margin-top:26px}snt-connect-offers snt-accordion.transcript-accordion .legal-open{display:none}snt-connect-offers snt-accordion.transcript-accordion .legal-close{display:block}snt-connect-offers snt-accordion.transcript-accordion[expanded] .legal-open{display:block}snt-connect-offers snt-accordion.transcript-accordion[expanded] .legal-close{display:none}snt-connect-offers snt-accordion.transcript-accordion .expand-icon{font-size:14px}snt-connect-offers snt-accordion.transcript-accordion .card-header [slot=summary]{font-size:12px}snt-connect-offers snt-accordion.transcript-accordion .card-body{max-height:250px}@media (min-width: 1024px){snt-connect-offers snt-accordion.transcript-accordion .card-body{max-height:350px}}snt-connect-offers snt-accordion.transcript-accordion .card-body [slot=details] p{text-align:left;line-height:1.5;font-size:12px}";

class ConnectOffersComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.offerAvailable = "";
        this.titleString = "";
        this.logoIsSet = false;
    }
    componentWillLoad() {
        if (StringUtils.hasValue(this.logoSources)) {
            this.logoSourceJson = JSON.parse(this.logoSources);
            if (Object.keys(this.logoSourceJson).length < 0)
                return;
            this.logoIsSet = true;
        }
        (this.modalData !== undefined) ? this.parseModalData(this.modalData) : null;
    }
    componentDidLoad() {
        if (this.logoIsSet)
            LazyLoadIntersectionObserverManager.getInstance().observe(this.element);
    }
    parseModalData(newValue) {
        if (newValue)
            this.modalDataObj = JSON.parse(newValue);
    }
    toggleLegal() {
        const legalCopy = this.element.querySelector('.modal-legal-copy');
        const legalIcon = this.element.querySelector('.modal-legal-link');
        if (legalCopy.classList.contains('d-none')) {
            legalCopy.classList.remove('d-none');
            legalIcon.innerHTML = '[-] ' + this.modalLegalLinkHide;
        }
        else {
            legalCopy.classList.add('d-none');
            legalIcon.innerHTML = '[+] ' + this.modalLegalLinkShow;
        }
    }
    showModal() {
        const modal = this.element.querySelector("snt-modal");
        modal.show();
    }
    copyToClipboard(e) {
        let couponCode = this.element.querySelector('.couponCode');
        couponCode.select();
        couponCode.setSelectionRange(6, couponCode.value.length);
        document.execCommand('copy');
        e.target.classList.add('d-none');
        this.element.querySelector('.iconCopy').classList.add('d-none');
        this.element.querySelector('.code_copied').classList.remove('d-none');
        setTimeout(() => {
            e.target.classList.remove('d-none');
            this.element.querySelector('.iconCopy').classList.remove('d-none');
            this.element.querySelector('.code_copied').classList.add('d-none');
        }, 5000);
    }
    ;
    render() {
        const buttonContent = this.buildButtonContent();
        const modalContent = this.buildModalContent(this.modalDataObj);
        const titleContent = StringUtils.hasValue(this.titleString)
            ? h("h3", null, this.titleString)
            : null;
        return (h("div", { class: WebUtils.generateClasses(["connect-offers-panel"], (this.offerAvailable ? 'offer-available' : '')) }, h("div", { class: "offer-wrapper" }, this.offerAvailable), (this.logoIsSet) ?
            h("div", { class: "logo d-flex justify-content-center mb-4", role: "img", "aria-label": this.offerTitle }, h("picture", null, h("source", { "data-srcSet": this.logoSourceJson.extraLargeLogoUrl, media: "(min-width: 1440px)" }), h("source", { "data-srcSet": this.logoSourceJson.largeLogoUrl, media: "(min-width: 1024px)" }), h("source", { "data-srcSet": this.logoSourceJson.mediumLogoUrl, media: "(min-width: 768px)" }), h("source", { "data-srcSet": this.logoSourceJson.smallLogoUrl, media: "(min-width: 0px)" }), h("img", { class: "logo-image", src: `${this.logoSourceJson.extraLargeLogoUrl}`, alt: (this.altTag) ? this.altTag : this.offerTitle }))) : '', titleContent, h("p", { innerHTML: this.description }), buttonContent, h("div", null), modalContent));
    }
    buildButtonContent() {
        if (this.href) {
            return (h("button-link-group", null, h("button-link", { class: "cta theme-default", href: this.href, target: this.target, "aria-label": this.ariaLabel }, this.buttonLabel)));
        }
        else if (this.actionReference && this.actionData && this.buttonLabel) {
            return (h("button-link-group", null, h("snt-action-button", { "action-reference": this.actionReference, "action-data": this.actionData, "style-classes": "cta theme-default", onClick: () => { this.showModal(); }, "link-title": this.buttonLabel })));
        }
        else {
            return null;
        }
    }
    buildModalContent(data) {
        if (this.actionReference) {
            const modalTitle = data.title;
            const modalDescription = data.description;
            const modalButtonLabel = data.button.title;
            const modalButtonHref = data.button.href;
            const modalButtonTarget = data.button.target;
            const modalCode = data.code;
            const modalLegalLinkShowElement = data.linkShow;
            const modalLegalLinkhideElement = data.linkHide;
            const legalCopy = data.legal;
            const copyOfferCodeTxt = data.copyOfferCodeTxt || "Copy offer code";
            const offerCodeCopiedTxt = data.offerCodeCopiedTxt || "Code copied!";
            this.modalLegalLinkShow = modalLegalLinkShowElement;
            this.modalLegalLinkHide = modalLegalLinkhideElement;
            return (h("snt-modal", { "language-string": "{\"close\":\"Close\"}", "style-classes": "ready-to-show" }, h("snt-title-copy", { "title-string": modalTitle }, h("p", { style: { textAlign: "center" }, innerHTML: modalDescription })), h("div", { class: "offer-code " + ((modalCode) ? '' : 'd-none') }, h("div", { class: "offer-code-wrapper" }, h("snt-link", { href: "javascript:void(0)", onClick: (e) => { this.copyToClipboard(e); } }, modalCode, h("span", { class: "icon-font iconCopy float-right", title: copyOfferCodeTxt }), h("span", { class: "sr-only" }, copyOfferCodeTxt)), h("p", { class: "code_copied d-none" }, offerCodeCopiedTxt))), h("input", { type: "text", tabindex: "-1", value: modalCode, class: "couponCode" }), h("button-link-group", null, h("button-link", { class: "cta theme-default", href: modalButtonHref, target: modalButtonTarget, "aria-label": modalButtonLabel }, modalButtonLabel)), h("snt-accordion", { class: "transcript-accordion" }, h("div", { slot: "summary" }, h("span", { class: "legal-close" }, modalLegalLinkShowElement), h("span", { class: "legal-open" }, modalLegalLinkhideElement)), h("div", { slot: "details" }, h("div", { innerHTML: legalCopy })))));
        }
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "modalData": ["parseModalData"]
    }; }
    static get style() { return sntConnectOffersCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-connect-offers",
        "$members$": {
            "offerAvailable": [1, "offer-available"],
            "logoSources": [1, "logo-sources"],
            "altTag": [1, "alt-tag"],
            "offerTitle": [1, "offer-title"],
            "titleString": [513, "title-string"],
            "href": [513],
            "target": [513],
            "description": [513],
            "buttonLabel": [513, "button-label"],
            "ariaLabel": [513, "aria-label"],
            "actionReference": [513, "action-reference"],
            "actionData": [513, "action-data"],
            "modalData": [1, "modal-data"],
            "modalDataObj": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["href", "href"], ["target", "target"], ["description", "description"], ["buttonLabel", "button-label"], ["ariaLabel", "aria-label"], ["actionReference", "action-reference"], ["actionData", "action-data"]]
    }; }
}
ConnectOffersComponent.TAG_NAME = "snt-connect-offers";

class ConnectOffersExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        const three_columns_json = '{"extra-small": 1,"small": 1,"medium": 2,"large": 3,"extra-large": 3}';
        return (h("snt-multi-column-mixed", { class: "with-gutter", "column-count": three_columns_json }, h("div", { class: "column" }, h("snt-connect-offers", { "offer-available": "OFFER", "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/220x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/250x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", "title-string": "Offers headline here", href: "https://google.com", "button-label": "Google", target: "_self" })), h("div", { class: "column" }, h("snt-connect-offers", { "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/220x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/250x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', "title-string": "TEST headline here", description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", href: "", "button-label": "Google", target: "_self" })), h("div", { class: "column" }, h("snt-connect-offers", { "offer-available": "OFFER", "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/220x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/250x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', description: "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>", "title-string": "Modal example here", "button-label": "Google", "action-reference": "Action.openModal", "action-data": '{}', "modal-data": '{"title": "Modal Title", "code": "CODE: OFFERCODE", "description": "<p>Get your mortgage with the experts at Homewise, who will find you the best mortgage from over 30 lenders. Plus, save $100 off your first mortgage payment. Follow the unique link below to redeem this offer.</p>", "button": {"title": "Visit Homewise", "target": "_blank", "href": "#"}, "linkShow": "View terms of offer", "linkHide": "Hide terms of offer", "legal": "<p>For new customers only, offer is a limited-time offer, specific to Homewise\u2019s partnership with Sonnet Insurance. $100 cash back will be provided upon closing of a mortgage through Homewise. Mortgage value must be above $100,000. To be eligible the home buyer must reside in Canada and purchase a property in Canada.</p> <p> Homewise is a Mortgage Brokerage, FSCO Lic# 12984</p> <p>Sonnet is not a mortgage professional or a licenced mortgage broker under the laws of any Canadian province or territory and does not provide mortgage related services. Sonnet offers no assurances that Homewise and its services are suitable for any particular individual.</p>"}' })), h("div", { class: "column" }, h("snt-connect-offers", { "offer-available": "", "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/220x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/250x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", "title-string": "No offer + new tab", href: "https://google.com", "button-label": "Google", target: "_blank", "modal-data": '[{"title": true, "code": "CODE: OFFERCODE", "description": "<p>Get your mortgage with the experts at Homewise, who will find you the best mortgage from over 30 lenders. Plus, save $100 off your first mortgage payment. Follow the unique link below to redeem this offer.</p>", "button": {"title": "Visit Homewise", "target": "_blank", "href": "#"}, "linkShow": "View terms of offer", "linkHide": "Hide terms of offer", "legal": "<p>For new customers only, offer is a limited-time offer, specific to Homewise\u2019s partnership with Sonnet Insurance. $100 cash back will be provided upon closing of a mortgage through Homewise. Mortgage value must be above $100,000. To be eligible the home buyer must reside in Canada and purchase a property in Canada.</p> <p> Homewise is a Mortgage Brokerage, FSCO Lic# 12984</p> <p>Sonnet is not a mortgage professional or a licenced mortgage broker under the laws of any Canadian province or territory and does not provide mortgage related services. Sonnet offers no assurances that Homewise and its services are suitable for any particular individual.</p>"}]' })), h("div", { class: "column" }, h("snt-connect-offers", { "offer-available": "OFFER", "logo-sources": '{\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/220x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/250x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', "offer-title": '', "alt-tag": 'TEST', description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", "title-string": "Another modal here", "button-label": "Google", "action-reference": "Action.openModal", "action-data": '{}', "modal-data": '{"title": true, "code": "OFFERCODE", "description": "<p>Get your mortgage with the experts at Homewise, who will find you the best mortgage from over 30 lenders. Plus, save $100 off your first mortgage payment. Follow the unique link below to redeem this offer.</p>", "button": {"title": "Visit Homewise", "target": "_blank", "href": "#"}, "linkShow": "View terms of offer", "linkHide": "Hide terms of offer", "legal": "<p>For new customers only, offer is a limited-time offer, specific to Homewise\u2019s partnership with Sonnet Insurance. $100 cash back will be provided upon closing of a mortgage through Homewise. Mortgage value must be above $100,000. To be eligible the home buyer must reside in Canada and purchase a property in Canada.</p> <p> Homewise is a Mortgage Brokerage, FSCO Lic# 12984</p> <p>Sonnet is not a mortgage professional or a licenced mortgage broker under the laws of any Canadian province or territory and does not provide mortgage related services. Sonnet offers no assurances that Homewise and its services are suitable for any particular individual.</p>"}' }))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "connect-offers-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class ContextConsumer {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.context = {};
        this.renderer = () => null;
    }
    connectedCallback() {
        if (this.subscribe != null) {
            this.unsubscribe = this.subscribe(this.el, 'context');
        }
    }
    disconnectedCallback() {
        if (this.unsubscribe != null) {
            this.unsubscribe();
        }
    }
    render() {
        return this.renderer(Object.assign({}, this.context));
    }
    get el() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "context-consumer",
        "$members$": {
            "context": [16],
            "renderer": [16],
            "subscribe": [16],
            "unsubscribe": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const ctaHighlightComponentCss = "snt-cta-highlight.left .text-content,snt-cta-highlight left.text-content,.left snt-cta-highlight .text-content{text-align:left}@media (max-width: 767px){snt-cta-highlight snt-layout.left-mobile .text-content,snt-cta-highlight snt-layout .left-mobile.text-content,.left-mobile snt-cta-highlight snt-layout .text-content{text-align:left}}snt-cta-highlight.center .text-content,snt-cta-highlight center.text-content,.center snt-cta-highlight .text-content{text-align:center}@media (max-width: 767px){snt-cta-highlight snt-layout.center-mobile .text-content,snt-cta-highlight snt-layout .center-mobile.text-content,.center-mobile snt-cta-highlight snt-layout .text-content{text-align:center}}snt-cta-highlight.right .text-content,snt-cta-highlight right.text-content,.right snt-cta-highlight .text-content{text-align:right}@media (max-width: 767px){snt-cta-highlight snt-layout.right-mobile .text-content,snt-cta-highlight snt-layout .right-mobile.text-content,.right-mobile snt-cta-highlight snt-layout .text-content{text-align:right}}snt-cta-highlight .cta-container{background:#6ebac5}snt-cta-highlight .cta-container h4.text-content{margin-right:30px;display:inline-block}snt-cta-highlight button-link{display:inline-block}snt-cta-highlight button-link .icon-font::after{color:white}snt-cta-highlight .text-content{font-size:0.875rem;line-height:21px;display:inline-block;width:100%;margin:0px 0px 15px 0px;font-family:\"Averta-ExtraBold\", sans-serif !important;font-weight:500 !important}snt-cta-highlight snt-layout[viewport] .spacings{padding-top:15px;padding-bottom:15px}@media (min-width: 768px){snt-cta-highlight .cta-wrapper{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}snt-cta-highlight snt-button,snt-cta-highlight button-link{white-space:nowrap}snt-cta-highlight .text-content{margin-right:30px;margin-bottom:0px;width:inherit}}@media (min-width: 1024px){snt-cta-highlight .text-content{font-size:1rem}}@media (min-width: 1440px){snt-cta-highlight .text-content{font-size:1.313rem;line-height:26px}}";

class CtaHighlightComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.url = StringUtils.empty();
        this.urlTarget = StringUtils.empty();
        this.buttonId = StringUtils.empty();
        this.eventConfiguration = null;
    }
    componentDidLoad() {
        if (!StringUtils.isEmpty(this.actionReference)) {
            this.eventConfiguration = EventConfigurationBuilder.newInstanceof().withComponent(this.element).build();
        }
    }
    render() {
        let content;
        if (StringUtils.hasValue(this.url)) {
            content = (h("button-link", { "button-id": this.buttonId, class: "theme-primary", target: this.urlTarget, href: this.url }, this.cta));
        }
        else {
            content = (h("snt-action-button", { "button-id": this.buttonId, "style-classes": "cta theme-primary", "action-reference": this.actionReference, "action-data": this.actionData, "link-title": this.cta }));
        }
        return (h("snt-layout", { class: "cta-container" }, h("div", { class: "cta-wrapper" }, h("div", { class: "text-content" }, h("slot", null)), content)));
    }
    get element() { return getElement(this); }
    static get style() { return ctaHighlightComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-cta-highlight",
        "$members$": {
            "cta": [1],
            "actionReference": [1, "action-reference"],
            "actionData": [1, "action-data"],
            "url": [513],
            "urlTarget": [513, "url-target"],
            "buttonId": [1, "button-id"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["url", "url"], ["urlTarget", "url-target"]]
    }; }
}
CtaHighlightComponent.TAG_NAME = "snt-cta-highlight";

class CtaHightlightExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("snt-cta-highlight", { cta: "Get a Quote", "action-reference": "Action.logAction" }, "Best offer ever"), "\u00A0", h("snt-cta-highlight", { cta: "Get a Quote", "url-target": "_blank", url: "https://www.sonnet.ca" }, "Best offer ever")));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "cta-highlight-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const ctaReminderComponentCss = "snt-cta-reminder{background-color:#6ebac5;display:block}snt-cta-reminder h2{margin:0px}snt-cta-reminder.left .header,snt-cta-reminder left.header,.left snt-cta-reminder .header{text-align:left}@media (max-width: 767px){snt-cta-reminder snt-layout.left-mobile .header,snt-cta-reminder snt-layout .left-mobile.header,.left-mobile snt-cta-reminder snt-layout .header{text-align:left}}snt-cta-reminder.center .header,snt-cta-reminder center.header,.center snt-cta-reminder .header{text-align:center}@media (max-width: 767px){snt-cta-reminder snt-layout.center-mobile .header,snt-cta-reminder snt-layout .center-mobile.header,.center-mobile snt-cta-reminder snt-layout .header{text-align:center}}snt-cta-reminder.right .header,snt-cta-reminder right.header,.right snt-cta-reminder .header{text-align:right}@media (max-width: 767px){snt-cta-reminder snt-layout.right-mobile .header,snt-cta-reminder snt-layout .right-mobile.header,.right-mobile snt-cta-reminder snt-layout .header{text-align:right}}snt-cta-reminder .action-button{margin-top:30px;text-align:center;width:100%}snt-cta-reminder .action-button button-link{display:inline-block}snt-cta-reminder .action-button button-link .icon-font::after{color:white}snt-cta-reminder snt-action-button snt-button.cta button{width:100%}snt-cta-reminder button-link{width:100%}snt-cta-reminder snt-layout[viewport=medium] snt-action-button snt-button.cta button{width:auto}snt-cta-reminder snt-layout[viewport=medium] button-link{width:auto}snt-cta-reminder snt-layout[viewport=large] snt-action-button snt-button.cta button{width:auto}snt-cta-reminder snt-layout[viewport=large] button-link{width:auto}snt-cta-reminder snt-layout[viewport=extra-large] snt-action-button snt-button.cta button{width:auto}snt-cta-reminder snt-layout[viewport=extra-large] button-link{width:auto}";

class CtaReminderComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.titleString = StringUtils.empty();
        this.linkTitle = StringUtils.empty();
        this.url = StringUtils.empty();
        this.urlTarget = StringUtils.empty();
        this.actionReference = StringUtils.empty();
        this.actionData = StringUtils.empty();
        this.styleClasses = StringUtils.empty();
        this.buttonId = StringUtils.empty();
        this.eventConfiguration = null;
    }
    componentDidLoad() {
        if (!StringUtils.isEmpty(this.actionReference) && StringUtils.isEmpty(this.url)) {
            this.eventConfiguration = EventConfigurationBuilder.newInstanceof().withComponent(this.element).build();
        }
    }
    render() {
        let content;
        if (StringUtils.hasValue(this.url)) {
            content = (h("button-link", { "button-id": this.buttonId, class: "theme-primary", target: this.urlTarget, "aria-label": this.linkTitle, href: this.url }, this.linkTitle));
        }
        else {
            content = (h("snt-action-button", { "button-id": this.buttonId, "style-classes": "cta theme-primary", "action-reference": this.actionReference, "action-data": this.actionData, "link-title": this.linkTitle }));
        }
        return (h("snt-layout", null, h("h2", { class: WebUtils.generateClasses(["header"], this.styleClasses) }, this.titleString), h("div", { class: "action-button" }, content)));
    }
    get element() { return getElement(this); }
    static get style() { return ctaReminderComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-cta-reminder",
        "$members$": {
            "titleString": [513, "title-string"],
            "linkTitle": [513, "link-title"],
            "url": [513],
            "urlTarget": [513, "url-target"],
            "actionReference": [1, "action-reference"],
            "actionData": [1, "action-data"],
            "styleClasses": [513, "style-classes"],
            "buttonId": [1, "button-id"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["linkTitle", "link-title"], ["url", "url"], ["urlTarget", "url-target"], ["styleClasses", "style-classes"]]
    }; }
}
CtaReminderComponent.TAG_NAME = "snt-cta-reminder";

class CtaReminderExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("snt-cta-reminder", { "title-string": "This is my title", "link-title": "Click Here", "action-reference": "Action.logAction" }), "\u00A0", h("snt-cta-reminder", { "title-string": "This is my title", "link-title": "Click Here", "url-target": "_blank", url: "https://www.sonnet.ca" })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "cta-reminder-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
CtaReminderExample.TAG_NAME = "cta-reminder-example";

class ContentData {
    constructor(type, lazy = true, url, content) {
        this.type = type;
        this.lazy = lazy;
        this.url = url;
        this.content = content;
    }
}

var ContentTypeEnum;
(function (ContentTypeEnum) {
    ContentTypeEnum["HTML"] = "html";
    ContentTypeEnum["JSON"] = "json";
    ContentTypeEnum["XML"] = "xml";
    ContentTypeEnum["TEXT"] = "text";
})(ContentTypeEnum || (ContentTypeEnum = {}));
(function (ContentTypeEnum) {
    function exists(value) {
        if (value) {
            return (ContentTypeEnum[value.toUpperCase().trim()] != null);
        }
        throw new Error(`Argument with value ${value} must be a valid string.`);
    }
    ContentTypeEnum.exists = exists;
    function findByValue(text) {
        if (exists(text)) {
            return ContentTypeEnum[text.toUpperCase().trim()];
        }
        throw new Error(`Argument text with value ${text} does not exist.`);
    }
    ContentTypeEnum.findByValue = findByValue;
})(ContentTypeEnum || (ContentTypeEnum = {}));

class AbstractContentBuilder {
    withConditionalBooleanArgument(fn, arg) {
        return (arg) ? this.withConditionalArguments(fn, arg) : this;
    }
    withConditionalObjectArgument(fn, arg) {
        return (arg) ? this.withConditionalArguments(fn, arg) : this;
    }
    withConditionalStringArgument(fn, arg) {
        return (StringUtils.notEmpty(arg)) ? this.withConditionalArguments(fn, arg) : this;
    }
    withConditionalArguments(fn, ...args) {
        return (args && args.length > 0) ? fn.apply(this, args) : this;
    }
}

var __awaiter$6 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class AbstractUrlContentBuilder extends AbstractContentBuilder {
    withUrl(url) {
        this.url = url;
        return this;
    }
    build() {
        return __awaiter$6(this, void 0, void 0, function* () {
            if (this.url) {
                return fetch(this.url.href).then(res => res.text()).then((body) => {
                    return this.parse(body);
                });
            }
            throw new Error("No content has been defined using the builder.");
        });
    }
}

var __awaiter$7 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class HtmlContentBuilder extends AbstractUrlContentBuilder {
    constructor() {
        super();
    }
    static newInstance() {
        return new HtmlContentBuilder();
    }
    withValue(value) {
        this.value = value;
        this.url = null;
        return this;
    }
    withParent(parent) {
        this.parentElement = parent;
        this.value = null;
        return this;
    }
    parse(value) {
        if (window.document["documentMode"] === undefined) {
            let divElement = document.createElement("div");
            let template = document.createElement("template");
            template.innerHTML = value;
            divElement.appendChild(template.content);
            this.setJavascript(divElement);
            return document.body.appendChild(divElement);
        }
        else {
            let divElement = document.createElement("div");
            divElement.innerHTML = value;
            return divElement;
        }
    }
    build() {
        const _super = Object.create(null, {
            build: { get: () => super.build }
        });
        return __awaiter$7(this, void 0, void 0, function* () {
            this.parentElement =
                this.parentElement || document.createElement("div");
            if (StringUtils.isEmpty(this.value) && this.url) {
                this.parentElement.appendChild(yield _super.build.call(this));
            }
            else if (StringUtils.notEmpty(this.value)) {
                this.parentElement.appendChild(this.parse(this.value));
            }
            else {
                throw new Error("No HTML content has been defined using this builder.");
            }
            return this.parentElement;
        });
    }
    setJavascript(elm) {
        Array.from(elm.querySelectorAll("script")).forEach((oldScript) => {
            const newScript = document.createElement("script");
            Array.from(oldScript.attributes).forEach((attr) => newScript.setAttribute(attr.name, attr.value));
            newScript.appendChild(document.createTextNode(oldScript.innerHTML));
            oldScript.parentNode.replaceChild(newScript, oldScript);
        });
    }
}

class JsonUrlContentBuilder extends AbstractUrlContentBuilder {
    constructor() {
        super();
    }
    static newInstance() {
        return new JsonUrlContentBuilder();
    }
    withValue(value) {
        this.value = value;
        this.url = null;
        return this;
    }
    build() {
        if ((!(this.value)) && (this.url)) {
            return super.build();
        }
        else if (this.value) {
            return this.parse(this.value);
        }
        throw new Error("No JSON content has been defined using this builder.");
    }
    parse(value) {
        return JSON.parse(value);
    }
}

class ContentParser {
    static parse(value) {
        switch (value.type) {
            case ContentTypeEnum.HTML:
                let htmlBuilder = HtmlContentBuilder.newInstance();
                htmlBuilder.withConditionalStringArgument(htmlBuilder.withValue, value.content);
                htmlBuilder.withConditionalObjectArgument(htmlBuilder.withUrl, value.url);
                return htmlBuilder;
            case ContentTypeEnum.JSON:
                let jsonBuilder = JsonUrlContentBuilder.newInstance();
                jsonBuilder.withConditionalStringArgument(jsonBuilder.withValue, value.content);
                jsonBuilder.withConditionalObjectArgument(jsonBuilder.withUrl, value.url);
                return jsonBuilder;
            // case ContentTypeEnum.XML:
            // case ContentTypeEnum.TEXT:
            default:
                throw new Error(`Unable to locate content builder for type ${value.type}`);
        }
    }
}

var __awaiter$8 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class DataComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    getData() {
        return __awaiter$8(this, void 0, void 0, function* () {
            return this.builder.build();
        });
    }
    componentWillLoad() {
        let url = (this.src ? new URL(this.src) : null);
        this.builder = ContentParser.parse(new ContentData(ContentTypeEnum.findByValue(this.type), this.lazyLoad, url, this.data));
    }
    render() {
        return (h(Host, null));
    }
    get element() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-data",
        "$members$": {
            "type": [1],
            "lazyLoad": [4, "lazy-load"],
            "src": [1],
            "data": [1],
            "getData": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
DataComponent.TAG_NAME = "snt-data";

const demoAppCss = "#sidebar-wrapper{min-height:110vh;margin-left:-15rem;-webkit-transition:margin 0.25s ease-out;-moz-transition:margin 0.25s ease-out;-o-transition:margin 0.25s ease-out;transition:margin 0.25s ease-out}#sidebar-wrapper .sidebar-heading{padding:0.75rem 0.75rem;text-align:center;font-size:1.2rem}#sidebar-wrapper .list-group{width:15rem}#sidebar-wrapper .list-group-item{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0.75rem 1.25rem}#page-content-wrapper{background-color:white;min-width:100vw;position:relative}#wrapper.toggled #sidebar-wrapper{margin-left:0}.remove{display:none}@media (min-width: 768px){#sidebar-wrapper{margin-left:0;width:242px;float:left}#page-content-wrapper{min-width:0;width:100%}#wrapper.toggled #sidebar-wrapper{margin-left:-15rem}}@media (max-width: 768px){#sidebar-wrapper{display:none}}.navbar{margin-bottom:2em}.components-panel{padding-right:5%;padding-left:5%}.viewport-size-wrapper{position:absolute;bottom:0;right:0}.viewport-size-wrapper p{font-size:11px;font-family:\"Courier New\"}";

class DemoApp {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        document.querySelector('.close-nav').addEventListener('click', function (e) {
            e.preventDefault();
            document.getElementById('sidebar-wrapper').style.display = "none";
        });
        const viewportSize = function () {
            const sntLayout = document.getElementsByTagName('snt-layout')[0];
            sntLayout ? document.querySelector('.viewport-size').textContent = sntLayout.getAttribute('viewport') : document.querySelector('.viewport-size-wrapper').classList.add('d-none');
        };
        window.addEventListener('resize', viewportSize);
    }
    render() {
        const routesCollection = {
            routes: [
                { linkUrl: '/', linkText: 'Home', componentName: 'demo-app-home', exact: true },
                { linkUrl: '/404-example', linkText: '404 Error', componentName: 'page-not-found-example' },
                { linkUrl: '/accordion-example', linkText: 'Accordion', componentName: 'accordion-example' },
                { linkUrl: '/ad-example', linkText: 'Ad', componentName: 'ad-example' },
                { linkUrl: '/article-list-example', linkText: 'Article List', componentName: 'article-list-example' },
                { linkUrl: '/blog-example', linkText: 'Blog', componentName: 'blog-example' },
                { linkUrl: '/blog-feature-articles-example', linkText: 'Blog Feature Articles', componentName: 'blog-feature-articles-example' },
                { linkUrl: '/blog-results-example', linkText: 'Blog Results', componentName: 'blog-results-example' },
                { linkUrl: '/breadcrumb-example', linkText: 'Breadcrumb Trail', componentName: 'breadcrumb-example' },
                { linkUrl: '/button-link-example', linkText: 'Button link', componentName: 'button-link-example' },
                { linkUrl: '/common-styles-example', linkText: 'Common Styles', componentName: 'common-styles-example' },
                { linkUrl: '/connect-offers-example', linkText: 'Connect Offers', componentName: 'connect-offers-example' },
                { linkUrl: '/cta-highlight-example', linkText: 'CTA Highlight', componentName: 'cta-highlight-example' },
                { linkUrl: '/cta-reminder-example', linkText: 'CTA Reminder', componentName: 'cta-reminder-example' },
                { linkUrl: '/dropdown-example', linkText: 'Dropdown', componentName: 'dropdown-example' },
                { linkUrl: '/faq-block-example', linkText: 'FAQ category block', componentName: 'faq-block-example' },
                { linkUrl: '/faq-filter-slider-example', linkText: 'FAQ filter/slider', componentName: 'faq-filter-slider-example' },
                { linkUrl: '/faq-pagination-example', linkText: 'FAQ pagination', componentName: 'faq-pagination-example' },
                { linkUrl: '/feature-left-example', linkText: 'Feature Left', componentName: 'feature-left-example' },
                { linkUrl: '/feature-right-example', linkText: 'Feature Right', componentName: 'feature-right-example' },
                { linkUrl: '/footer-example', linkText: 'Footer', componentName: 'footer-example' },
                { linkUrl: '/form-example', linkText: 'Form', componentName: 'form-example' },
                { linkUrl: '/header-example', linkText: 'Header', componentName: 'header-example' },
                { linkUrl: '/hero-example', linkText: 'Hero', componentName: 'hero-example' },
                { linkUrl: '/icon-copy-example', linkText: 'Icon Copy', componentName: 'icon-copy-example' },
                { linkUrl: '/image-example', linkText: 'Image (Snt)', componentName: 'image-example' },
                { linkUrl: '/image-icon-example', linkText: 'Image Icon', componentName: 'image-icon-example' },
                { linkUrl: '/link-example', linkText: 'Link Example', componentName: 'link-example' },
                { linkUrl: '/modal-example', linkText: 'Modal', componentName: 'modal-example' },
                { linkUrl: '/multi-column-example', linkText: 'Multi Column', componentName: 'multi-column-example' },
                { linkUrl: '/panel-example', linkText: 'Panel', componentName: 'panel-example' },
                { linkUrl: '/recaptcha-example', linkText: 'Recaptcha Example', componentName: 'recaptcha-example' },
                { linkUrl: '/responsive-images', linkText: 'Responsive Images', componentName: 'responsive-images-example' },
                { linkUrl: '/search-combobox-example', linkText: 'Search Combobox', componentName: 'search-combobox-example' },
                { linkUrl: '/search-results-example', linkText: 'Search Results', componentName: 'search-results-example' },
                { linkUrl: '/side-tabs-example', linkText: 'Side Rail Tabs', componentName: 'snt-tabs-example' },
                { linkUrl: '/skiptomain-example', linkText: 'Skip to main content', componentName: 'skiptomain-example' },
                { linkUrl: '/source-list-example', linkText: 'Source List', componentName: 'source-list-example' },
                { linkUrl: '/testimonial-example', linkText: 'Testimonials', componentName: 'testimonial-example' },
                { linkUrl: '/three-column-example', linkText: 'Three Column', componentName: 'three-column-example' },
                { linkUrl: '/three-column-mixed-example', linkText: 'Three Column Mixed', componentName: 'three-column-mixed-example' },
                { linkUrl: '/tip-example', linkText: 'Tip', componentName: 'tip-example' },
                { linkUrl: '/title-example', linkText: 'Title', componentName: 'title-example' },
                { linkUrl: '/title-copy-example', linkText: 'Title Copy', componentName: 'title-copy-example' },
                { linkUrl: '/treeview-example', linkText: 'Treeview', componentName: 'treeview-example' },
                { linkUrl: '/two-column-example', linkText: 'Two Column', componentName: 'two-column-example' },
                { linkUrl: '/two-column-feature-example', linkText: 'Two Column Feature', componentName: 'two-column-feature-example' },
                { linkUrl: '/vertical-tab-example', linkText: 'Vertical Tab', componentName: 'vertical-tab-example' },
                { linkUrl: '/video-example', linkText: 'Video Example', componentName: 'video-example' },
            ]
        };
        let routesLinkMarkup, routeMarkup;
        const navClassList = 'list-group-item list-group-item-action bg-light';
        routesLinkMarkup = routesCollection.routes.map((el) => {
            return h("stencil-route-link", { url: el.linkUrl, anchorClass: navClassList }, el.linkText);
        });
        routeMarkup = routesCollection.routes.map((el) => {
            return el.exact
                ? h("stencil-route", { url: el.linkUrl, component: el.componentName, exact: el.exact })
                : h("stencil-route", { url: el.linkUrl, component: el.componentName });
        });
        return (h("div", { class: "d-flex", id: "wrapper" }, h("div", { class: "bg-light border-right", id: "sidebar-wrapper" }, h("h3", { class: "sidebar-heading" }, "Components ", h("a", { href: 'javascript:void(0)', class: "close-nav" }, "[X]")), h("div", { class: "list-group list-group-flush" }, routesLinkMarkup)), h("main", { id: "page-content-wrapper" }, h("nav", { class: "navbar navbar-expand-lg navbar-light bg-light border-bottom" }, h("h2", { class: "sidebar-heading" }, "Sonnet Design System"), h("div", { class: "collapse navbar-collapse", id: "navbarSupportedContent" }, h("ul", { class: "navbar-nav ml-auto mt-2 mt-lg-0" }, h("li", { class: "nav-item active" }, h("a", { class: "nav-link", href: "https://pasprogram.economicalinsurance.com/secure/RapidBoard.jspa?rapidView=5936&projectKey=SCMS" }, "GIT")), h("li", { class: "nav-item" }, h("a", { class: "nav-link", href: "https://sonnet.invisionapp.com/dsm/sonnet/style-guide" }, "DSM"))))), h("div", { class: "p-3" }, h("stencil-router", null, h("stencil-route-switch", { scrollTopOffset: -1 }, routeMarkup))), h("div", { class: 'viewport-size-wrapper' }, h("p", null, "viewport: ", h("span", { class: "viewport-size" }))))));
    }
    get element() { return getElement(this); }
    static get style() { return demoAppCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "demo-app",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
DemoApp.TAG_NAME = "demo-app";

const demoAppHomeCss = "";

class DemoAppHome {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, "HOME PAGE"));
    }
    get element() { return getElement(this); }
    static get style() { return demoAppHomeCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "demo-app-home",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
DemoAppHome.TAG_NAME = "demo-app-home";

class AbstractConfiguration {
    constructor() {
        this.configurations = new Map();
    }
    remove(key) {
        this.configurations.delete(key);
    }
    hasConfigurations() {
        return (this.configurations.size > 0);
    }
    getConfigurations() {
        return this.configurations;
    }
    values() {
        return this.configurations.values();
    }
    keys() {
        return this.configurations.keys();
    }
}

class ItemConfiguration extends AbstractConfiguration {
    add(value) {
        this.configurations.set(value.key, value);
    }
}

class Item {
    constructor(key, value, disabled, selected) {
        this.key = key;
        this.value = value;
        this.disabled = disabled;
        this.selected = selected;
    }
}

class KeyboardEventProcessor {
    constructor() {
        this.delegatedHandlers = new Map();
    }
    setDelegatedHandlers(delegatedHandlers) {
        this.delegatedHandlers = delegatedHandlers;
    }
    setDefaultHandler(defaultHandler) {
        this.defaultHandler = defaultHandler;
    }
    getDelegatedHandlers() {
        return this.delegatedHandlers;
    }
    hasDelegatedHandler(evt) {
        return this.delegatedHandlers.has(evt.key);
    }
    hasDefaultHandler() {
        return typeof (this.defaultHandler) == "function";
    }
    process(evt) {
        if (this.delegatedHandlers.has(evt.key)) {
            const delegatedEvent = this.delegatedHandlers.get(evt.key);
            delegatedEvent(evt);
        }
        else if (this.defaultHandler) {
            this.defaultHandler(evt);
        }
    }
}

class KeyboardEventProcessorBuilder {
    constructor() {
        this.delegatedHandlers = new Map();
    }
    static newInstance() {
        return new KeyboardEventProcessorBuilder();
    }
    withKey(key, handlerFn) {
        this.delegatedHandlers.set(key, handlerFn);
        return this;
    }
    withKeys(keys, handlerFn) {
        keys.forEach((key) => {
            this.delegatedHandlers.set(key, handlerFn);
        });
        return this;
    }
    withDefaultHandler(handlerFn) {
        this.defaultHandler = handlerFn;
        return this;
    }
    build() {
        const eventProcessor = new KeyboardEventProcessor;
        eventProcessor.setDelegatedHandlers(this.delegatedHandlers);
        eventProcessor.setDefaultHandler(this.defaultHandler);
        return eventProcessor;
    }
}

var NavigationDirectionEnum;
(function (NavigationDirectionEnum) {
    NavigationDirectionEnum[NavigationDirectionEnum["FORWARDS"] = 0] = "FORWARDS";
    NavigationDirectionEnum[NavigationDirectionEnum["BACKWARDS"] = 1] = "BACKWARDS";
    NavigationDirectionEnum[NavigationDirectionEnum["FIRST"] = 2] = "FIRST";
    NavigationDirectionEnum[NavigationDirectionEnum["LAST"] = 3] = "LAST";
    NavigationDirectionEnum[NavigationDirectionEnum["UPWARDS"] = 4] = "UPWARDS";
    NavigationDirectionEnum[NavigationDirectionEnum["DOWNARDS"] = 5] = "DOWNARDS";
})(NavigationDirectionEnum || (NavigationDirectionEnum = {}));

class ItemUtils {
    static generateConfigurationFromItemOptions(element) {
        const configuration = new ItemConfiguration();
        const components = Array.from(element.querySelectorAll("snt-item"));
        components.forEach((item) => {
            configuration.add(new Item(item.hasAttribute('data-key') ? item.getAttribute('data-key') : '', item.hasAttribute('value') ? item.getAttribute('value') : '', item.hasAttribute('disabled') ? Boolean(item.getAttribute('disabled')) : false, item.hasAttribute('selected') ? Boolean(item.getAttribute('selected')) : false));
        });
        return configuration;
    }
}

const Keyboard = {
    ENTER: "Enter",
    SPACE: " ",
    ESCAPE: "Escape",
    BACKSPACE: "Backspace",
    TAB: "Tab",
    ARROW_UP: "ArrowUp",
    ARROW_DOWN: "ArrowDown",
    ARROW_RIGHT: "ArrowRight",
    ARROW_LEFT: "ArrowLeft",
    HOME: "Home",
    END: "End",
    DELETE: "Delete",
    PAGE_UP: "PageUp",
    PAGE_DOWN: "PageDown",
    ASTERISK: "*"
};

const dropdownComponentCss = "snt-dropdown{display:block}snt-dropdown *{-webkit-box-sizing:border-box;box-sizing:border-box}snt-dropdown .btn-link{color:#6f6f6f;text-decoration:none;font-weight:normal}snt-dropdown .btn-link:hover{color:#6f6f6f;text-decoration:none}snt-dropdown .btn-link:focus{text-decoration:none}snt-dropdown .icon-container{display:inline-block;font-size:12px;color:#147582}snt-dropdown .dropdown-container.opened .icon-container{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}snt-dropdown .hidden-textbox{height:0px;width:0px;visibility:hidden;padding:0;margin:0;float:right}@media (max-width: 767px){snt-dropdown .dropdown-container.opened{position:fixed;top:0;left:0;right:0;bottom:0;height:auto;background-color:#fff;z-index:110000}snt-dropdown .dropdown-container.opened ul{top:72px;bottom:0;max-height:none;background-color:#fff;z-index:110000;padding:0}snt-dropdown .dropdown-container.opened.show-label-xs .options-header{-webkit-align-items:center;-ms-flex-align:center;align-items:center;border-bottom:1px solid #323232;display:-webkit-flex;display:-ms-flexbox;display:flex;height:72px;line-height:1;overflow:hidden;padding:0 20px;position:relative;z-index:1000}snt-dropdown .dropdown-container.opened.show-label-xs .dropdown-display-btn{display:none}}.dropdown{font-size:16px}.dropdown.fixed-position.visible-xs{z-index:1200}.dropdown>select{display:none}.dropdown .value{min-width:50px;min-height:39px;line-height:40px;height:39px;color:#71d5e2;background-color:transparent;border:0;border-bottom:none}.dropdown .value.light{color:#aaa}.dropdown .menu{background-color:#fff;border:1px solid #767676;border-top:none;color:#323232;display:none;position:absolute;left:0;list-style:none;max-height:300px;overflow-x:hidden;overflow-y:auto;padding:0;text-align:left;top:45px;width:100%;z-index:1220}.dropdown .menu-item{border-bottom:1px solid #b2b2b2;color:#323232;cursor:pointer;font-size:16px;font-weight:400;height:45px;line-height:16px;padding:15px 35px 5px 21px;text-align:left;width:100%}.dropdown .menu-item span{color:#323232}.dropdown .menu-item:focus{background-color:#71d5e2}.dropdown .menu-item:hover{background-color:#f2f2f2}.dropdown .menu-item.selected{font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif;background-position:right 21px top 17px;background-repeat:no-repeat;background-size:12px 10px;background-image:url(../images/Drpdown-check.svg)}.dropdown .item:hover{background-color:#71d5e2}.dropdown .item:first-child{border-bottom:1px solid #767676}.dropdown .item p{margin:0}.dropdown .item p:last-child{font-size:13px}.dropdown.form-control{border:0;display:inline-block;height:auto;padding:0}.dropdown.form-control:focus{-webkit-box-shadow:none;box-shadow:none}.dropdown.large .dropdown-container .dropdown-display-btn,.dropdown.size-x2 .dropdown-container .dropdown-display-btn{padding:22px;height:60px}.dropdown.large .dropdown-container .dropdown-display-btn.open,.dropdown.size-x2 .dropdown-container .dropdown-display-btn.open{padding:22px 21px}.dropdown.large .dropdown-container .dropdown-display-btn:hover,.dropdown.size-x2 .dropdown-container .dropdown-display-btn:hover{padding:22px 21px}.dropdown.large .menu-item,.dropdown.size-x2 .menu-item{padding:22px 35px 3px 21px;height:60px}.dropdown.large .menu-item.selected,.dropdown.size-x2 .menu-item.selected{background-position:right 21px top 27px}.dropdown.large .menu,.dropdown.size-x2 .menu{top:63px}@media (max-width: 767px){.dropdown .menu-item{border-bottom:1px solid #b2b2b2;color:#323232;display:block;height:auto;font-family:Averta-Regular, Arial, Helvetica, sans-serif;font-size:16px;font-weight:400;line-height:1;padding:22px 20px;position:relative;text-align:left;width:100%}.dropdown .menu-item:last-child:after{content:none}.dropdown .menu-item:focus{background-color:#71d5e2;font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif}.dropdown .menu-item:focus a,.dropdown .menu-item:focus a:active,.dropdown .menu-item:focus a:focus,.dropdown .menu-item:focus a:hover{font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif}.dropdown .menu-item:hover{background-color:#f2f2f2;color:#323232}.dropdown .menu-item:hover a,.dropdown .menu-item:hover a:active,.dropdown .menu-item:hover a:focus,.dropdown .menu-item:hover a:hover{background-color:#6e60d9;color:#323232 !important}.dropdown .menu-item.selected{background-position:right 30px top 30px;background-repeat:no-repeat;background-size:12px 10px;background-image:url(../images/Drpdown-check.svg)}.dropdown .menu-item.selected a,.dropdown .menu-item.selected a:active,.dropdown .menu-item.selected a:focus,.dropdown .menu-item.selected a:hover{font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif;background-position:right 30px top 30px;background-repeat:no-repeat;background-size:12px 10px;background-image:url(../images/Drpdown-check.svg)}.dropdown .modal-close{margin-top:-12px;padding:0;position:absolute;right:20px;top:50%}.dropdown .modal-close:active,.dropdown .modal-close:focus,.dropdown .modal-close:hover{text-decoration:none}.dropdown .modal-close .label{color:#323232;font-size:14px;font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif;font-weight:400;line-height:17px;padding-bottom:0;padding-left:0;padding-top:0;position:relative;top:-2px}.dropdown.large .dropdown-container.opened .dropdown-display-btn,.dropdown.size-x2 .dropdown-container.opened .dropdown-display-btn{height:72px;padding:20px}}.dropdown.menu-dropdown .dropdown-container .dropdown-display-btn{background-color:#f8f8f8;border-color:transparent}.dropdown.menu-dropdown .dropdown-container .dropdown-display-btn.open,.dropdown.menu-dropdown .dropdown-container .dropdown-display-btn:focus,.dropdown.menu-dropdown .dropdown-container .dropdown-display-btn:hover{background-color:#f8f8f8;border-color:transparent}.dropdown-container{position:relative;font-size:16px}.dropdown-container .options-header{display:none}.dropdown-container .options-header>label{line-height:24px;margin-bottom:0;color:#323232;font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif;width:calc(100% - 113px)}.dropdown-container .options-header.doubleLine{height:200%}.dropdown-container .options-header .dropdown_line2{font-size:12px}.dropdown-container.opened .dropdown-display-btn:before{-webkit-transform:translateY(-50%) rotate(180deg);transform:translateY(-50%) rotate(180deg)}.dropdown-container.opened .menu{display:block}@media (min-width: 768px){.dropdown-container .display-btn{padding:15px}}.dropdown-display-btn{height:100%;width:100%;height:45px;padding:14px 34px 14px 20px;line-height:1;color:#6f6f6f;text-decoration:none;border:1px solid #6f6f6f;font-family:Averta-Regular, Arial, Helvetica, sans-serif;text-align:left;background-color:#fff;line-height:1;-webkit-box-sizing:border-box;box-sizing:border-box}.dropdown-display-btn:hover{border:1px solid #147582;-webkit-box-sizing:border-box;box-sizing:border-box}.dropdown-display-btn:focus,.dropdown-display-btn.open{padding:14px 34px 14px 19px;background-color:#fff;border:3px solid #147582;text-decoration:none;-webkit-box-sizing:border-box;box-sizing:border-box}.selected{position:relative;font-weight:700;font-family:Averta-ExtraBold, Arial, Helvetica, sans-serif}.selected:before{content:\"\";position:absolute;right:25px;width:6px;height:12px;font-size:12px;line-height:12px;border:solid #323232;border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.click{cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.dropdown-container .dropdown-display-btn{padding:0}.dropdown-container .dropdown-display-btn.open,.dropdown-container .dropdown-display-btn:active,.dropdown-container .dropdown-display-btn:focus,.dropdown-container .dropdown-display-btn:hover{padding:0;outline:0}.dropdown-container .dropdown-display-btn>div.text-overflow{display:inline-block;width:calc(100% - 34px);padding:14px 34px 14px 20px}.dropdown-container.opened .dropdown-display-btn>div.text-overflow,.dropdown-container .dropdown-display-btn:focus>div.text-overflow{padding:12px 32px 12px 18px;width:calc(100% - 32px)}.dropdown-container .dropdown-display-btn>div.chosen{color:#323232}.dropdown--menu-item{width:100%;line-height:inherit;font-size:inherit !important;color:inherit;border-bottom:1px solid #b2b2b2;padding:0 !important;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-flex:1;-webkit-flex:1 0 0;-ms-flex:1 0 0;flex:1 0 0;height:auto}.dropdown--menu-item>div{display:block;word-break:break-word;width:100%;font-family:Averta-Regular, Arial, Helvetica, sans-serif;padding:16px 57px 14px 20px}.dropdown--menu-item>div:focus{background-color:#6ebac5}.dropdown--menu-item>div:hover{background-color:#f2f2f2}.dropdown--menu-item>div:active{background-color:#147582;color:#fff}.btn-text.btn-text-w-span span:last-child,.driver-details .btn-text-w-span.link-text span:last-child,.primary-link.btn-text-w-span span:last-child{-webkit-transition:background-size 0.2s ease-in 0.05s;transition:background-size 0.2s ease-in 0.05s;background-image:-webkit-linear-gradient(#9e0a9a 0, #9e0a9a 100%);background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #9e0a9a), to(#9e0a9a));background-image:linear-gradient(#9e0a9a 0, #9e0a9a 100%);background-repeat:no-repeat;background-size:0 2px;background-position:0 100%;padding:0 0 4px;color:#9e0a9a;white-space:normal}@media (min-width: 768px){.dropdown--menu-item{min-height:45px;padding:10px 45px 10px 15px}}@media (max-width: 767px){.dropdown-container .options-header>label{font-size:14px}.xs-navbar--close-btn.right-col-off{padding:0 20px 0 10px;margin-right:-20px}.dropdown--menu-item>div{padding:18px 57px 18px 20px}.xs-navbar--close-btn.btn{font-size:14px;color:#095d68;-webkit-transition:background-color ease-out 0.3s;transition:background-color ease-out 0.3s;line-height:71px}.xs-navbar--close-btn.btn:hover,.xs-navbar--close-btn.btn:focus{color:#9e0a9a}.dropdown-container.opened.show-label-xs .options-header .xs-navbar--close-btn{position:absolute;top:0;bottom:0;right:0;font-weight:700;font-family:Averta-Regular, Arial, Helvetica, sans-serif;margin-right:0;margin-bottom:0;line-height:inherit;background:0 0;border-bottom:0;padding-left:15px}.dropdown-container.opened.show-label-xs .options-header .xs-navbar--close-btn::before{border-bottom:0}.xs-navbar--close-btn>.label{font-size:inherit;color:inherit;padding:0;top:0}.dropdown-container.opened.show-label-xs .options-header .xs-navbar--close-btn>.label{top:-1px;left:-7px}.dropdown-container.opened.show-label-xs .options-header .xs-navbar--close-btn>.icon{top:2px}.xs-navbar--close-btn.right-col-off>.icon{right:-5px;border-bottom:0;-webkit-transition:all ease-out 0.3s;transition:all ease-out 0.3s;font-family:Averta-Regular, Arial, Helvetica, sans-serif}.xs-navbar--close-btn.right-col-off>.icon:hover{border-bottom:2px solid #9e0a9a}.xs-navbar--close-btn:active,.xs-navbar--close-btn:focus,.xs-navbar--close-btn:hover{text-decoration:none;background-color:#e5e5e5 !important}}.dropdown.size-x2 .dropdown-container .dropdown-display-btn.open,.dropdown.size-x2 .dropdown-container .dropdown-display-btn:hover{padding:10px 0}.dropdown.size-x2 .dropdown-display-btn,.dropdown.size-x2 .dropdown.large .dropdown-container .dropdown-display-btn{padding:0.5em !important}.dropdown--menu-item{font-size:inherit}ol,ul{margin-top:0;margin-bottom:10px}.dropdown--menu-item.disabled{pointer-events:none;color:lightgray}";

var __awaiter$9 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class DropdownComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.dropdownSelectionChange = createEvent(this, "dropdownSelectionChange", 7);
        this.opened = false;
        this.required = false;
        this.keyboardEventProcessor = KeyboardEventProcessorBuilder.newInstance()
            .withKeys([Keyboard.TAB, Keyboard.ESCAPE], () => this.close())
            .withKeys([Keyboard.ENTER, Keyboard.SPACE], () => this.toggle())
            .withKey(Keyboard.ARROW_UP, () => this.processArrowKeys(NavigationDirectionEnum.BACKWARDS))
            .withKey(Keyboard.ARROW_DOWN, () => this.processArrowKeys(NavigationDirectionEnum.FORWARDS))
            .build();
    }
    open() {
        return __awaiter$9(this, void 0, void 0, function* () {
            this.opened = true;
        });
    }
    close() {
        return __awaiter$9(this, void 0, void 0, function* () {
            this.opened = false;
        });
    }
    toggle() {
        return __awaiter$9(this, void 0, void 0, function* () {
            if ((yield this.isOpen()) == true) {
                this.selectedItem = this.currentItem;
            }
            this.opened = !this.opened;
        });
    }
    isOpen() {
        return __awaiter$9(this, void 0, void 0, function* () {
            return this.opened;
        });
    }
    setValue(value) {
        return __awaiter$9(this, void 0, void 0, function* () {
            this.selectedItem = this.items.find(item => item.key == value);
        });
    }
    getValue() {
        return __awaiter$9(this, void 0, void 0, function* () {
            return this.selectedItem.key;
        });
    }
    setIndex(index) {
        return __awaiter$9(this, void 0, void 0, function* () {
            this.selectedItem = this.items[index];
        });
    }
    getIndex() {
        return __awaiter$9(this, void 0, void 0, function* () {
            return this.items.indexOf(this.selectedItem);
        });
    }
    handleModalOpenAndClose(opened) {
        if (opened) {
            this.currentItem = (this.selectedItem != undefined) ? this.selectedItem : this.getNextAvailableItem(NavigationDirectionEnum.FORWARDS);
        }
    }
    handleSelectedItemChange() {
        this.hiddenEl.dispatchEvent(new CustomEvent('blur'));
        this.dropdownSelectionChange.emit();
    }
    componentWillLoad() {
        this.initItemConfiguration();
        this.selectedItem = this.items.find(item => item.selected == true);
    }
    componentDidUpdate() {
        if (!this.opened) {
            if (document.activeElement != this.dropdownButtonElement) {
                this.dropdownButtonElement.focus();
            }
        }
    }
    componentDidLoad() {
        window.addEventListener('click', () => {
            if (document.activeElement != this.dropdownButtonElement) {
                this.close();
            }
        });
    }
    handleClick(item) {
        this.selectedItem = item;
        this.currentItem = item;
        this.textValueElement.classList.add('chosen');
    }
    render() {
        const selectedItemId = (this.selectedItem != undefined) ? `${this.name}-item-${this.selectedItem.value}` : "";
        const selectItemLabelId = `${this.name}-dropdown-selected-item-label`;
        return (h(Host, { class: "dropdown", id: `${this.name}-dropdown` }, h("div", { class: `dropdown-container show-label-xs ${(this.opened) ? 'opened' : ''}`, "register-callback": "DropdownComponent.registerContainer" // TODO: Should register itself with a container event
            ,
            onClick: this.toggle.bind(this), onKeyDown: this.processKeyboardEvent.bind(this) }, h("div", { id: `${this.name}-button-dropdown`, class: `btn-link dropdown-display-btn ${(this.opened) ? 'open' : ''}`, role: "listbox", tabindex: "0", "aria-activedescendant": (this.selectedItem) ? selectedItemId : false, "aria-label": `${this.labelText}`, "aria-multiselectable": "false", "aria-disabled": "false", "aria-required": "true", "aria-expanded": (this.opened) ? "true" : false, ref: (thisElement) => this.dropdownButtonElement = thisElement }, h("div", { id: selectItemLabelId, ref: (el) => this.textValueElement = el, class: `text-overflow single-line ${this.selectedItem ? 'chosen' : ''}` }, (this.selectedItem) ? this.selectedItem.value : this.placeholderText), h("div", { class: "icon-container icon-font iconTriangle", "aria-hidden": "true", role: "presentation" })), h("div", { class: "xs-navbar-header options-header" }, h("label", { id: `${this.name}-dropdown-label`, class: "pull-left ng-binding" }, this.labelText), h("button", { type: "button", class: "modal-close btn btn-text btn-text-w-span xs-navbar--close-btn pull-right right-col-off no-link-animation", "aria-labelledby": `${this.name}-close-label ${this.name}-dropdown-label`, tabindex: "0" }, h("span", { id: `${this.name}-close-label`, class: "strong label" }, "Close"), h("span", { class: "sr-only" }, "Close Icon"), h("snt-icon", { styleClasses: "iconNavClose" }))), h("ul", { id: `${this.name}-insurance-type-dropdown-items`, class: "items menu list-unstyled text-left", role: "listbox", tabindex: "0", "aria-labelledby": selectItemLabelId, "aria-activedescendant": selectedItemId }, this.items.map((item) => h("li", { class: `dropdown--menu-item click text-left no-margin
              ${(this.selectedItem) == item ? "selected" : ""}
              ${(item == this.currentItem) ? "highlighted" : ""}
              ${(item.disabled == true) ? "disabled" : ""}` }, h("div", { id: selectedItemId, role: "option", tabindex: "-1", "aria-selected": (this.selectedItem == item) ? "true" : false, onClick: () => { this.handleClick(item); }, ref: (thisElement) => (this.currentItem == item && thisElement.focus()) }, item.value))))), h("input", { class: "hidden-textbox", tabindex: "-1", type: "text", "data-field": this.name, id: this.name, required: this.required, ref: (el) => this.hiddenEl = el, value: (this.selectedItem) ? this.selectedItem.key : "" })));
    }
    initItemConfiguration() {
        const configurationObject = this.itemConfiguration || ItemUtils.generateConfigurationFromItemOptions(this.element);
        if (configurationObject) {
            const configurations = configurationObject.getConfigurations();
            if (configurations) {
                this.items = Array.from(configurations.values());
            }
        }
    }
    processArrowKeys(direction) {
        return __awaiter$9(this, void 0, void 0, function* () {
            if ((yield this.isOpen()) == false) {
                this.open();
            }
            else {
                this.currentItem = this.getNextAvailableItem(direction);
            }
        });
    }
    getNextAvailableItem(direction, currentItem = this.currentItem) {
        const currentIndex = this.items.indexOf(currentItem);
        const maxIndex = this.items.length - 1;
        let nextItem;
        let nextIndex;
        if (direction == NavigationDirectionEnum.BACKWARDS) {
            (currentIndex <= 0) ? nextIndex = maxIndex : nextIndex = currentIndex - 1;
        }
        else if (direction == NavigationDirectionEnum.FORWARDS) {
            (currentIndex >= maxIndex) ? nextIndex = 0 : nextIndex = currentIndex + 1;
        }
        nextItem = this.items[nextIndex];
        return (nextItem.disabled) ? this.getNextAvailableItem(direction, nextItem) : nextItem;
    }
    processKeyboardEvent(evt) {
        return __awaiter$9(this, void 0, void 0, function* () {
            this.keyboardEventProcessor.process(evt);
        });
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "opened": ["handleModalOpenAndClose"],
        "selectedItem": ["handleSelectedItemChange"]
    }; }
    static get style() { return dropdownComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-dropdown",
        "$members$": {
            "opened": [516],
            "placeholderText": [513, "placeholder-text"],
            "labelText": [513, "label-text"],
            "itemConfiguration": [16],
            "required": [516],
            "name": [513],
            "selectedItem": [32],
            "currentItem": [32],
            "open": [64],
            "close": [64],
            "toggle": [64],
            "isOpen": [64],
            "setValue": [64],
            "getValue": [64],
            "setIndex": [64],
            "getIndex": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["opened", "opened"], ["placeholderText", "placeholder-text"], ["labelText", "label-text"], ["required", "required"], ["name", "name"]]
    }; }
}
DropdownComponent.TAG_NAME = "snt-dropdown";

class DropdownExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", null, h("form", null, h("div", { class: "form-row" }, h("div", { class: "col-sm-3 col-xs-12" }, h("snt-dropdown", { id: "insurance-type", placeholderText: "Please Select", labelText: "" }, h("snt-options", null, h("snt-item", { "data-key": "101", value: "One-O-One" }), h("snt-item", { "data-key": "102", value: "One-O-Two" }), h("snt-item", { "data-key": "103", value: "One-O-Three" }), h("snt-item", { "data-key": "104", value: "One-O-Four" }), h("snt-item", { "data-key": "105", value: "One-O-Five" }))))), h("br", null), h("div", { class: "row" }, h("div", null, h("label", null, "Input One"), h("br", null), h("input", { type: "text" })), h("div", null, h("label", null, "Input Two"), h("br", null), h("input", { type: "text" })), h("div", null, h("select", null, h("option", { value: "A", disabled: true }, "AAA"), h("option", { value: "B" }, "BBB"), h("option", { value: "C" }, "CCC"), h("option", { value: "D", disabled: true }, "DDD"), h("option", { value: "E" }, "EEE")))), h("div", { class: "row" }, h("div", null, h("input", { type: "submit", value: "submit" })))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "dropdown-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
DropdownExample.TAG_NAME = "dropdown-example";

const enhancedButtonComponentCss = "@charset \"UTF-8\";snt-enhanced-button{height:100%}snt-enhanced-button .discount-panel{background-color:#147582;color:#ffffff;height:30px;width:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:-3px -3px 0px;padding:0px 3px}snt-enhanced-button .link-panel{border:3px solid transparent;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;margin:10px;color:initial;outline-offset:3px;outline:1px dashed transparent;font-weight:500;font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;position:relative;height:calc(100% - 26px);width:calc(100% - 26px)}snt-enhanced-button .content-panel{padding:26px}snt-enhanced-button .link-text{display:inline-block;position:relative}snt-enhanced-button .link-text .icon-new-window{width:14px;display:inline-block}snt-enhanced-button .link-text .icon-new-window:before{all:unset}snt-enhanced-button .link-text .icon-new-window:after{content:\"\";font-size:1.02em !important;right:-21px;padding-left:5px;color:#323232;display:inline-block}snt-enhanced-button .icon-panel{width:100%;margin:auto auto 10px}snt-enhanced-button .icon{font-weight:normal;display:inline-block}snt-enhanced-button .icon i{font-size:10px}snt-enhanced-button .plus-sign{margin-left:10px;margin-right:10px}snt-enhanced-button a{display:block;width:100%;height:100%;margin:auto;text-align:center;text-decoration:none}snt-enhanced-button a:active,snt-enhanced-button a:hover{text-decoration:none}snt-enhanced-button a:active .link-panel,snt-enhanced-button a:hover .link-panel{border:3px solid #147582}snt-enhanced-button a:focus{outline:none;margin:0;padding:0}snt-enhanced-button a:focus .link-panel{outline:1px dashed #323232}@media (min-width: 1024px){snt-enhanced-button .content-panel{padding:30px}snt-enhanced-button .plus-sign{margin-left:15px;margin-right:15px}}";

class EnhancedButtonComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sntButtonClick = createEvent(this, "sntButtonClick", 7);
        this.sntButtonKeyDown = createEvent(this, "sntButtonKeyDown", 7);
        this.styleClasses = StringUtils.empty();
    }
    handleKeyDown(keyboardEvent) {
        this.sntButtonKeyDown.emit(keyboardEvent);
    }
    handleClick(clickEvent) {
        this.sntButtonClick.emit(clickEvent);
    }
    componentWillLoad() {
        if (StringUtils.hasValue(this.leftIconSources)) {
            this.leftIconJson = JSON.parse(this.leftIconSources);
        }
        if (StringUtils.hasValue(this.rightIconSources)) {
            this.rightIconJson = JSON.parse(this.rightIconSources);
        }
    }
    componentDidLoad() {
        if (this.leftIconJson || this.rightIconJson) {
            LazyLoadIntersectionObserverManager.getInstance().observe(this.element);
        }
    }
    render() {
        const iconContent = this.buildIconContent();
        const discountContent = this.buildDiscountContent();
        const linkContent = this.buildLinkContent();
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("a", { href: this.href, "aria-label": this.ariaLabel, target: this.target, id: this.linkId }, h("div", { class: `link-panel ${StringUtils.isEmpty(this.discountText)
                ? ""
                : "discount"}` }, discountContent, h("div", { class: "content-panel" }, iconContent, h("h4", { class: "link-text" }, linkContent))))));
    }
    buildLinkContent() {
        let content = h("span", null, this.ctaText);
        if (this.target === "_blank" && StringUtils.hasValue(this.href)) {
            let title = AccessibilityUtils.getNewWindowTitle();
            let text = AccessibilityUtils.getNewWindowText();
            content = [
                this.ctaText,
                h("span", { class: "icon-font icon-new-window", title: title }, h("span", { class: "sr-only" }, " ", text)),
            ];
        }
        return content;
    }
    buildDiscountContent() {
        if (StringUtils.isEmpty(this.discountText)) {
            return null;
        }
        return h("div", { class: "discount-panel" }, this.discountText);
    }
    buildIconContent() {
        if (!this.leftIconJson && !this.rightIconJson) {
            return null;
        }
        else if (!this.leftIconJson || !this.rightIconJson) {
            const iconSources = this.leftIconJson || this.rightIconJson;
            return (h("div", { class: "icon-panel" }, this.buildPictureContent(iconSources.largeIconUrl, iconSources.smallIconUrl)));
        }
        else {
            return (h("div", { class: "icon-panel" }, this.buildPictureContent(this.leftIconJson.largeIconUrl, this.leftIconJson.smallIconUrl), h("div", { class: "icon plus-sign" }, h("i", { class: "icon-font iconPlus" })), this.buildPictureContent(this.rightIconJson.largeIconUrl, this.rightIconJson.smallIconUrl)));
        }
    }
    buildPictureContent(largeIconUrl, smallIconUrl) {
        return (h("div", { class: "icon" }, h("picture", { class: "icon-image" }, h("source", { "data-srcSet": largeIconUrl, media: "(min-width: 1024px)" }), h("source", { "data-srcSet": smallIconUrl, media: "(min-width: 0px)" }), h("img", { class: "icon-image", src: "", "data-src": "", alt: "", "aria-hidden": "true" }))));
    }
    get element() { return getElement(this); }
    static get style() { return enhancedButtonComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-enhanced-button",
        "$members$": {
            "styleClasses": [513, "style-classes"],
            "discountText": [1, "discount-text"],
            "ctaText": [1, "cta-text"],
            "href": [1],
            "target": [1],
            "ariaLabel": [1, "aria-label"],
            "leftIconSources": [1, "left-icon-sources"],
            "rightIconSources": [1, "right-icon-sources"],
            "linkId": [1, "link-id"]
        },
        "$listeners$": [[0, "keydown", "handleKeyDown"], [0, "click", "handleClick"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}
EnhancedButtonComponent.TAG_NAME = "snt-enhanced-button";

const faqBlockComponentCss = "snt-faq-block{height:100%}snt-faq-block .faq-block-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;padding:20px 20px;-webkit-box-shadow:0 2px 10px #e5e5e5;box-shadow:0 2px 10px #e5e5e5;-webkit-box-sizing:border-box;box-sizing:border-box}snt-faq-block h3{text-align:center;color:#323232}snt-faq-block .faq-block-body,snt-faq-block .faq-articles-count{color:#323232;font-size:14px;line-height:23px;text-align:center;margin-top:19px}snt-faq-block .faq-block-body{-ms-flex:1 1 auto;flex:1 1 auto}snt-faq-block a{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;text-decoration:none}snt-faq-block a:focus,snt-faq-block a:active,snt-faq-block a:hover{border:none;outline:none;text-decoration:none}snt-faq-block a:focus .faq-block-wrapper,snt-faq-block a:active .faq-block-wrapper,snt-faq-block a:hover .faq-block-wrapper{background-color:#147582}snt-faq-block a:focus .faq-block-body,snt-faq-block a:focus .faq-articles-count,snt-faq-block a:focus h3,snt-faq-block a:active .faq-block-body,snt-faq-block a:active .faq-articles-count,snt-faq-block a:active h3,snt-faq-block a:hover .faq-block-body,snt-faq-block a:hover .faq-articles-count,snt-faq-block a:hover h3{color:#ffffff}@media (min-width: 768px){snt-faq-block .faq-block-wrapper{padding:40px 20px;-webkit-box-shadow:0 2px 10px #e5e5e5;box-shadow:0 2px 10px #e5e5e5}snt-faq-block .faq-block-body,snt-faq-block .faq-articles-count{margin-top:20px}}@media (min-width: 1024px){snt-faq-block .faq-block-wrapper{padding:60px 30px;-webkit-box-shadow:0 2px 10px #e5e5e5;box-shadow:0 2px 10px #e5e5e5}snt-faq-block .faq-block-body,snt-faq-block .faq-articles-count{font-size:16px;line-height:26px}snt-faq-block .faq-block-body{margin-top:22px}snt-faq-block .faq-articles-count{margin-top:30px}}@media (min-width: 1440px){snt-faq-block .faq-block-wrapper{padding:60px 30px;-webkit-box-shadow:0 2px 10px #e5e5e5;box-shadow:0 2px 10px #e5e5e5}snt-faq-block .faq-block-body,snt-faq-block .faq-articles-count{font-size:16px;line-height:26px;margin-top:30px}}";

class FAQBlockComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.titleText = "";
        this.bodyText = "";
        this.articlesCount = "";
        this.blockLink = "";
    }
    render() {
        return [
            h("a", { href: this.blockLink }, h("div", { class: "faq-block-wrapper" }, h("h3", null, this.titleText), h("div", { class: "faq-block-body" }, this.bodyText), h("div", { class: "faq-articles-count" }, this.articlesCount)))
        ];
    }
    static get style() { return faqBlockComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-faq-block",
        "$members$": {
            "titleText": [513, "title-text"],
            "bodyText": [513, "body-text"],
            "articlesCount": [513, "articles-count"],
            "blockLink": [513, "block-link"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleText", "title-text"], ["bodyText", "body-text"], ["articlesCount", "articles-count"], ["blockLink", "block-link"]]
    }; }
}
FAQBlockComponent.TAG_NAME = "snt-faq-block";

class FAQBlockExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        var faqBlocks = [
            { "titleText": "Quoting", "bodyText": "Step-by-step help and troubleshooting tips for home and auto quotes.", "articlesCount": "32 articles" },
            { "titleText": "Purchasing", "bodyText": "Buying your property, from start to finish.", "articlesCount": "12 articles" },
            { "titleText": "Account", "bodyText": "Set up, login and navigate your account", "articlesCount": "23 articles" },
            { "titleText": "Policy & coverages", "bodyText": "Learn about documents, what we do and don't cover, making changes", "articlesCount": "45 articles" },
            { "titleText": "Payments", "bodyText": "How to pay, when to pay and what to do if you miss your payment.", "articlesCount": "15 articles" },
            { "titleText": "Claims", "bodyText": "What you are covered for and what to do before during and after your claim.", "articlesCount": "03 articles" },
            { "titleText": "Quoting", "bodyText": "Step-by-step help and troubleshooting tips for home and auto quotes.", "articlesCount": "29 articles" },
            { "titleText": "Quoting", "bodyText": "Step-by-step help and troubleshooting tips for home and auto quotes.", "articlesCount": "11 articles" }
        ];
        console.log(faqBlocks);
        return [
            h("snt-faq-block", { "title-text": 'Quoting', "body-text": 'Step-by-step help and troubleshooting tips for home and auto quotes.', "articles-count": '32 articles' }),
            h("div", null, h("br", null), h("div", null, "This is FAQ block list"), h("br", null), h("snt-faq-block-list", { faqBlockList: faqBlocks }))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "faq-block-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const faqBlockListComponentCss = "";

var __awaiter$a = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class FAQBlockListComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.faqBlockList = [];
        this.menuAriaLabel = "";
    }
    componentDidRender() {
        return __awaiter$a(this, void 0, void 0, function* () {
            const layout = this.multiColumnEl.querySelector('snt-layout');
            yield this.multiColumnEl.tagLastRow(layout.getAttribute('viewport'));
            yield this.multiColumnEl.setColumns();
        });
    }
    render() {
        const columnJson = '{"extra-small": 1,"small": 1,"medium": 2,"large": 3,"extra-large": 3}';
        return [
            h("snt-multi-column-mixed", { ref: (el) => (this.multiColumnEl = el), "aria-label": this.menuAriaLabel, class: "with-gutter", "column-count": columnJson }, this.faqBlockList.map((item) => (h("div", { class: "column" }, h("snt-faq-block", { "title-text": item.titleText, "body-text": item.bodyText, "block-link": item.blockLink, "articles-count": item.articlesCount }))))),
        ];
    }
    get host() { return getElement(this); }
    static get style() { return faqBlockListComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-faq-block-list",
        "$members$": {
            "faqBlockList": [16],
            "menuAriaLabel": [513, "menu-aria-label"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["menuAriaLabel", "menu-aria-label"]]
    }; }
}
FAQBlockListComponent.TAG_NAME = "snt-faq-block-list";

const faqFilterSliderComponentCss = "snt-faq-filter-slider.float-fill,.float-fill snt-faq-filter-slider{display:block;background-color:#f8f8f8;color:#323232}snt-faq-filter-slider.float-fill .filter-container,.float-fill snt-faq-filter-slider .filter-container{background-color:#ffffff}snt-faq-filter-slider .wrapper{position:relative;overflow:hidden;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;margin:0 auto 20px}snt-faq-filter-slider .right-gradient{position:absolute;pointer-events:none;right:0px;top:0px;width:21px;height:45px;z-index:1;background-image:-webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), to(#ffffff));background-image:linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #ffffff 100%)}snt-faq-filter-slider .left-gradient{position:absolute;left:0px;top:0px;width:21px;height:45px;z-index:1;background-image:-webkit-gradient(linear, right top, left top, from(rgba(255, 255, 255, 0)), to(#ffffff));background-image:linear-gradient(270deg, rgba(255, 255, 255, 0) 0%, #ffffff 100%);pointer-events:none}snt-faq-filter-slider .filter-container{position:relative;width:100%;height:53px;line-height:43px;text-align:center;overflow-x:scroll;padding:0px;overflow-y:hidden;-webkit-overflow-scrolling:touch;margin-bottom:-10px;scrollbar-color:transparent transparent}snt-faq-filter-slider nav{width:100%}snt-faq-filter-slider ul{width:100%;list-style:none;display:inline-block;margin:0px 7px 0px 7px;padding:0px;overflow-y:hidden;overflow-x:scroll;height:53px;white-space:nowrap}snt-faq-filter-slider li{color:#323232;font-size:16px;letter-spacing:0;line-height:21px;overflow:hidden;display:-ms-inline-flexbox;display:inline-flex;justify-items:center;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-direction:column;flex-direction:column;padding:5px 13px}snt-faq-filter-slider a{color:#323232;font-size:16px;font-family:\"Averta-Regular\", Arial, Helvetica, sans-serif;letter-spacing:0;line-height:21px;width:auto;height:21px;text-decoration:none}snt-faq-filter-slider a:focus{display:inline;outline-offset:3px;outline:2px solid #147582}snt-faq-filter-slider a:hover{color:#147582;text-decoration:none !important;font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;font-weight:bold}snt-faq-filter-slider .bold-hidden{display:block;font-weight:bold;height:0;overflow:hidden;visibility:hidden}snt-faq-filter-slider a.active,snt-faq-filter-slider a:focus{position:relative;color:#147582;font-family:\"Averta-Regular\", Arial, Helvetica, sans-serif}snt-faq-filter-slider a.active{color:#323232}snt-faq-filter-slider a.active:hover{color:#147582 !important;text-decoration:none !important;font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;font-weight:bold}snt-faq-filter-slider a.active:after{content:\"\";position:absolute;bottom:0px;margin:0 auto;left:0;right:0;height:2px;width:100%;background:#147582}snt-faq-filter-slider ::-webkit-scrollbar{width:0px;background:transparent;}snt-faq-filter-slider li:first-child{margin-left:30px}snt-faq-filter-slider li:last-child{margin-right:30px}snt-faq-filter-slider snt-layout[viewport=small] .spacings{padding-left:0px !important;padding-right:0px !important}snt-faq-filter-slider snt-layout[viewport=medium] .right-gradient{width:100px}snt-faq-filter-slider snt-layout[viewport=medium] .left-gradient{width:100px}snt-faq-filter-slider snt-layout[viewport=medium] li:first-child{margin-left:75px}snt-faq-filter-slider snt-layout[viewport=medium] li:last-child{margin-right:75px}snt-faq-filter-slider.hide-desktop snt-layout[viewport=large] .wrapper{display:none}snt-faq-filter-slider.hide-desktop snt-layout[viewport=extra-large] .wrapper{display:none}snt-faq-filter-slider .hide{display:none}";

class FAQFilterSliderComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.faqFilterClick = createEvent(this, "faqFilterClick", 7);
    }
    onFilterClick(filterKey) {
        if (this.currentActive !== filterKey) {
            this.currentActive = filterKey;
            this.faqFilterClick.emit(filterKey);
        }
    }
    componentWillRender() {
        try {
            this._filterArr = JSON.parse(this.filterItems);
        }
        catch (e) {
            console.log(`Error parsing filterItems: ${this.filterItems}`);
        }
        if (StringUtils.isEmpty(this.currentActive)) {
            this.currentActive = this._filterArr.length != 0 ? this._filterArr[0].key : "";
        }
    }
    render() {
        return [
            h("host", { class: this._filterArr.length === 0 ? "hide" : "" }, h("snt-layout", null, h("div", { class: "wrapper" }, h("div", { class: "right-gradient" }), h("div", { class: "left-gradient" }), h("div", { class: "filter-container" }, h("nav", { "aria-label": this.menuAriaLabel }, h("ul", null, this._filterArr.map(item => (h("li", null, h("a", { href: "javascript:void(0)", class: item.key == this.currentActive ? "active" : "", onClick: this.onFilterClick.bind(this, item.key) }, item.title), h("span", { class: "bold-hidden" }, item.title))))))))))
        ];
    }
    static get style() { return faqFilterSliderComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-faq-filter-slider",
        "$members$": {
            "filterItems": [513, "filter-items"],
            "menuAriaLabel": [1, "menu-aria-label"],
            "currentActive": [513, "current-active"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["filterItems", "filter-items"], ["currentActive", "current-active"]]
    }; }
}
FAQFilterSliderComponent.TAG_NAME = "snt-faq-filter-slider";

class FAQFiltersliderExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        var filterItems = '[ { "key": "all", "title": "All" }, { "key": "propertyInsurance", "title": "Home" } , { "key": "autoInsurance", "title": "Auto" } , { "key": "other", "title": "Other" }, { "key": "inYourWallet", "title": "In your wallet" } ]';
        return [
            h("div", null, h("snt-faq-filter-slider", { filterItems: filterItems }), h("div", { id: "viewMobile" }, h("div", null, h("h3", null, "On mobile")), h("div", null, h("snt-faq-filter-slider", { filterItems: filterItems }))), " ", h("br", null), " ", h("br", null), h("br", null), h("div", { id: "viewTablet" }, h("div", null, h("h3", null, "On tablet")), h("div", null, h("snt-faq-filter-slider", { filterItems: filterItems }))))
        ];
    }
    static get style() { return "#viewMobile{\n        width: 320px;\n    }\n    #viewTablet{\n        width: 694px;\n    }"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "faq-filter-slider-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const faqPaginationComponentCss = "snt-pagination .pagination-container{border-top:1px #147582 solid;padding-top:15px;max-width:260px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;line-height:21px;font-size:12px}snt-pagination .prev-link-wrapper{padding-left:4px;display:inline-block}snt-pagination .next-link-wrapper{padding-right:4px;display:inline-block}snt-pagination i.arrows{border-style:solid;border-width:0 1px 1px 0;display:inline-block;padding:3.5px}snt-pagination .left{transform:rotate(135deg);-webkit-transform:rotate(135deg)}snt-pagination .right{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}snt-pagination .page-number-wrapper{margin:0px 10px;display:inline-block}snt-pagination .desktop-page-numbers{display:none}snt-pagination a{text-decoration:none;color:#323232;line-height:21px;font-size:12px}snt-pagination a:hover{text-decoration:none;outline:none;color:#147582}snt-pagination a:hover .prev-link{text-decoration:underline}snt-pagination a:hover .next-link{text-decoration:underline}snt-pagination a:hover .page-number-wrapper .page-number{font-family:\"Averta-ExtraBold\";font-weight:500;color:#147582}snt-pagination a:focus{text-decoration:none;outline:none;color:#147582}snt-pagination a:focus .prev-link{outline:solid;outline-width:1px;outline-offset:2px;text-decoration:underline}snt-pagination a:focus .next-link{outline:solid;outline-width:1px;outline-offset:2px;text-decoration:underline}snt-pagination a:focus .page-number-outline{outline-style:solid;outline-width:1px;outline-offset:3px;outline-color:#147582}snt-pagination a:focus .page-number-outline .page-number{color:#147582;font-family:\"Averta-ExtraBold\";font-weight:500}snt-pagination a:focus:active .page-number-outline,snt-pagination a:focus:active.active .page-number-outline{outline:none}snt-pagination a:focus:active .page-number-outline .page-number,snt-pagination a:focus:active.active .page-number-outline .page-number{color:#147582;font-family:\"Averta-ExtraBold\";font-weight:500}snt-pagination a.active .page-number{color:#323232;border-bottom:2px #147582 solid}snt-pagination a.hidden{visibility:hidden}snt-pagination snt-layout[viewport=medium] .pagination-container{padding-top:30px;max-width:694px;line-height:20px;font-size:14px}snt-pagination snt-layout[viewport=medium] .page-number-wrapper{margin:0px 20px}snt-pagination snt-layout[viewport=medium] .mobile-page-numbers{display:none}snt-pagination snt-layout[viewport=medium] .desktop-page-numbers{display:block}snt-pagination snt-layout[viewport=medium] a{line-height:20px;font-size:14px}snt-pagination snt-layout[viewport=medium] i.arrows{padding:4.4px}snt-pagination snt-layout[viewport=large] .pagination-container{max-width:654px}snt-pagination snt-layout[viewport=extra-large] .pagination-container{max-width:800px}snt-pagination snt-layout[viewport=large] .pagination-container{padding-top:30px;line-height:21px;font-size:16px}snt-pagination snt-layout[viewport=large] .page-number-wrapper{margin:0px 10px}snt-pagination snt-layout[viewport=large] .mobile-page-numbers{display:none}snt-pagination snt-layout[viewport=large] .desktop-page-numbers{display:block}snt-pagination snt-layout[viewport=large] a{line-height:21px;font-size:16px}snt-pagination snt-layout[viewport=large] i.arrows{padding:4.4px}snt-pagination snt-layout[viewport=extra-large] .pagination-container{padding-top:30px;line-height:21px;font-size:16px}snt-pagination snt-layout[viewport=extra-large] .page-number-wrapper{margin:0px 10px}snt-pagination snt-layout[viewport=extra-large] .mobile-page-numbers{display:none}snt-pagination snt-layout[viewport=extra-large] .desktop-page-numbers{display:block}snt-pagination snt-layout[viewport=extra-large] a{line-height:21px;font-size:16px}snt-pagination snt-layout[viewport=extra-large] i.arrows{padding:4.4px}";

var __awaiter$b = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class FAQPaginationComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.pageChanged = createEvent(this, "pageChanged", 7);
        this.prevLinkLang = "Previous";
        this.nextLinkLang = "Next";
        this.pageNumLang = "of";
        this.pageNumAriaLang = "Page number";
        this.paginationNavLang = "FAQ page navigation";
        this.totalPages = 1;
        this.curr = 1;
        this.ellipsis = "...";
    }
    onPageNumberClick(pageNum) {
        if (this.curr !== pageNum) {
            this.curr = pageNum;
            this.pageChanged.emit(this.curr.toString());
        }
    }
    onPreviousClick() {
        if (this.curr > 1) {
            this.curr--;
            this.pageChanged.emit(this.curr.toString());
        }
    }
    onNextClick() {
        if (this.curr < this.totalPages) {
            this.curr++;
            this.pageChanged.emit(this.curr.toString());
        }
    }
    setPageNumber(pageNum, emitEvent = false) {
        return __awaiter$b(this, void 0, void 0, function* () {
            if (this.curr !== pageNum && pageNum >= 1 && pageNum <= this.totalPages) {
                this.curr = pageNum;
                if (emitEvent) {
                    this.pageChanged.emit(this.curr.toString());
                }
            }
        });
    }
    getPageLink(pageNum) {
        return h("a", { href: "javascript:void(0);", class: this.curr == pageNum ? "active" : "", onClick: this.onPageNumberClick.bind(this, pageNum), "aria-label": this.pageNumAriaLang + " " + pageNum }, h("div", { class: "page-number-wrapper" }, h("div", { class: "page-number-outline" }, h("span", { class: "page-number", "data-page": pageNum }, pageNum))));
    }
    getEllipsis() {
        return h("span", { class: "page-number" }, this.ellipsis);
    }
    getPageNumbersForDesktop() {
        let pageNumbersDesktop = [];
        let i = 1;
        let j = this.totalPages - 1;
        let addEndEllipsis = false;
        //Add first page
        pageNumbersDesktop.push(this.getPageLink(i));
        i++;
        //Add start ellipsis if required
        if (this.curr - 1 > 4) {
            i = this.curr - 2;
            pageNumbersDesktop.push(this.getEllipsis());
        }
        //Check if end ellipsis is required
        if (this.totalPages - this.curr > 4) {
            j = this.curr + 2;
            addEndEllipsis = true;
        }
        //Add current and middle pages
        while (i <= j) {
            pageNumbersDesktop.push(this.getPageLink(i));
            i++;
        }
        //Add end ellipsis if required
        if (addEndEllipsis) {
            pageNumbersDesktop.push(this.getEllipsis());
        }
        //Add last page
        if (this.totalPages > 1) {
            pageNumbersDesktop.push(this.getPageLink(this.totalPages));
        }
        return pageNumbersDesktop;
    }
    render() {
        let pageNumbersMobile = h("span", null, this.curr, " ", this.pageNumLang, " ", this.totalPages);
        let pageNumbersDesktop = this.getPageNumbersForDesktop();
        return [
            h("snt-layout", null, h("div", { class: "pagination-container", role: "navigation", "aria-label": this.paginationNavLang }, h("div", null, h("a", { href: "javascript:void(0);", class: this.curr > 1 ? "" : "hidden", onClick: this.onPreviousClick.bind(this) }, h("span", { class: "prev-icon", "aria-hidden": "true" }, h("i", { class: "arrows left" })), h("div", { class: "prev-link-wrapper" }, h("span", { class: "prev-link" }, this.prevLinkLang)))), h("div", null, h("div", { class: "desktop-page-numbers" }, pageNumbersDesktop), h("div", { class: "mobile-page-numbers" }, pageNumbersMobile)), h("div", null, h("a", { href: "javascript:void(0);", class: this.curr < this.totalPages ? "" : "hidden", onClick: this.onNextClick.bind(this) }, h("div", { class: "next-link-wrapper" }, h("span", { class: "next-link" }, this.nextLinkLang)), h("span", { class: "next-icon", "aria-hidden": "true" }, h("i", { class: "arrows right" }))))))
        ];
    }
    static get style() { return faqPaginationComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-pagination",
        "$members$": {
            "prevLinkLang": [513, "prev-link-lang"],
            "nextLinkLang": [513, "next-link-lang"],
            "pageNumLang": [513, "page-num-lang"],
            "pageNumAriaLang": [513, "page-num-aria-lang"],
            "paginationNavLang": [513, "pagination-nav-lang"],
            "totalPages": [514, "total-pages"],
            "curr": [2],
            "setPageNumber": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["prevLinkLang", "prev-link-lang"], ["nextLinkLang", "next-link-lang"], ["pageNumLang", "page-num-lang"], ["pageNumAriaLang", "page-num-aria-lang"], ["paginationNavLang", "pagination-nav-lang"], ["totalPages", "total-pages"]]
    }; }
}
FAQPaginationComponent.TAG_NAME = "snt-pagination";

class FAQPaginationExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("h4", null, "Pagination : Page 1"),
            h("snt-pagination", { "total-pages": 2, curr: 1 }),
            h("h4", null, "Pagination : Page 2"),
            h("snt-pagination", { "total-pages": 8, curr: 2 }),
            h("h4", null, "Pagination : Page 3"),
            h("snt-pagination", { "total-pages": 8, curr: 3 }),
            h("h4", null, "Pagination : Page 4"),
            h("snt-pagination", { "total-pages": 8, curr: 4 }),
            h("h4", null, "Pagination : Page 5"),
            h("snt-pagination", { "total-pages": 8, curr: 5 }),
            h("h4", null, "Pagination : Page 6"),
            h("snt-pagination", { "total-pages": 8, curr: 6 }),
            h("h4", null, "Pagination : Page 7"),
            h("snt-pagination", { "total-pages": 8, curr: 7 }),
            h("h4", null, "Pagination : Page 8"),
            h("snt-pagination", { "total-pages": 8, curr: 8 })
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "faq-pagination-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const featureLeftComponentCss = "snt-feature-left{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch}snt-feature-left .article-container{position:relative;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;height:308px;width:100%}snt-feature-left a{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;text-decoration:none;width:100%}snt-feature-left a:focus,snt-feature-left a:active,snt-feature-left a:hover{border:none;outline:none;text-decoration:none}snt-feature-left a:focus .article-container,snt-feature-left a:active .article-container,snt-feature-left a:hover .article-container{outline:5px solid #147582}snt-feature-left .article-img{height:174px}snt-feature-left .article-img img{-o-object-fit:cover;object-fit:cover;width:100%;height:174px}snt-feature-left snt-image{display:-ms-flexbox;display:flex;width:100%;height:100%}snt-feature-left .article-tag{position:absolute;background-color:#acdde4;color:#323232;font-family:\"Averta-ExtraBold\";font-weight:800;text-transform:uppercase;padding:9px 15px;top:147px;font-size:14px;line-height:22px}snt-feature-left .article-content{position:relative;padding:30px 15px}snt-feature-left .article-title{position:relative;color:#323232;text-align:left;font-size:14px;line-height:21px}snt-feature-left .article-min-read{position:absolute;color:#6f6f6f;font-family:\"Averta-Regular\";left:15px;bottom:15px;font-size:12px;line-height:18px}snt-feature-left .h4{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}[viewport=medium] snt-feature-left .article-container,snt-feature-left[viewport=medium] .article-container{height:308px}[viewport=medium] snt-feature-left .article-img,snt-feature-left[viewport=medium] .article-img{height:167px}[viewport=medium] snt-feature-left .article-img img,snt-feature-left[viewport=medium] .article-img img{height:167px}[viewport=medium] snt-feature-left .article-tag,snt-feature-left[viewport=medium] .article-tag{padding:9px 15px;top:147px;font-size:14px;line-height:22px}[viewport=medium] snt-feature-left .article-content,snt-feature-left[viewport=medium] .article-content{padding:15px}[viewport=medium] snt-feature-left .article-title,snt-feature-left[viewport=medium] .article-title{margin-top:15px;margin-bottom:auto}[viewport=large] snt-feature-left .article-container,snt-feature-left[viewport=large] .article-container{height:343px}[viewport=large] snt-feature-left .article-img,snt-feature-left[viewport=large] .article-img{height:186px}[viewport=large] snt-feature-left .article-img img,snt-feature-left[viewport=large] .article-img img{height:186px}[viewport=large] snt-feature-left .article-tag,snt-feature-left[viewport=large] .article-tag{padding:9px 20px 8px;top:166px;font-size:14px;line-height:23px}[viewport=large] snt-feature-left .article-content,snt-feature-left[viewport=large] .article-content{padding:20px}[viewport=large] snt-feature-left .article-title,snt-feature-left[viewport=large] .article-title{margin-top:10px;margin-bottom:auto}[viewport=large] snt-feature-left .article-title-text,snt-feature-left[viewport=large] .article-title-text{font-size:16px;line-height:21px}[viewport=large] snt-feature-left .article-min-read,snt-feature-left[viewport=large] .article-min-read{left:20px;bottom:20px;font-size:14px;line-height:20px}[viewport=extra-large] snt-feature-left .article-container,snt-feature-left[viewport=extra-large] .article-container{height:404px}[viewport=extra-large] snt-feature-left .article-img,snt-feature-left[viewport=extra-large] .article-img{height:248px}[viewport=extra-large] snt-feature-left .article-img img,snt-feature-left[viewport=extra-large] .article-img img{height:248px}[viewport=extra-large] snt-feature-left .article-tag,snt-feature-left[viewport=extra-large] .article-tag{padding:9px 20px 8px;top:228px;font-size:14px;line-height:23px}[viewport=extra-large] snt-feature-left .article-content,snt-feature-left[viewport=extra-large] .article-content{padding:20px}[viewport=extra-large] snt-feature-left .article-title,snt-feature-left[viewport=extra-large] .article-title{margin-top:10px;margin-bottom:auto;font-size:21px;line-height:26px}[viewport=extra-large] snt-feature-left .article-min-read,snt-feature-left[viewport=extra-large] .article-min-read{left:20px;bottom:20px;font-size:14px;line-height:20px}";

class FeatureLeftComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.imgSrcSet = StringUtils.empty();
        this.imgAltText = "";
        this.openInNewWindow = false;
    }
    render() {
        return [
            h("a", { href: this.blogLink, target: this.openInNewWindow ? "_blank" : "_self" }, h("div", { class: "article-container" }, h("div", { class: 'article-img' }, h("snt-image", { "data-src": this.imgSrc, "img-alt": this.imgAltText })), h("div", { class: 'article-tag' }, h("span", null, this.tagText)), h("div", { class: 'article-content' }, h("div", { class: "article-title" }, h("div", { class: "h4" }, this.titleText))), h("span", { class: "article-min-read" }, this.timeToRead)))
        ];
    }
    get hostElement() { return getElement(this); }
    static get style() { return featureLeftComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-feature-left",
        "$members$": {
            "imgSrc": [513, "img-src"],
            "imgSrcSet": [513, "img-src-set"],
            "titleText": [513, "title-text"],
            "timeToRead": [513, "time-to-read"],
            "tagText": [513, "tag-text"],
            "blogLink": [513, "blog-link"],
            "imgAltText": [513, "img-alt-text"],
            "openInNewWindow": [516, "open-in-new-window"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["imgSrc", "img-src"], ["imgSrcSet", "img-src-set"], ["titleText", "title-text"], ["timeToRead", "time-to-read"], ["tagText", "tag-text"], ["blogLink", "blog-link"], ["imgAltText", "img-alt-text"], ["openInNewWindow", "open-in-new-window"]]
    }; }
}
FeatureLeftComponent.TAG_NAME = "snt-feature-left";

class FeatureLeftExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.viewport = "";
    }
    render() {
        return [
            h("h1", null, "Feature Left Example"),
            h("h3", null, "HD Viewport"),
            h("host", { viewport: "extra-large" }, h("div", { class: "col-6" }, h("snt-feature-left", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Desktop Viewport"),
            h("host", { viewport: "large" }, h("div", { class: "col-5" }, h("snt-feature-left", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Tablet Viewport"),
            h("host", { viewport: "medium" }, h("div", { class: "col-4" }, h("snt-feature-left", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Mobile Viewport"),
            h("host", { viewport: "small" }, h("div", { class: "col-3" }, h("snt-feature-left", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "feature-left-example",
        "$members$": {
            "viewport": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["viewport", "viewport"]]
    }; }
}
FeatureLeftExample.TAG_NAME = "feature-left-example";

const featureRightComponentCss = "snt-feature-right{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch}snt-feature-right .article-container{position:relative;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;height:308px;width:100%}snt-feature-right a{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;text-decoration:none;width:100%}snt-feature-right a:focus,snt-feature-right a:active,snt-feature-right a:hover{border:none;outline:none;text-decoration:none}snt-feature-right a:focus .article-container,snt-feature-right a:active .article-container,snt-feature-right a:hover .article-container{outline:5px solid #147582}snt-feature-right .article-img{height:174px}snt-feature-right .article-img img{-o-object-fit:cover;object-fit:cover;width:100%;height:174px}snt-feature-right snt-image{display:-ms-flexbox;display:flex;width:100%;height:100%}snt-feature-right .article-tag{position:absolute;background-color:#acdde4;color:#323232;left:0px;font-family:\"Averta-ExtraBold\";font-weight:800;text-transform:uppercase;padding:9px 15px;top:147px;font-size:14px;line-height:22px}snt-feature-right .article-content{padding:30px 15px}snt-feature-right .article-title{position:relative;color:#323232;text-align:left;font-size:14px;line-height:21px}snt-feature-right .article-min-read{position:absolute;color:#6f6f6f;font-family:\"Averta-Regular\";left:15px;bottom:15px;font-size:12px;line-height:18px}snt-feature-right .h4{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}[viewport=medium] snt-feature-right .article-container,snt-feature-right[viewport=medium] .article-container{display:grid;grid-template-columns:0px auto;height:141px}[viewport=medium] snt-feature-right .article-tag,snt-feature-right[viewport=medium] .article-tag{top:0px;padding:9px 15px;font-size:14px;line-height:22px}[viewport=medium] snt-feature-right .article-content,snt-feature-right[viewport=medium] .article-content{padding:15px}[viewport=medium] snt-feature-right .article-title,snt-feature-right[viewport=medium] .article-title{margin-top:35px;margin-bottom:auto}[viewport=large] snt-feature-right .article-container,snt-feature-right[viewport=large] .article-container{display:grid;grid-template-columns:156px auto;height:156px}[viewport=large] snt-feature-right .article-img,snt-feature-right[viewport=large] .article-img{height:156px;width:156px}[viewport=large] snt-feature-right .article-img img,snt-feature-right[viewport=large] .article-img img{height:156px;width:156px}[viewport=large] snt-feature-right .article-tag,snt-feature-right[viewport=large] .article-tag{top:0px;padding:9px 20px 8px;font-size:14px;line-height:23px}[viewport=large] snt-feature-right .article-content,snt-feature-right[viewport=large] .article-content{position:relative;padding:20px}[viewport=large] snt-feature-right .article-title,snt-feature-right[viewport=large] .article-title{margin-top:30px;margin-bottom:auto}[viewport=large] snt-feature-right .article-title-text,snt-feature-right[viewport=large] .article-title-text{font-size:16px;line-height:21px}[viewport=large] snt-feature-right .article-min-read,snt-feature-right[viewport=large] .article-min-read{bottom:20px;font-size:14px;line-height:20px}[viewport=large] snt-feature-right .h4,snt-feature-right[viewport=large] .h4{-webkit-line-clamp:3}[viewport=extra-large] snt-feature-right .article-container,snt-feature-right[viewport=extra-large] .article-container{display:grid;grid-template-columns:187px auto;height:187px}[viewport=extra-large] snt-feature-right .article-img,snt-feature-right[viewport=extra-large] .article-img{height:187px;width:187px}[viewport=extra-large] snt-feature-right .article-img img,snt-feature-right[viewport=extra-large] .article-img img{height:187px;width:187px}[viewport=extra-large] snt-feature-right .article-tag,snt-feature-right[viewport=extra-large] .article-tag{top:0px;padding:9px 20px 8px;font-size:14px;line-height:23px}[viewport=extra-large] snt-feature-right .article-content,snt-feature-right[viewport=extra-large] .article-content{position:relative;padding:20px}[viewport=extra-large] snt-feature-right .article-title,snt-feature-right[viewport=extra-large] .article-title{margin-top:36.09px;margin-bottom:auto;font-size:16px;line-height:21px}[viewport=extra-large] snt-feature-right .article-min-read,snt-feature-right[viewport=extra-large] .article-min-read{bottom:26px;font-size:14px;line-height:20px}[viewport=extra-large] snt-feature-right .h4,snt-feature-right[viewport=extra-large] .h4{-webkit-line-clamp:3}";

class FeatureRightComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.imgSrcSet = StringUtils.empty();
        this.imgAltText = "";
        this.openInNewWindow = false;
    }
    render() {
        return [
            h("a", { href: this.blogLink, target: this.openInNewWindow ? "_blank" : "_self" }, h("div", { class: "article-container" }, h("div", { class: 'article-img' }, h("snt-image", { "data-src": this.imgSrc, "img-alt": this.imgAltText })), h("div", { class: 'article-content' }, h("div", { class: 'article-tag' }, h("span", null, this.tagText)), h("div", { class: "article-title" }, h("div", { class: "h4" }, this.titleText)), h("span", { class: "article-min-read" }, this.timeToRead))))
        ];
    }
    get hostElement() { return getElement(this); }
    static get style() { return featureRightComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-feature-right",
        "$members$": {
            "imgSrc": [513, "img-src"],
            "imgSrcSet": [513, "img-src-set"],
            "titleText": [513, "title-text"],
            "timeToRead": [513, "time-to-read"],
            "tagText": [513, "tag-text"],
            "blogLink": [513, "blog-link"],
            "imgAltText": [513, "img-alt-text"],
            "openInNewWindow": [516, "open-in-new-window"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["imgSrc", "img-src"], ["imgSrcSet", "img-src-set"], ["titleText", "title-text"], ["timeToRead", "time-to-read"], ["tagText", "tag-text"], ["blogLink", "blog-link"], ["imgAltText", "img-alt-text"], ["openInNewWindow", "open-in-new-window"]]
    }; }
}
FeatureRightComponent.TAG_NAME = "snt-feature-right";

class FeatureRightExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.viewport = "";
    }
    render() {
        return [
            h("h1", null, "Feature Right Example"),
            h("h3", null, "HD Viewport"),
            h("host", { viewport: "extra-large" }, h("div", { class: "col-6" }, h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Desktop Viewport"),
            h("host", { viewport: "large" }, h("div", { class: "col-5" }, h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Tablet Viewport"),
            h("host", { viewport: "medium" }, h("div", { class: "col-4" }, h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null),
            h("h3", null, "Mobile Viewport"),
            h("host", { viewport: "small" }, h("div", { class: "col-3" }, h("snt-feature-right", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", titleText: "What do you want to know about landlord insurance What do you want to know about landlord insurance What do you want to know about landlord insurance", tagText: "at home", timeToRead: "5 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" })))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "feature-right-example",
        "$members$": {
            "viewport": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["viewport", "viewport"]]
    }; }
}
FeatureRightExample.TAG_NAME = "feature-right-example";

const footerComponentCss = "snt-footer{display:-ms-flexbox;display:flex;width:100%;-ms-flex-flow:column wrap;flex-flow:column wrap}snt-footer .footer{max-width:1440px;width:100%;margin:auto;background-color:#ffffff;border-top:1px solid #323232}snt-footer .col{-webkit-box-sizing:border-box;box-sizing:border-box}snt-footer .col:first-child,snt-footer .col:nth-child(3){padding:0 !important}snt-footer .h5{margin-bottom:0.938em;font-size:1em;line-height:1;display:inline-block;width:100%}@media (max-width: 768px){snt-footer .col:nth-child(3),snt-footer .col:nth-child(4){margin-top:30px}}snt-footer snt-layout[viewport=medium] .col,snt-footer snt-layout[viewport=small] .col,snt-footer snt-layout[viewport=extra-small] .col{margin-top:40px;padding:0}snt-footer .footer-actions snt-nav-item:last-child{display:inline-block;padding-bottom:40px}snt-footer snt-layout[viewport=medium] .h5{margin-bottom:1.25em}snt-footer snt-layout[viewport=large] .h5{margin-bottom:1.563em}snt-footer snt-layout[viewport=large] .footer-actions snt-nav-item:last-child{padding-bottom:60px}snt-footer snt-layout[viewport=extra-large] .h5{margin-bottom:1.875em}snt-footer snt-layout[viewport=extra-large] .footer-actions snt-nav-item:last-child{padding-bottom:60px}snt-footer snt-link,snt-footer snt-link a{line-height:1.2}snt-footer snt-nav-item{padding-bottom:0.625em;width:100%;text-align:left}snt-footer snt-nav-item snt-link a{font-size:0.875em;color:#323232;padding:0;text-decoration:none;background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#147582), to(#147582));background-image:linear-gradient(transparent, transparent), linear-gradient(#147582, #147582);background-size:100% 1px, 0 1px;background-position:100% 100%, 1px 100%;background-repeat:no-repeat}snt-footer snt-nav-item snt-link a .icon-new-window:before{color:#323232}snt-footer snt-nav-item snt-link a:focus,snt-footer snt-nav-item snt-link a:focus-within,snt-footer snt-nav-item snt-link a:hover{color:#147582;background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#147582), to(#147582));background-image:linear-gradient(transparent, transparent), linear-gradient(#147582, #147582)}snt-footer snt-nav-item snt-link a:focus .icon-new-window:before,snt-footer snt-nav-item snt-link a:focus-within .icon-new-window:before,snt-footer snt-nav-item snt-link a:hover .icon-new-window:before{color:#147582}snt-footer snt-nav-item snt-link a:focus{outline:1px solid #147582}snt-footer .nav-link{padding:0;position:relative}snt-footer .nav-link span.icon-font{position:relative;right:0}.footer-row{border-top:1px solid #6f6f6f;border-bottom:1px solid #6f6f6f;margin-bottom:1.875em;padding-top:10px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0 !important}.footer-row .col-md-12{padding-left:0}.footer-row snt-nav{-ms-flex-direction:row;flex-direction:row}.footer-row snt-nav-item{display:inline;line-height:1;padding-right:30px}.footer-row snt-nav-item a{font-size:0.75em}.footer-legal{padding:0 !important;margin:0}.footer-legal p2,.footer-legal p{font-size:12px;line-height:1.5;display:table;margin-bottom:0.475em}.footer-legal a{font-size:12px}@media (max-width: 768px){snt-footer a{margin-bottom:9px}}@media (max-width: 576px){.footer-row snt-nav{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:baseline;align-items:baseline}}.legal_copy{display:none}";

class FooterComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    render() {
        return (h("div", { class: WebUtils.generateClasses(["footer"], this.styleClasses) }, h("snt-layout", null, h("slot", null))));
    }
    get element() { return getElement(this); }
    static get style() { return footerComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-footer",
        "$members$": {
            "styleClasses": [1, "style-classes"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
FooterComponent.TAG_NAME = "snt-footer";

class FooterExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("snt-footer", null, h("div", { class: "container" }, h("snt-layout", null, h("div", { class: "footer-actions" }, h("div", { class: "row" }, h("div", { class: "col-sm" }, h("span", { class: "h5" }, "Get Insurance"), h("snt-nav", null, h("snt-nav-item", { href: "?insurance", target: "_self", "link-title": "Insurance" }), h("snt-nav-item", { href: "?auto-insurance", target: "_self", "link-title": "Auto" }), h("snt-nav-item", { href: "?home-insurance", target: "_self", "link-title": "Home" }), h("snt-nav-item", { href: "?Condo-insurance", target: "_self", "link-title": "Condo" }), h("snt-nav-item", { href: "?tenant-insurance", target: "_self", "link-title": "Tenant" }), h("snt-nav-item", { href: "?Landlord-insurance", target: "_self", "link-title": "Landlord" }), h("snt-nav-item", { href: "?Pet-insurance", target: "_self", "link-title": "Pet" }), h("snt-nav-item", { href: "?Claims", target: "_self", "link-title": "Claims" }), h("snt-nav-item", { href: "?get-quote", target: "_self", "link-title": "Get a quote" }), h("snt-nav-item", { href: "?cancellation-calculator", target: "_self", "link-title": "Cancellation Calculator" }))), h("div", { class: "col-sm" }, h("span", { class: "h5" }, "Learn More"), h("snt-nav", null, h("snt-nav-item", { href: "?sonnet-connect", target: "_self", "link-title": "Sonnet Connect" }), h("snt-nav-item", { href: "?blog", target: "_self", "link-title": "Blog" }), h("snt-nav-item", { href: "?faq", target: "_self", "link-title": "FAQs" }), h("snt-nav-item", { href: "?partner-offers", target: "_self", "link-title": "Partner Offers" }), h("snt-nav-item", { href: "?news", target: "_self", "link-title": "News" }))), h("div", { class: "col-sm" }, h("span", { class: "h5" }, "Get in Touch"), h("snt-nav", null, h("snt-nav-item", { href: "?about-us", target: "_self", "link-title": "About Us" }), h("snt-nav-item", { href: "?contact-us", target: "_self", "link-title": "Contact Us" }), h("snt-nav-item", { href: "?group-insurance", target: "_self", "link-title": "Group Insurance" }), h("snt-nav-item", { href: "?stay-in-touch", target: "_self", "link-title": "Stay in Touch" }), h("snt-nav-item", { href: "?join-us", target: "_self", "link-title": "Join Us" }))), h("div", { class: "col-sm" }, h("span", { class: "h5" }, "Social"), h("snt-nav", null, h("snt-nav-item", { href: "https://www.twitter.com/", target: "_blank", "link-title": "Twitter" }), h("snt-nav-item", { href: "https://www.facebook.com/", target: "_blank", "link-title": "Facebook" }), h("snt-nav-item", { href: "https://www.linkedin.com/", target: "_blank", "link-title": "LinkedIn" }), h("snt-nav-item", { href: "https://www.linkedin.com/", target: "_blank", "link-title": "Instagram" }), h("snt-nav-item", { href: "https://www.youtube.com/", target: "_blank", "link-title": "YouTube" }))))), h("div", { class: "footer-row" }, h("div", { class: "row" }, h("div", { class: "col-md-12 " }, h("snt-nav", { styleClasses: "d-flex flex-row" }, h("snt-nav-item", { href: "?terms-of-use", target: "_self", "link-title": "Terms of Use" }), h("snt-nav-item", { href: "?recurring-payment-agreement", target: "_self", "link-title": "Recurring Payment Agreement" }), h("snt-nav-item", { href: "?privacy", target: "_self", "link-title": "Privacy" }), h("snt-nav-item", { href: "?site-map", target: "_self", "link-title": "Site Map" }), h("snt-nav-item", { href: "action:Action.languageToggle", target: "_self", "link-title": "Francais" }))))), h("div", { class: "footer-legal" }, h("p2", null, "\u00A9\uFE0F2020 Sonnet Insurance. Sonnet Insurance\u00AE\uFE0F All trademarks used herein are owned by the respective entities. All rights reserved. Policies underwritten by Sonnet Insurance Company."), h("p2", null, "Sonnet Insurance Company (registration number 200043453) is registered with Autorit\u00E9 des marches financiers to offer property and automobile insurance. The Autorit\u00E9 des marches financiers registers are available at ", h("snt-link", { target: "_blank", href: "https://lautorite.qc.ca/en/general-public/about-the-amf/information-access" }, "https://lautorite.qc.ca/en/general-public/about-the-amf/information-access")), h("p2", null, "The 5 minutes to get insured is based on the average Sonnet customer experience. Always refer to your insurance policy for information about your coverage, including limits, deductibles, and exclusions. In case of discrepancy, the insurance contract prevails over general information available on this site. Any policy related changes made on this site will not be effective until you receive confirmation."), h("p2", null, "The Sonnet customer satisfaction score is based on the average survey results of Economical Insurance respondents between January to December 2018."), h("legal-component", null)))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "footer-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
FooterExample.TAG_NAME = "footer-example";

class FooterExample$1 {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        document.querySelectorAll('.additionalLegalCopy').forEach(function (elem) {
            let legalParagraph = document.createElement('p');
            legalParagraph.innerHTML = elem.innerHTML;
            if (document.getElementById('secondary_legal'))
                document.getElementById('secondary_legal').appendChild(legalParagraph);
        });
    }
    render() {
        return [
            h("p2", { id: 'secondary_legal' }, " ")
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "legal-component",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
FooterExample$1.TAG_NAME = "legal-component";

var PaddingDirectionEnum;
(function (PaddingDirectionEnum) {
    PaddingDirectionEnum["PADDING_TOP"] = "padding-top";
    PaddingDirectionEnum["PADDING_BOTTOM"] = "padding-bottom";
    PaddingDirectionEnum["PADDING_RIGHT"] = "padding-right";
    PaddingDirectionEnum["PADDING_LEFT"] = "padding-left";
})(PaddingDirectionEnum || (PaddingDirectionEnum = {}));
var ScrollDirectionEnum;
(function (ScrollDirectionEnum) {
    ScrollDirectionEnum["HORIZONTAL"] = "x";
    ScrollDirectionEnum["VERTICAL"] = "y";
})(ScrollDirectionEnum || (ScrollDirectionEnum = {}));
class DomUtils {
    static getScrollbarSize(scrollDirection) {
        if (scrollDirection == ScrollDirectionEnum.HORIZONTAL) {
            return window.innerHeight - document.documentElement.clientHeight;
        }
        else if (scrollDirection == ScrollDirectionEnum.VERTICAL) {
            return window.innerWidth - document.documentElement.clientWidth;
        }
        else {
            throw new Error(`${scrollDirection} is not a valid scroll direction.`);
        }
    }
    static setScrollbarPaddingReplacement(scrollbarPaddingReplacement = true, scrollDirection) {
        if (scrollDirection == ScrollDirectionEnum.HORIZONTAL ||
            scrollDirection == ScrollDirectionEnum.VERTICAL) {
            const paddingMap = new Map([
                [ScrollDirectionEnum.VERTICAL, PaddingDirectionEnum.PADDING_RIGHT],
                [ScrollDirectionEnum.HORIZONTAL, PaddingDirectionEnum.PADDING_BOTTOM]
            ]), paddingDirection = paddingMap.get(scrollDirection);
            if (scrollbarPaddingReplacement) {
                document.body.style[paddingDirection] = DomUtils.getScrollbarSize(scrollDirection) + 'px';
            }
            else {
                document.body.style[paddingDirection] = '0px';
            }
        }
        else {
            throw new Error(`${scrollDirection} is not a valid scroll direction.`);
        }
    }
    static hasValidStringAttribute(element, attributeName) {
        return ((element.hasAttribute(attributeName) && (StringUtils.notEmpty(element.getAttribute(attributeName)))));
    }
    static attachHandler(element, eventName, fn) {
        if (element.addEventListener) {
            element.addEventListener(eventName, fn, false);
        }
    }
    ;
}

var FormAttributes;
(function (FormAttributes) {
    FormAttributes["DATA_FORM_ATTRIBUTE_NAME"] = "data-form";
    FormAttributes["DATA_FIELD_ATTRUBITE_NAME"] = "data-field";
    FormAttributes["DATA_FORM_METHOD_ATTRIBUTE_NAME"] = "data-form-method";
    FormAttributes["DATA_FORM_ACTION_ATTRIBUTE_NAME"] = "data-form-action";
    FormAttributes["DATA_NO_ONBLUR_ATTRIBUTE_NAME"] = "data-no-onblur";
    FormAttributes["DATA_ONCHANGE_BLANK_ATTRIBUTE_NAME"] = "data-onchange-blank";
    FormAttributes["DATA_ERROR_ATTRIBUTE_NAME"] = "data-error";
    FormAttributes["DATA_ERROR_MESSAGE_ATTRIBUTE_NAME"] = "data-error-message";
    FormAttributes["DATA_FOR_ATTRIBUTE_NAME"] = "data-for";
    FormAttributes["DATA_SPECIAL_CHARACTERS_ATTRIBUTE_NAME"] = "data-special-character";
    FormAttributes["DATA_EMPTY_VALUE_ATTRIBUTE_NAME"] = "data-empty-value";
    FormAttributes["DATA_MIN_LENGTH_ATTRIBUTE_NAME"] = "data-min-length";
    FormAttributes["DATA_MAX_LENGTH_ATTRIBUTE_NAME"] = "data-max-length";
    FormAttributes["DATA_EMAIL_ATTRIBUTE_NAME"] = "data-email";
    FormAttributes["DATA_PHONE_ATTRIBUTE_NAME"] = "data-phone";
    FormAttributes["DATA_ARIA_TEXT_ATTRIBUTE_NAME"] = "data-aria-text";
    FormAttributes["DATA_EMAIL_CONFIRMATION_NAME"] = "data-email-confirmation";
    FormAttributes["DATA_DATE_FORMAT_ATTRIBUTE_NAME"] = "data-date-format";
    FormAttributes["DATA_CURRENCY_FORMAT_ATTRIBUTE_NAME"] = "data-currency-format";
    FormAttributes["DATA_DATE_PAST_ATTRIBUTE_NAME"] = "data-date-past";
    FormAttributes["DATA_DATE_PRECEEDS_ONE_YEAR"] = "data-date-preceeds-one-year";
    FormAttributes["DATA_DATE_EXCEEDS_ONE_YEAR_TODAY"] = "data-date-exceeds-one-year-today";
    FormAttributes["DATA_DATE_EXCEEDS"] = "data-date-exceeds";
})(FormAttributes || (FormAttributes = {}));

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, basedir, module) {
	return module = {
	  path: basedir,
	  exports: {},
	  require: function (path, base) {
    return commonjsRequire();
  }
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var squirrelly_min = createCommonjsModule(function (module, exports) {
!function(e,t){t(exports);}(commonjsGlobal,(function(e){function t(e){var n,r,a=new Error(e);return n=a,r=t.prototype,Object.setPrototypeOf?Object.setPrototypeOf(n,r):n.__proto__=r,a}function n(e,n,r){var a=n.slice(0,r).split(/\n/),i=a.length,s=a[i-1].length+1;throw t(e+=" at line "+i+" col "+s+":\n\n  "+n.split(/\n/)[i-1]+"\n  "+Array(s).join(" ")+"^")}t.prototype=Object.create(Error.prototype,{name:{value:"Squirrelly Error",enumerable:!1}});var r=new Function("return this")().Promise,a=!1;try{a=new Function("return (async function(){}).constructor")();}catch(e){if(!(e instanceof SyntaxError))throw e}function i(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function s(e,t,n){for(var r in t)i(t,r)&&(null==t[r]||"object"!=typeof t[r]||"storage"!==r&&"prefixes"!==r||n?e[r]=t[r]:e[r]=s({},t[r]));return e}var c=/^async +/,o=/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\${)[^\\`])*`/g,l=/'(?:\\[\s\w"'\\`]|[^\n\r'\\])*?'/g,f=/"(?:\\[\s\w"'\\`]|[^\n\r"\\])*?"/g,u=/[.*+\-?^${}()|[\]\\]/g;function p(e){return u.test(e)?e.replace(u,"\\$&"):e}function h(e,r){r.rmWhitespace&&(e=e.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),o.lastIndex=0,l.lastIndex=0,f.lastIndex=0;var a=r.prefixes,i=[a.h,a.b,a.i,a.r,a.c,a.e].reduce((function(e,t){return e&&t?e+"|"+p(t):t?p(t):e}),""),s=new RegExp("([|()]|=>)|('|\"|`|\\/\\*)|\\s*((\\/)?(-|_)?"+p(r.tags[1])+")","g"),u=new RegExp("([^]*?)"+p(r.tags[0])+"(-|_)?\\s*("+i+")?\\s*","g"),h=0,d=!1;function g(t,a){var i,p={f:[]},g=0,v="c";function m(t){var a=e.slice(h,t),i=a.trim();if("f"===v)"safe"===i?p.raw=!0:r.async&&c.test(i)?(i=i.replace(c,""),p.f.push([i,"",!0])):p.f.push([i,""]);else if("fp"===v)p.f[p.f.length-1][1]+=i;else if("err"===v){if(i){var s=a.search(/\S/);n("invalid syntax",e,h+s);}}else p[v]=i;h=t+1;}for("h"===a||"b"===a||"c"===a?v="n":"r"===a&&(p.raw=!0,a="i"),s.lastIndex=h;null!==(i=s.exec(e));){var y=i[1],x=i[2],b=i[3],w=i[4],F=i[5],S=i.index;if(y)"("===y?(0===g&&("n"===v?(m(S),v="p"):"f"===v&&(m(S),v="fp")),g++):")"===y?0===--g&&"c"!==v&&(m(S),v="err"):0===g&&"|"===y?(m(S),v="f"):"=>"===y&&(m(S),h+=1,v="res");else if(x){if("/*"===x){var I=e.indexOf("*/",s.lastIndex);-1===I&&n("unclosed comment",e,i.index),s.lastIndex=I+2;}else if("'"===x){l.lastIndex=i.index,l.exec(e)?s.lastIndex=l.lastIndex:n("unclosed string",e,i.index);}else if('"'===x){f.lastIndex=i.index,f.exec(e)?s.lastIndex=f.lastIndex:n("unclosed string",e,i.index);}else if("`"===x){o.lastIndex=i.index,o.exec(e)?s.lastIndex=o.lastIndex:n("unclosed string",e,i.index);}}else if(b)return m(S),h=S+i[0].length,u.lastIndex=h,d=F,w&&"h"===a&&(a="s"),p.t=a,p}return n("unclosed tag",e,t),p}var v=function i(s,o){s.b=[],s.d=[];var l,f=!1,p=[];function v(e,t){e&&(e=function(e,t,n,r){var a,i;return "string"==typeof t.autoTrim?a=i=t.autoTrim:Array.isArray(t.autoTrim)&&(a=t.autoTrim[1],i=t.autoTrim[0]),(n||!1===n)&&(a=n),(r||!1===r)&&(i=r),"slurp"===a&&"slurp"===i?e.trim():("_"===a||"slurp"===a?e=String.prototype.trimLeft?e.trimLeft():e.replace(/^[\s\uFEFF\xA0]+/,""):"-"!==a&&"nl"!==a||(e=e.replace(/^(?:\n|\r|\r\n)/,"")),"_"===i||"slurp"===i?e=String.prototype.trimRight?e.trimRight():e.replace(/[\s\uFEFF\xA0]+$/,""):"-"!==i&&"nl"!==i||(e=e.replace(/(?:\n|\r|\r\n)$/,"")),e)}(e,r,d,t))&&(e=e.replace(/\\|'/g,"\\$&").replace(/\r\n|\n|\r/g,"\\n"),p.push(e));}for(;null!==(l=u.exec(e));){var m,y=l[1],x=l[2],b=l[3]||"";for(var w in a)if(a[w]===b){m=w;break}v(y,x),h=l.index+l[0].length,m||n("unrecognized tag type: "+b,e,h);var F=g(l.index,m),S=F.t;if("h"===S){var I=F.n||"";r.async&&c.test(I)&&(F.a=!0,F.n=I.replace(c,"")),F=i(F),p.push(F);}else if("c"===S){if(s.n===F.n)return f?(f.d=p,s.b.push(f)):s.d=p,s;n("Helper start and end don't match",e,l.index+l[0].length);}else if("b"===S){f?(f.d=p,s.b.push(f)):s.d=p;var R=F.n||"";r.async&&c.test(R)&&(F.a=!0,F.n=R.replace(c,"")),f=F,p=[];}else if("s"===S){var T=F.n||"";r.async&&c.test(T)&&(F.a=!0,F.n=T.replace(c,"")),p.push(F);}else p.push(F);}if(!o)throw t('unclosed helper "'+s.n+'"');return v(e.slice(h,e.length),!1),s.d=p,s}({f:[]},!0);if(r.plugins)for(var m=0;m<r.plugins.length;m++){var y=r.plugins[m];y.processAST&&(v.d=y.processAST(v.d,r));}return v.d}function d(e,t){var n=h(e,t),r="var tR='';"+(t.useWith?"with("+t.varName+"||{}){":"")+x(n,t)+"if(cb){cb(null,tR)} return tR"+(t.useWith?"}":"");if(t.plugins)for(var a=0;a<t.plugins.length;a++){var i=t.plugins[a];i.processFnString&&(r=i.processFnString(r,t));}return r}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n][0],a=t[n][1];e=(t[n][2]?"await ":"")+"c.l('F','"+r+"')("+e,a&&(e+=","+a),e+=")";}return e}function v(e,t,n,r,a,i){var s="{exec:"+(a?"async ":"")+y(n,t,e)+",params:["+r+"]";return i&&(s+=",name:'"+i+"'"),a&&(s+=",async:true"),s+="}"}function m(e,t){for(var n="[",r=0;r<e.length;r++){var a=e[r];n+=v(t,a.res||"",a.d,a.p||"",a.a,a.n),r<e.length&&(n+=",");}return n+="]"}function y(e,t,n){return "function("+t+"){var tR='';"+x(e,n)+"return tR}"}function x(e,t){for(var n=0,r=e.length,a="";n<r;n++){var i=e[n];if("string"==typeof i){a+="tR+='"+i+"';";}else {var s=i.t,c=i.c||"",o=i.f,l=i.n||"",f=i.p||"",u=i.res||"",p=i.b,h=!!i.a;if("i"===s){t.defaultFilter&&(c="c.l('F','"+t.defaultFilter+"')("+c+")");var d=g(c,o);!i.raw&&t.autoEscape&&(d="c.l('F','e')("+d+")"),a+="tR+="+d+";";}else if("h"===s)if(t.storage.nativeHelpers.get(l))a+=t.storage.nativeHelpers.get(l)(i,t);else {var y=(h?"await ":"")+"c.l('H','"+l+"')("+v(t,u,i.d,f,h);y+=p?","+m(p,t):",[]",a+="tR+="+g(y+=",c)",o)+";";}else "s"===s?a+="tR+="+g((h?"await ":"")+"c.l('H','"+l+"')({params:["+f+"]},[],c)",o)+";":"e"===s&&(a+=c+"\n");}}return a}var b=function(){function e(e){this.cache=e;}return e.prototype.define=function(e,t){this.cache[e]=t;},e.prototype.get=function(e){return this.cache[e]},e.prototype.remove=function(e){delete this.cache[e];},e.prototype.reset=function(){this.cache={};},e.prototype.load=function(e){s(this.cache,e,!0);},e}();function w(e,n,r,a){if(n&&n.length>0)throw t((a?"Native":"")+"Helper '"+e+"' doesn't accept blocks");if(r&&r.length>0)throw t((a?"Native":"")+"Helper '"+e+"' doesn't accept filters")}var F={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};function S(e){return F[e]}var I=new b({}),R=new b({each:function(e,t){var n="",r=e.params[0];if(w("each",t,!1),e.async)return new Promise((function(t){!function e(t,n,r,a,i){r(t[n],n).then((function(s){a+=s,n===t.length-1?i(a):e(t,n+1,r,a,i);}));}(r,0,e.exec,n,t);}));for(var a=0;a<r.length;a++)n+=e.exec(r[a],a);return n},foreach:function(e,t){var n=e.params[0];if(w("foreach",t,!1),e.async)return new Promise((function(t){!function e(t,n,r,a,i,s){a(n[r],t[n[r]]).then((function(c){i+=c,r===n.length-1?s(i):e(t,n,r+1,a,i,s);}));}(n,Object.keys(n),0,e.exec,"",t);}));var r="";for(var a in n)i(n,a)&&(r+=e.exec(a,n[a]));return r},include:function(e,n,r){w("include",n,!1);var a=r.storage.templates.get(e.params[0]);if(!a)throw t('Could not fetch template "'+e.params[0]+'"');return a(e.params[1],r)},extends:function(e,n,r){var a=e.params[1]||{};a.content=e.exec();for(var i=0;i<n.length;i++){var s=n[i];a[s.name]=s.exec();}var c=r.storage.templates.get(e.params[0]);if(!c)throw t('Could not fetch template "'+e.params[0]+'"');return c(a,r)},useScope:function(e,t){return w("useScope",t,!1),e.exec(e.params[0])}}),T=new b({if:function(e,t){w("if",!1,e.f,!0);var n="if("+e.p+"){"+x(e.d,t)+"}";if(e.b)for(var r=0;r<e.b.length;r++){var a=e.b[r];"else"===a.n?n+="else{"+x(a.d,t)+"}":"elif"===a.n&&(n+="else if("+a.p+"){"+x(a.d,t)+"}");}return n},try:function(e,n){if(w("try",!1,e.f,!0),!e.b||1!==e.b.length||"catch"!==e.b[0].n)throw t("native helper 'try' only accepts 1 block, 'catch'");var r="try{"+x(e.d,n)+"}",a=e.b[0];return r+="catch"+(a.res?"("+a.res+")":"")+"{"+x(a.d,n)+"}"},block:function(e,t){return w("block",e.b,e.f,!0),"if(!"+t.varName+"["+e.p+"]){tR+=("+y(e.d,"",t)+")()}else{tR+="+t.varName+"["+e.p+"]}"}}),E=new b({e:function(e){var t=String(e);return /[&<>"']/.test(t)?t.replace(/[&<>"']/g,S):t}}),j={varName:"it",autoTrim:[!1,"nl"],autoEscape:!0,defaultFilter:!1,tags:["{{","}}"],l:function(e,n){if("H"===e){var r=this.storage.helpers.get(n);if(r)return r;throw t("Can't find helper '"+n+"'")}if("F"===e){var a=this.storage.filters.get(n);if(a)return a;throw t("Can't find filter '"+n+"'")}},async:!1,storage:{helpers:R,nativeHelpers:T,filters:E,templates:I},prefixes:{h:"@",b:"#",i:"",r:"*",c:"/",e:"!"},cache:!1,plugins:[],useWith:!1};function H(e,t){var n={};return s(n,j),t&&s(n,t),e&&s(n,e),n.l.bind(n),n}function O(e,n){var r=H(n||{}),i=Function;if(r.async){if(!a)throw t("This environment doesn't support async/await");i=a;}try{return new i(r.varName,"c","cb",d(e,r))}catch(n){throw n instanceof SyntaxError?t("Bad template syntax\n\n"+n.message+"\n"+Array(n.message.length+1).join("=")+"\n"+d(e,r)):n}}function _(e,t){var n;return t.cache&&t.name&&t.storage.templates.get(t.name)?t.storage.templates.get(t.name):(n="function"==typeof e?e:O(e,t),t.cache&&t.name&&t.storage.templates.define(t.name,n),n)}j.l.bind(j),e.compile=O,e.compileScope=x,e.compileScopeIntoFunction=y,e.compileToString=d,e.defaultConfig=j,e.filters=E,e.getConfig=H,e.helpers=R,e.nativeHelpers=T,e.parse=h,e.render=function(e,n,a,i){var s=H(a||{});if(!s.async)return _(e,s)(n,s);if(!i){if("function"==typeof r)return new r((function(t,r){try{t(_(e,s)(n,s));}catch(e){r(e);}}));throw t("Please provide a callback function, this env doesn't support Promises")}try{_(e,s)(n,s,i);}catch(e){return i(e)}},e.templates=I,Object.defineProperty(e,"__esModule",{value:!0});}));

});

class TemplateService {
    static generateContextForElement(element) {
        var _context = {};
        // Process label for error messages
        if (element.hasAttribute("title")) {
            _context["label"] = element.getAttribute("title");
        }
        else if (element.hasAttribute("id")) {
            var _label = document.querySelector("label[for=" + element.id + "]");
            if (_label !== null) {
                _context["label"] = _label.textContent;
            }
        }
        // Add all attributes for a DOM element
        Array.from(element.attributes).forEach(function (attribute) {
            _context[StringUtils.toCamelCase(attribute.name)] = attribute.value;
        });
        return _context;
    }
    static process(template, context) {
        var _isTemplate = template.includes("<%");
        return (_isTemplate ? squirrelly_min.render(template, context, squirrelly_min.getConfig({ tags: ["<%", "%>"] })) : template);
    }
}

class FormService {
    static process(event) {
        var _element = event.target;
        var _form = _element.form;
        var _value = this.getValue(_element);
        var _dataErrorParent = _form.querySelector('[' +
            FormAttributes.DATA_FOR_ATTRIBUTE_NAME +
            '=' +
            _element.id +
            ']');
        if (_dataErrorParent !== null) {
            var _dataErrorMessages = _dataErrorParent.querySelectorAll('[' + FormAttributes.DATA_ERROR_ATTRIBUTE_NAME + ']');
            var _activeDataError = null;
            var _context = TemplateService.generateContextForElement(_element);
            _dataErrorMessages.forEach((_dataError) => {
                if (_activeDataError == null) {
                    var regExValue = _dataError.getAttribute(FormAttributes.DATA_ERROR_ATTRIBUTE_NAME);
                    if (StringUtils.hasLength(regExValue)) {
                        if (StringUtils.isString(_value)) {
                            var regEx = new RegExp(regExValue);
                            var _result = regEx.test(_value);
                            if (_result) {
                                _activeDataError = _dataError;
                            }
                        }
                    }
                    if (_activeDataError == null) {
                        if (this.processDataAttribute(FormAttributes.DATA_SPECIAL_CHARACTERS_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, "^[a-zA-Z\\xc1\\xc0\\xc4\\xc2\\xe0\\xe2\\xe4\\xe1\\xc7\\xe7\\xc8\\xc9\\xca\\xcb\\xe8\\xe9\\xea\\xeb\\xce\\xcf\\xee\\xef\\xd4\\xf4\\xd9\\xdb\\xdc\\xf9\\xfb\\xfc\\xff .'-]+$", false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_EMPTY_VALUE_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^(?!\\s*$).+', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_MIN_LENGTH_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^.{<%it.minlength%>,}$', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_MAX_LENGTH_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^.{0,<%it.maxlength%>}$', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_EMAIL_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[.][a-zA-Z]{1,63}$', false)) {
                            _activeDataError = _dataError;
                        }
                        // "^((\+1)|1)? ?\(?(\d{3})\)?[ .-]?(\d{3})[ .-]?(\d{4})( ?(ext\.? ?|x)(\d*))?$"
                        // [0-9]{3}-[0-9]{3}-[0-9]{4}
                        if (this.processDataAttribute(FormAttributes.DATA_PHONE_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processEmailConfirmation(FormAttributes.DATA_EMAIL_CONFIRMATION_NAME, _context, _value, _dataError, _dataErrorParent)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_DATE_FORMAT_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^(?:(?:(?:(?:0?[13578])|(1[02]))\\/31\\/(19|20)?\\d\\d)|(?:(?:(?:0?[13-9])|(?:1[0-2]))\\/(?:29|30)\\/(?:19|20)?\\d\\d)|(?:0?2\\/29\\/(?:19|20)(?:(?:[02468][048])|(?:[13579][26])))|(?:(?:(?:0?[1-9])|(?:1[0-2]))\\/(?:(?:0?[1-9])|(?:1\\d)|(?:2[0-8]))\\/(?:19|20)?\\d\\d))$', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDataAttribute(FormAttributes.DATA_CURRENCY_FORMAT_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent, '^\\d+(?:\\.\\d{0,2})?$', false)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDatePastAttribute(FormAttributes.DATA_DATE_PAST_ATTRIBUTE_NAME, _context, _value, _dataError, _dataErrorParent)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDatePreceedAttribute(FormAttributes.DATA_DATE_PRECEEDS_ONE_YEAR, _context, _value, _dataError, _dataErrorParent, _form)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDateExceedAttribute(FormAttributes.DATA_DATE_EXCEEDS, _context, _value, _dataError, _dataErrorParent, _form)) {
                            _activeDataError = _dataError;
                        }
                        if (this.processDateExceedOneYearTodayAttribute(FormAttributes.DATA_DATE_EXCEEDS_ONE_YEAR_TODAY, _context, _value, _dataError, _dataErrorParent)) {
                            _activeDataError = _dataError;
                        }
                    }
                }
            });
        }
        if (_dataErrorParent !== null) {
            var _errorMessageNode = this.getErrorMessageNode(_dataErrorParent);
            if (_activeDataError !== null) {
                _errorMessageNode.classList.remove('hidden');
                _errorMessageNode.removeAttribute('aria-hidden');
                _errorMessageNode.textContent = TemplateService.process(_activeDataError.textContent, _context);
                return false;
            }
            else {
                _errorMessageNode.classList.add('hidden');
            }
        }
        return true;
    }
    static getValue(element) {
        if (element.tagName === 'INPUT') {
            return element.value;
        }
        else if (element.tagName === 'TEXTAREA') {
            return element.value;
        }
        else if (element.tagName === 'SELECT') {
            return element.options[element.selectedIndex].value;
        }
        throw 'Unsupported element type ' + element.tagNames;
    }
    static processDataAttribute(attributeName, context, value, dataError, dataErrorParent, dataPattern, isDataPatternMatch) {
        if (dataError.hasAttribute(attributeName)) {
            if (dataPattern == null) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
            else if (StringUtils.notEmpty(dataPattern)) {
                var regEx = new RegExp(TemplateService.process(dataPattern, context));
                if (value !== null) {
                    var _result = regEx.test(value);
                    if ((isDataPatternMatch && _result) ||
                        (!isDataPatternMatch && !_result)) {
                        this.setErrorMessage(dataError, context, dataErrorParent);
                        return true;
                    }
                }
            }
        }
        return false;
    }
    static processEmailConfirmation(attributeName, context, value, dataError, dataErrorParent) {
        if (dataError.hasAttribute(attributeName)) {
            const emailElement = (document.getElementById(context.dataEmailId));
            if (emailElement && emailElement.value !== value) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
        }
        return false;
    }
    static processDatePastAttribute(attributeName, context, value, dataError, dataErrorParent) {
        if (dataError.hasAttribute(attributeName)) {
            const today = new Date();
            const beginningOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate());
            const dateValue = new Date(value);
            if (dateValue.getTime() < beginningOfDay.getTime()) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
        }
        return false;
    }
    static processDateExceedAttribute(attributeName, context, value, dataError, dataErrorParent, form) {
        if (dataError.hasAttribute(attributeName)) {
            var dateInput = form.querySelector('[' +
                FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
                '=' +
                context.dataExceeds +
                ']');
            if (!dateInput) {
                return false;
            }
            const dateString = this.getValue(dateInput);
            if (StringUtils.isEmpty(dateString)) {
                return false;
            }
            const compareDate = new Date(dateString);
            const dateValue = new Date(value);
            if (dateValue.getTime() > compareDate.getTime()) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
        }
        return false;
    }
    static processDateExceedOneYearTodayAttribute(attributeName, context, value, dataError, dataErrorParent) {
        if (dataError.hasAttribute(attributeName)) {
            const today = new Date();
            const oneYearFromToday = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());
            const dateValue = new Date(value);
            if (dateValue.getTime() > oneYearFromToday.getTime()) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
        }
        return false;
    }
    static processDatePreceedAttribute(attributeName, context, value, dataError, dataErrorParent, form) {
        if (dataError.hasAttribute(attributeName)) {
            var dateInput = form.querySelector('[' +
                FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
                '=' +
                context.dataPreceeds +
                ']');
            if (!dateInput) {
                return false;
            }
            const futureDateString = this.getValue(dateInput);
            if (StringUtils.isEmpty(futureDateString)) {
                return false;
            }
            const futureDate = new Date(futureDateString);
            const dateValue = new Date(value);
            const daysDifference = Math.floor((futureDate.getTime() - dateValue.getTime()) /
                (1000 * 60 * 60 * 24));
            if (daysDifference > 365) {
                this.setErrorMessage(dataError, context, dataErrorParent);
                return true;
            }
        }
        return false;
    }
    static setErrorMessage(dataErrorElement, context, dataErrorParent) {
        var _errorMessageNode = this.getErrorMessageNode(dataErrorParent);
        _errorMessageNode.textContent = TemplateService.process(dataErrorElement.textContent, context);
        if (dataErrorElement.hasAttribute(FormAttributes.DATA_ARIA_TEXT_ATTRIBUTE_NAME)) {
            _errorMessageNode.setAttribute('aria-text', TemplateService.process(dataErrorElement.getAttribute(FormAttributes.DATA_ARIA_TEXT_ATTRIBUTE_NAME), context));
        }
        else {
            _errorMessageNode.removeAttribute(FormAttributes.DATA_ARIA_TEXT_ATTRIBUTE_NAME);
        }
    }
    static getErrorMessageNode(dataErrorParent) {
        var _dataErrorMessageNode = dataErrorParent.querySelector('[' + FormAttributes.DATA_ERROR_MESSAGE_ATTRIBUTE_NAME + ']');
        if (_dataErrorMessageNode == null) {
            _dataErrorMessageNode = dataErrorParent.querySelector('[' + FormAttributes.DATA_ERROR_ATTRIBUTE_NAME + ']');
            _dataErrorMessageNode = document.createElement(_dataErrorMessageNode.tagName);
            _dataErrorMessageNode.setAttribute(FormAttributes.DATA_ERROR_MESSAGE_ATTRIBUTE_NAME, '');
            _dataErrorMessageNode.setAttribute('class', 'hidden');
            _dataErrorMessageNode.setAttribute('aria-hidden', 'true');
            dataErrorParent.appendChild(_dataErrorMessageNode);
        }
        _dataErrorMessageNode.setAttribute('class', 'error-message');
        return _dataErrorMessageNode;
    }
}

class ModalOptions {
    constructor(keyboardClose = true, backdrop = true, backdropDismiss = true, 
    // TODO: Add support for the items below back into Modal Component
    keyboardDismiss = true, clickDismiss = true) {
        this.keyboardClose = keyboardClose;
        this.backdrop = backdrop;
        this.backdropDismiss = backdropDismiss;
        this.keyboardDismiss = keyboardDismiss;
        this.clickDismiss = clickDismiss;
    }
}

class ModalLanguageVariables {
    constructor(close = null) {
        this.close = close;
    }
}

var candidateSelectors = [
  'input',
  'select',
  'textarea',
  'a[href]',
  'button',
  '[tabindex]',
  'audio[controls]',
  'video[controls]',
  '[contenteditable]:not([contenteditable="false"])',
];
var candidateSelector = candidateSelectors.join(',');

var matches = typeof Element === 'undefined'
  ? function () {}
  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

function tabbable(el, options) {
  options = options || {};

  var regularTabbables = [];
  var orderedTabbables = [];

  var candidates = el.querySelectorAll(candidateSelector);

  if (options.includeContainer) {
    if (matches.call(el, candidateSelector)) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var i, candidate, candidateTabindex;
  for (i = 0; i < candidates.length; i++) {
    candidate = candidates[i];

    if (!isNodeMatchingSelectorTabbable(candidate)) continue;

    candidateTabindex = getTabindex(candidate);
    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate,
      });
    }
  }

  var tabbableNodes = orderedTabbables
    .sort(sortOrderedTabbables)
    .map(function(a) { return a.node })
    .concat(regularTabbables);

  return tabbableNodes;
}

tabbable.isTabbable = isTabbable;
tabbable.isFocusable = isFocusable;

function isNodeMatchingSelectorTabbable(node) {
  if (
    !isNodeMatchingSelectorFocusable(node)
    || isNonTabbableRadio(node)
    || getTabindex(node) < 0
  ) {
    return false;
  }
  return true;
}

function isTabbable(node) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, candidateSelector) === false) return false;
  return isNodeMatchingSelectorTabbable(node);
}

function isNodeMatchingSelectorFocusable(node) {
  if (
    node.disabled
    || isHiddenInput(node)
    || isHidden(node)
  ) {
    return false;
  }
  return true;
}

var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');
function isFocusable(node) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, focusableCandidateSelector) === false) return false;
  return isNodeMatchingSelectorFocusable(node);
}

function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!isNaN(tabindexAttr)) return tabindexAttr;
  // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  if (isContentEditable(node)) return 0;
  return node.tabIndex;
}

function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
}

function isContentEditable(node) {
  return node.contentEditable === 'true';
}

function isInput(node) {
  return node.tagName === 'INPUT';
}

function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
}

function isRadio(node) {
  return isInput(node) && node.type === 'radio';
}

function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
}

function getCheckedRadio(nodes) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked) {
      return nodes[i];
    }
  }
}

function isTabbableRadio(node) {
  if (!node.name) return true;
  // This won't account for the edge case where you have radio groups with the same
  // in separate forms on the same page.
  var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
  var checked = getCheckedRadio(radioSet);
  return !checked || checked === node;
}

function isHidden(node) {
  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,
  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.
  return node.offsetParent === null || getComputedStyle(node).visibility === 'hidden';
}

var tabbable_1 = tabbable;

var immutable = extend;

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {};

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }

    return target
}

var activeFocusDelay;

var activeFocusTraps = (function() {
  var trapQueue = [];
  return {
    activateTrap: function(trap) {
      if (trapQueue.length > 0) {
        var activeTrap = trapQueue[trapQueue.length - 1];
        if (activeTrap !== trap) {
          activeTrap.pause();
        }
      }

      var trapIndex = trapQueue.indexOf(trap);
      if (trapIndex === -1) {
        trapQueue.push(trap);
      } else {
        // move this existing trap to the front of the queue
        trapQueue.splice(trapIndex, 1);
        trapQueue.push(trap);
      }
    },

    deactivateTrap: function(trap) {
      var trapIndex = trapQueue.indexOf(trap);
      if (trapIndex !== -1) {
        trapQueue.splice(trapIndex, 1);
      }

      if (trapQueue.length > 0) {
        trapQueue[trapQueue.length - 1].unpause();
      }
    }
  };
})();

function focusTrap(element, userOptions) {
  var doc = document;
  var container =
    typeof element === 'string' ? doc.querySelector(element) : element;

  var config = immutable(
    {
      returnFocusOnDeactivate: true,
      escapeDeactivates: true
    },
    userOptions
  );

  var state = {
    firstTabbableNode: null,
    lastTabbableNode: null,
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false
  };

  var trap = {
    activate: activate,
    deactivate: deactivate,
    pause: pause,
    unpause: unpause
  };

  return trap;

  function activate(activateOptions) {
    if (state.active) return;

    updateTabbableNodes();

    state.active = true;
    state.paused = false;
    state.nodeFocusedBeforeActivation = doc.activeElement;

    var onActivate =
      activateOptions && activateOptions.onActivate
        ? activateOptions.onActivate
        : config.onActivate;
    if (onActivate) {
      onActivate();
    }

    addListeners();
    return trap;
  }

  function deactivate(deactivateOptions) {
    if (!state.active) return;

    clearTimeout(activeFocusDelay);

    removeListeners();
    state.active = false;
    state.paused = false;

    activeFocusTraps.deactivateTrap(trap);

    var onDeactivate =
      deactivateOptions && deactivateOptions.onDeactivate !== undefined
        ? deactivateOptions.onDeactivate
        : config.onDeactivate;
    if (onDeactivate) {
      onDeactivate();
    }

    var returnFocus =
      deactivateOptions && deactivateOptions.returnFocus !== undefined
        ? deactivateOptions.returnFocus
        : config.returnFocusOnDeactivate;
    if (returnFocus) {
      delay(function() {
        tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
      });
    }

    return trap;
  }

  function pause() {
    if (state.paused || !state.active) return;
    state.paused = true;
    removeListeners();
  }

  function unpause() {
    if (!state.paused || !state.active) return;
    state.paused = false;
    updateTabbableNodes();
    addListeners();
  }

  function addListeners() {
    if (!state.active) return;

    // There can be only one listening focus trap at a time
    activeFocusTraps.activateTrap(trap);

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    activeFocusDelay = delay(function() {
      tryFocus(getInitialFocusNode());
    });

    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('touchstart', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('click', checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener('keydown', checkKey, {
      capture: true,
      passive: false
    });

    return trap;
  }

  function removeListeners() {
    if (!state.active) return;

    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);

    return trap;
  }

  function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    var node = optionValue;
    if (!optionValue) {
      return null;
    }
    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue);
      if (!node) {
        throw new Error('`' + optionName + '` refers to no known node');
      }
    }
    if (typeof optionValue === 'function') {
      node = optionValue();
      if (!node) {
        throw new Error('`' + optionName + '` did not return a node');
      }
    }
    return node;
  }

  function getInitialFocusNode() {
    var node;
    if (getNodeForOption('initialFocus') !== null) {
      node = getNodeForOption('initialFocus');
    } else if (container.contains(doc.activeElement)) {
      node = doc.activeElement;
    } else {
      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
    }

    if (!node) {
      throw new Error(
        'Your focus-trap needs to have at least one focusable element'
      );
    }

    return node;
  }

  function getReturnFocusNode(previousActiveElement) {
    var node = getNodeForOption('setReturnFocus');
    return node ? node : previousActiveElement;
  }

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  function checkPointerDown(e) {
    if (container.contains(e.target)) return;
    if (config.clickOutsideDeactivates) {
      deactivate({
        returnFocus: !tabbable_1.isFocusable(e.target)
      });
      return;
    }
    // This is needed for mobile devices.
    // (If we'll only let `click` events through,
    // then on mobile they will be blocked anyways if `touchstart` is blocked.)
    if (config.allowOutsideClick && config.allowOutsideClick(e)) {
      return;
    }
    e.preventDefault();
  }

  // In case focus escapes the trap for some strange reason, pull it back in.
  function checkFocusIn(e) {
    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (container.contains(e.target) || e.target instanceof Document) {
      return;
    }
    e.stopImmediatePropagation();
    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
  }

  function checkKey(e) {
    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
      e.preventDefault();
      deactivate();
      return;
    }
    if (isTabEvent(e)) {
      checkTab(e);
      return;
    }
  }

  // Hijack Tab events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  function checkTab(e) {
    updateTabbableNodes();
    if (e.shiftKey && e.target === state.firstTabbableNode) {
      e.preventDefault();
      tryFocus(state.lastTabbableNode);
      return;
    }
    if (!e.shiftKey && e.target === state.lastTabbableNode) {
      e.preventDefault();
      tryFocus(state.firstTabbableNode);
      return;
    }
  }

  function checkClick(e) {
    if (config.clickOutsideDeactivates) return;
    if (container.contains(e.target)) return;
    if (config.allowOutsideClick && config.allowOutsideClick(e)) {
      return;
    }
    e.preventDefault();
    e.stopImmediatePropagation();
  }

  function updateTabbableNodes() {
    var tabbableNodes = tabbable_1(container);
    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
    state.lastTabbableNode =
      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
  }

  function tryFocus(node) {
    if (node === doc.activeElement) return;
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }
    node.focus();
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  }
}

function isSelectableInput(node) {
  return (
    node.tagName &&
    node.tagName.toLowerCase() === 'input' &&
    typeof node.select === 'function'
  );
}

function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
}

function isTabEvent(e) {
  return e.key === 'Tab' || e.keyCode === 9;
}

function delay(fn) {
  return setTimeout(fn, 0);
}

var focusTrap_1 = focusTrap;

const modalComponentCss = "snt-modal{z-index:100;position:fixed;top:0;left:0;height:100%;width:100%;display:none}snt-modal.ready-to-show{display:block}snt-modal.ready-to-show .modal{display:block}snt-modal snt-layout[viewport=medium] .modal-content{padding:40px;height:auto}snt-modal snt-layout[viewport=medium] .modal-dialog{margin:auto;width:334px;max-width:none}snt-modal snt-layout[viewport=medium] .form-modal .modal-dialog,snt-modal snt-layout[viewport=medium] .contact-us-login .modal-dialog{width:514px}snt-modal snt-layout[viewport=large] .modal-content{padding:60px;height:auto}snt-modal snt-layout[viewport=large] .modal-dialog{margin:auto;width:426px;max-width:none}snt-modal snt-layout[viewport=large] .form-modal .modal-dialog{width:578px}snt-modal snt-layout[viewport=large] .contact-us-login .modal-dialog{width:730px}snt-modal snt-layout[viewport=extra-large] .modal-content{padding:60px;height:auto}snt-modal snt-layout[viewport=extra-large] .modal-dialog{margin:auto;width:570px;max-width:none}snt-modal snt-layout[viewport=extra-large] .form-modal .modal-dialog{width:770px}snt-modal snt-layout[viewport=extra-large] .contact-us-login .modal-dialog{width:970px}snt-modal .modal-dialog{width:100vw;max-width:100%;margin:0}snt-modal .modal-content{height:100vh;overflow:auto;padding:40px;border-radius:0px;-webkit-box-sizing:border-box;box-sizing:border-box}snt-modal .modal-header{-ms-flex-pack:center;justify-content:center}snt-modal .close{opacity:1;outline:none;position:absolute;display:-ms-flexbox;display:flex;top:17px;right:17px}snt-modal .close:not(:disabled):not(.disabled):hover{opacity:1}snt-modal .close:not(:disabled):not(.disabled):hover .icon{background-image:url(\"/asset/fonts/icons/icon_global_closeStandAlone_hover.svg\")}snt-modal .close .label{font-family:\"Averta-Regular\", Arial, Helvetica, sans-serif;font-size:12px;color:#9E0A9A;padding-right:4px}snt-modal .close .icon{display:block;background-image:url(\"/asset/fonts/icons/icon_global_closeStandalone_lk.svg\");background-repeat:no-repeat;background-size:cover;height:15px;width:15px;content:\" \"}snt-modal .close:focus{outline:none}snt-modal .close:focus .icon{outline:1px dotted #323232;outline-offset:2px}snt-modal .modal-body{padding:0px}snt-modal .modal-body button-link-group,snt-modal .modal-body snt-multi-column-mixed{padding-top:30px}snt-modal .modal-footer{border-top:none}snt-modal .modal-title{color:#323232;font-family:\"Averta-ExtraBold\", Arial, Helvetica, sans-serif;font-size:18px;line-height:32px;margin-bottom:0;font-weight:normal;text-align:center}snt-modal .modal-backdrop{display:block}snt-modal .no-content{display:none}snt-modal .no-header-content{padding:0px}.remove-sides .spacings{padding:0 !important}";

var __awaiter$c = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class ModalComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.modalEvent = createEvent(this, "modalEvent", 7);
        this.shown = false;
        this.modalTitle = StringUtils.empty();
        this.options = ModalComponent.DEFAULT_OPTIONS;
        this.styleClasses = StringUtils.empty();
        this.languageString = StringUtils.empty();
    }
    toggleModal(shown) {
        return __awaiter$c(this, void 0, void 0, function* () {
            if (shown) {
                this.modalEvent.emit({ eventType: ModalComponent.EVENT_MODAL_SHOW });
                this.element.classList.add(ModalComponent.CLASS_READY_TO_SHOW);
                yield WebUtils.sleep(WebUtils.getTransitionDuration(this.element));
                if (this.options.backdrop) {
                    this.backdropElement.classList.add(ModalComponent.CLASS_SHOW);
                    yield WebUtils.sleep(WebUtils.getTransitionDuration(this.backdropElement));
                }
                this.modalDialogElement.classList.add(ModalComponent.CLASS_SHOW);
                this.modalEvent.emit({ eventType: ModalComponent.EVENT_MODAL_SHOWN });
            }
            else {
                this.modalEvent.emit({ eventType: ModalComponent.EVENT_MODAL_HIDE });
                this.modalDialogElement.classList.remove(ModalComponent.CLASS_SHOW);
                yield WebUtils.sleep(WebUtils.getTransitionDuration(this.element));
                if (this.backdropElement) {
                    this.backdropElement.classList.remove(ModalComponent.CLASS_SHOW);
                    yield WebUtils.sleep(WebUtils.getTransitionDuration(this.backdropElement));
                }
                this.element.classList.remove(ModalComponent.CLASS_READY_TO_SHOW);
                this.modalEvent.emit({ eventType: ModalComponent.EVENT_MODAL_HIDDEN });
            }
            this.toggleFocusTrap();
        });
    }
    show() {
        return __awaiter$c(this, void 0, void 0, function* () {
            this.shown = true;
        });
    }
    hide() {
        return __awaiter$c(this, void 0, void 0, function* () {
            this.shown = false;
        });
    }
    toggle() {
        return __awaiter$c(this, void 0, void 0, function* () {
            this.shown = !this.shown;
        });
    }
    isShown() {
        return __awaiter$c(this, void 0, void 0, function* () {
            return this.shown;
        });
    }
    modalEventHandler(modalEvent) {
        switch (modalEvent.detail.eventType) {
            case ModalComponent.EVENT_MODAL_SHOW:
                this.lastActiveElement = document.activeElement || document.body;
                if (document.body.scrollHeight > window.innerHeight) {
                    DomUtils.setScrollbarPaddingReplacement(true, ScrollDirectionEnum.VERTICAL);
                    document.body.classList.add(ModalComponent.CLASS_MODAL_OPEN);
                }
                break;
            case ModalComponent.EVENT_MODAL_SHOWN:
                break;
            case ModalComponent.EVENT_MODAL_HIDE:
                if (document.body.scrollHeight > window.innerHeight) {
                    DomUtils.setScrollbarPaddingReplacement(false, ScrollDirectionEnum.VERTICAL);
                    document.body.classList.remove(ModalComponent.CLASS_MODAL_OPEN);
                }
                this.lastActiveElement.focus();
                break;
            case ModalComponent.EVENT_MODAL_HIDDEN:
                break;
            default:
                throw new Error("Unsupported modal event type.");
        }
    }
    componentWillLoad() {
        this.languageVariables = new ModalLanguageVariables();
        try {
            const parsedJson = JSON.parse(this.languageString);
            Object.keys(this.languageVariables).forEach((key) => {
                if (parsedJson.hasOwnProperty(key)) {
                    this.languageVariables[key] = parsedJson[key];
                }
                else {
                    console.error(`Required language variable '${key}' not passed through 'language-string' property.`);
                }
            });
        }
        catch (e) {
            throw new Error("Invalid JSON string in language-string attribute.");
        }
    }
    componentDidLoad() {
        const footerContentElement = this.element.querySelector('.modal-footer');
        if (StringUtils.isEmpty(footerContentElement.innerHTML.trim())) {
            footerContentElement.classList.add('no-content');
        }
        const headerContentElement = this.element.querySelector('.modal-header');
        if (StringUtils.isEmpty(this.modalTitle)) {
            headerContentElement.classList.add('no-header-content');
        }
        this.dialogTitle = this.modalContentElement.querySelector("h1, h2, h3, h4, h5, h6");
        this.dialogDescription = this.modalContentElement.querySelector("p");
        this.dialogTitle && (this.dialogTitle.id = this.dialogTitle.id || "dialog-title");
        this.dialogDescription && (this.dialogDescription.id = this.dialogDescription.id || "dialog-description");
        this.focusTrap = focusTrap_1(this.element, { initialFocus: this.modalDialogElement });
    }
    toggleFocusTrap() {
        (this.shown) ? this.focusTrap.activate() : this.focusTrap.deactivate();
    }
    render() {
        return (h(Host, { shown: this.shown, onSntDismiss: this.hide.bind(this) }, h("snt-layout", { padding: "none" }, h("div", { id: "backdrop", class: "modal-backdrop fade", ref: (thisElement) => this.backdropElement = thisElement }), h("div", { class: WebUtils.generateClasses(["modal", "fade"], this.styleClasses), tabindex: "-1", role: "dialog", "aria-labelledby": this.dialogTitle ? this.dialogTitle['id'] : null, "aria-describedby": this.dialogDescription ? this.dialogDescription['id'] : null, "aria-hidden": (this.shown) ? "false" : "true", ref: (thisElement) => this.modalDialogElement = thisElement, onClick: (event) => (event.target == event.currentTarget && this.hide()), onKeyDown: (event) => (WebUtils.isValidEscapeKey(event) && this.hide()) }, h("div", { class: "modal-dialog modal-dialog-centered", role: "document" }, h("div", { class: "modal-content", ref: (elem) => this.modalContentElement = elem }, h("div", { class: "modal-header" }), h("div", { class: "modal-body" }, h("slot", null)), h("div", { class: "modal-footer" }, h("slot", { name: "footer" })), h("button", { type: "button", class: "close", onClick: this.hide.bind(this) }, h("span", { class: "sr-only" }, this.languageVariables.close), h("span", { class: "icon", "aria-hidden": "true" }))))))));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "shown": ["toggleModal"]
    }; }
    static get style() { return modalComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-modal",
        "$members$": {
            "shown": [1540],
            "modalTitle": [1537, "modal-title"],
            "options": [16],
            "styleClasses": [1, "style-classes"],
            "languageString": [1537, "language-string"],
            "show": [64],
            "hide": [64],
            "toggle": [64],
            "isShown": [64]
        },
        "$listeners$": [[0, "modalEvent", "modalEventHandler"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["shown", "shown"], ["modalTitle", "modal-title"], ["languageString", "language-string"]]
    }; }
}
ModalComponent.TAG_NAME = "snt-modal";
ModalComponent.DEFAULT_OPTIONS = new ModalOptions();
ModalComponent.EVENT_MODAL_SHOWN = "modal-shown";
ModalComponent.EVENT_MODAL_SHOW = "modal-show";
ModalComponent.EVENT_MODAL_HIDDEN = "modal-hidden";
ModalComponent.EVENT_MODAL_HIDE = "modal-hide";
ModalComponent.CLASS_SHOW = "show";
ModalComponent.CLASS_READY_TO_SHOW = "ready-to-show";
ModalComponent.CLASS_MODAL_OPEN = "modal-open";

class ModalBuilder {
    constructor() {
    }
    static newInstance() {
        return new ModalBuilder();
    }
    withTitle(title) {
        this.modalTitle = title;
        return this;
    }
    withId(id) {
        this.id = id;
        return this;
    }
    withLanguageString(languageString) {
        this.languageString = languageString;
        return this;
    }
    withOptions(options) {
        this.options = options;
        return this;
    }
    withContent(content) {
        this.content = content;
        return this;
    }
    withFooter(footer) {
        this.footer = footer;
        return this;
    }
    withStyleClasses(styleClasses) {
        this.styleClasses = styleClasses;
        return this;
    }
    build() {
        const component = document.createElement(ModalComponent.TAG_NAME);
        if (this.id) {
            component.id = this.id;
        }
        if (this.modalTitle) {
            component.modalTitle = this.modalTitle;
        }
        if (this.languageString) {
            component.languageString = this.languageString;
        }
        if (this.options) {
            component.options = this.options;
        }
        if (this.styleClasses) {
            component.styleClasses = this.styleClasses;
        }
        WebUtils.appendElement(component, this.content, true);
        WebUtils.appendElement(component, this.footer, false);
        return component;
    }
}

class ModalOptionsBuilder {
    constructor() {
        this.modalOptions = new ModalOptions();
    }
    static newInstance() {
        return new ModalOptionsBuilder();
    }
    withKeyboardClose(value) {
        this.modalOptions.keyboardClose = value;
        return this;
    }
    withBackdropDismiss(value) {
        this.modalOptions.backdropDismiss = value;
        return this;
    }
    build() {
        return this.modalOptions;
    }
}

class Action {
    static dismiss(event) {
        const dismiss = new CustomEvent('sntDismiss', { bubbles: true, detail: {} });
        event.target.dispatchEvent(dismiss);
    }
    static toggleSearch(event) {
        const close = new CustomEvent('toggleSearch', { bubbles: true, detail: {} });
        event.target.dispatchEvent(close);
    }
    static logAction(event, data) {
        const message = `Action initiated from ${event.target.tagName} \n Data: ${JSON.stringify(data)}`;
        window.alert(message);
    }
    static openGetQuoteModal(_event, actionData) {
        const languageString = (actionData) ? JSON.stringify(actionData["languageString"]) : "";
        const getAQuoteUrl = actionData ? actionData['getAQuoteUrl'] || '/getAQuote' : '/getAQuote';
        let modal = document.querySelector(`${ModalComponent.TAG_NAME}[id="gaq-modal"]`);
        if (!modal) {
            HtmlContentBuilder.newInstance()
                .withUrl(new URL(getAQuoteUrl, window.location.origin))
                .build().then((contentFromUrl) => {
                modal = ModalBuilder.newInstance()
                    .withId("gaq-modal")
                    .withLanguageString(languageString)
                    .withOptions(ModalOptionsBuilder.newInstance()
                    .withBackdropDismiss(true)
                    .withKeyboardClose(true)
                    .build())
                    .withContent(contentFromUrl)
                    .build();
                if (modal) {
                    document.body.appendChild(modal);
                    modal.show();
                }
            });
        }
        else {
            modal.show();
        }
    }
    static openFormModal(event, actionData) {
        if (!actionData || StringUtils.isEmpty(actionData['formModalUrl'])) {
            throw new Error(`Modal url must be a valid string.`);
        }
        const languageString = (actionData) ? JSON.stringify(actionData["languageString"]) : "";
        const getAQuoteUrl = actionData['formModalUrl'];
        const modalId = (event.target.getAttribute('button-id') || 'form') + '-modal';
        let modal = document.querySelector(`${ModalComponent.TAG_NAME}[id="${modalId}"]`);
        if (!modal) {
            HtmlContentBuilder.newInstance()
                .withUrl(new URL(getAQuoteUrl, window.location.origin))
                .build().then((contentFromUrl) => {
                modal = ModalBuilder.newInstance()
                    .withId(modalId)
                    .withLanguageString(languageString)
                    .withOptions(ModalOptionsBuilder.newInstance()
                    .withBackdropDismiss(true)
                    .withKeyboardClose(true)
                    .build())
                    .withContent(contentFromUrl)
                    .withStyleClasses('form-modal')
                    .build();
                if (modal) {
                    document.body.appendChild(modal);
                    modal.show();
                }
            });
        }
        else {
            modal.show();
        }
    }
    static openErrorModal(actionData, modalId) {
        this.openModal(actionData, modalId, 'errorModalUrl', 'error-modal');
    }
    static openSuccessModal(actionData, modalId) {
        this.openModal(actionData, modalId, 'successModalUrl', 'success-modal');
    }
    static openConnectOfferModal(actionData, modalId) {
        this.openModal(actionData, modalId, 'offerModalUrl', 'offer-modal');
    }
    static openModal(actionData, modalId, modalUrlKey, styleClasses) {
        if (!actionData || StringUtils.isEmpty(actionData[modalUrlKey])) {
            throw new Error(`Modal url must be a valid string.`);
        }
        const languageString = (actionData) ? JSON.stringify(actionData["languageString"]) : "";
        const modalUrl = actionData[modalUrlKey];
        let modal = document.querySelector(`${ModalComponent.TAG_NAME}[id="${modalId}"]`);
        if (!modal) {
            HtmlContentBuilder.newInstance()
                .withUrl(new URL(modalUrl, window.location.origin))
                .build().then((contentFromUrl) => {
                modal = ModalBuilder.newInstance()
                    .withId(modalId)
                    .withLanguageString(languageString)
                    .withOptions(ModalOptionsBuilder.newInstance()
                    .withBackdropDismiss(true)
                    .withKeyboardClose(true)
                    .build())
                    .withContent(contentFromUrl)
                    .withStyleClasses(styleClasses)
                    .build();
                if (modal) {
                    document.body.appendChild(modal);
                    modal.show();
                }
            });
        }
        else {
            modal.show();
        }
    }
    static close(event) {
        const close = new CustomEvent('close', { bubbles: true, detail: {} });
        event.target.dispatchEvent(close);
    }
}

class SearchSuggestion {
    constructor(title = "", url = "") {
        this.title = title;
        this.url = url;
    }
}

class Search {
    static getResults(query) {
        return Search.result.filter((datum) => {
            const substrRegex = new RegExp(query, 'i');
            const isMatch = (substrRegex.test(datum['title']));
            return isMatch === true;
        });
    }
}
Search.result = [
    new SearchSuggestion("Auto Insurance", "/auto-insurance"),
    new SearchSuggestion("Home Insurance", "/home-insurance"),
    new SearchSuggestion("Tenant Insurance", "/tenant-insurance"),
    new SearchSuggestion("Landlord Insurance", "/landlord-insurance"),
    new SearchSuggestion("Claims", "/claims"),
    new SearchSuggestion("Blog", "/blog"),
    new SearchSuggestion("Sonnet Connect", "/sonnet-connect")
];

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Action: Action,
  Search: Search
});

const recaptchaComponentCss = "";

var __awaiter$d = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class RecaptchaComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.grecaptchaLoaded = createEvent(this, "grecaptchaLoaded", 7);
    }
    componentWillLoad() {
        this.loadRecaptchaScript();
    }
    componentDidLoad() {
        if (window.grecaptcha && window.grecaptcha.render) {
            this.renderRecaptcha(window['grecaptcha']);
        }
    }
    reset() {
        return __awaiter$d(this, void 0, void 0, function* () {
            window.grecaptcha.reset(this.grecaptchWidgetId);
        });
    }
    handleGrecaptchaLoaded() {
        if (window.grecaptcha && window.grecaptcha.render) {
            this.renderRecaptcha(window['grecaptcha']);
        }
    }
    loadRecaptchaScript() {
        return __awaiter$d(this, void 0, void 0, function* () {
            const hlParam = this.language && this.language == 'fr' ? 'fr-CA' : 'en';
            const scriptSrc = `https://www.google.com/recaptcha/api.js?hl=${hlParam}&onload=grecaptchaOnLoadCallback&render=explicit`;
            const recaptchaScriptEl = document.querySelector(`[src="${scriptSrc}"]`);
            if (!window['grecaptcha]'] && !recaptchaScriptEl) {
                const scriptTag = document.createElement('script');
                scriptTag.type = "text/javascript";
                scriptTag.src = scriptSrc;
                scriptTag.async = true;
                scriptTag.defer = true;
                scriptTag.onload = () => { };
                window.grecaptchaOnLoadCallback = () => __awaiter$d(this, void 0, void 0, function* () {
                    this.grecaptchaLoaded.emit();
                });
                const documentHead = document.getElementsByTagName('head')[0];
                documentHead.appendChild(scriptTag);
            }
        });
    }
    grecaptchaCallback(value) {
        this.checkbox.value = value;
        this.toggleChecked(this.checkbox, true);
    }
    grecaptchaExpiredCallback() {
        this.checkbox.value = "";
        this.toggleChecked(this.checkbox, false);
    }
    grecaptchaErrorCallback() {
        this.checkbox.value = "";
        this.toggleChecked(this.checkbox, false);
    }
    toggleChecked(checkbox, checked) {
        if (checked != checkbox.checked) {
            checkbox.click();
        }
    }
    renderRecaptcha(recaptcha) {
        const recaptchaPlaceholder = this.element.querySelector('.g-recaptcha');
        if (recaptchaPlaceholder.childNodes.length === 0) {
            this.grecaptchWidgetId = recaptcha.render(recaptchaPlaceholder, {
                'sitekey': this.sitekey,
                'callback': this.grecaptchaCallback.bind(this),
                'expired-callback': this.grecaptchaExpiredCallback.bind(this),
                'error-callback': this.grecaptchaErrorCallback.bind(this)
            });
        }
    }
    render() {
        return (h(Host, null, h("div", { class: "g-recaptcha", id: `${this.element.id}-g-recaptcha` }), h("input", { ref: el => this.checkbox = el, id: "recaptcha", name: "recaptcha", type: "checkbox", value: "", class: "hidden", "data-field": "recaptcha", tabindex: "-1", "aria-checked": "false", "aria-invalid": "false", "aria-describedby": "recaptcha_error", required: true }), h("slot", { name: "error-messages" })));
    }
    get element() { return getElement(this); }
    static get style() { return recaptchaComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-recaptcha",
        "$members$": {
            "sitekey": [1],
            "language": [1],
            "reset": [64]
        },
        "$listeners$": [[4, "grecaptchaLoaded", "handleGrecaptchaLoaded"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
RecaptchaComponent.TAG_NAME = "snt-recaptcha";

const formComponentCss = "snt-form *{-webkit-box-sizing:border-box;box-sizing:border-box}snt-form .form-control{border:1px solid #6f6f6f;border-radius:0;color:#323232;line-height:26px}snt-form .form-control:hover{-webkit-box-shadow:none;box-shadow:none;border:1px solid #147582}snt-form .form-control:focus{-webkit-box-shadow:none;box-shadow:none;border:3px solid #147582}snt-form label{font-family:\"Averta-ExtraBold\", sans-serif !important;font-weight:500 !important;margin-bottom:5px;font-size:14px}snt-form .form-row{margin-bottom:26px}snt-form p{margin-bottom:26px}snt-form textarea{min-height:300px}snt-form snt-button.submit-button button{display:block;margin:auto;width:100%}snt-form .hidden{display:none}snt-form .error-message{font-family:\"Averta-Regular\", sans-serif;margin-top:5px;color:#e12160;font-size:12px;position:absolute}@media (min-width: 768px){snt-form label{font-size:16px}snt-form .form-row{margin-bottom:30px}snt-form p{margin-bottom:30px}snt-form .error-message{font-size:14px}snt-form snt-button.submit-button button{width:auto}}";

var __awaiter$e = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class FormComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.formSubmit = createEvent(this, "formSubmit", 7);
    }
    /**
     * Methods
     */
    openErrorModal(actionData, modalId) {
        return __awaiter$e(this, void 0, void 0, function* () {
            Action.openErrorModal(actionData, modalId);
        });
    }
    openSuccessModal(actionData, modalId) {
        return __awaiter$e(this, void 0, void 0, function* () {
            Action.openSuccessModal(actionData, modalId);
        });
    }
    reset() {
        return __awaiter$e(this, void 0, void 0, function* () {
            this.formEl.reset();
            const recaptchaElement = this.formEl.querySelector(RecaptchaComponent.TAG_NAME);
            if (recaptchaElement) {
                yield recaptchaElement.reset();
            }
        });
    }
    componentDidLoad() {
        var _elements = this.getFormElements();
        _elements.forEach((_element) => {
            DomUtils.attachHandler(_element, "invalid", this.onInvalidateFormElementHandler.bind(this));
            DomUtils.attachHandler(_element, "change", this.onChangeInputBlankHandler.bind(this));
            if (_element.tagName !== "SELECT") {
                DomUtils.attachHandler(_element, "blur", this.onBlurFormElementHandler.bind(this));
            }
            if (_element.tagName === "SELECT" || _element.type === "checkbox") {
                DomUtils.attachHandler(_element, "change", this.onChangeValueFormElementHandler.bind(this));
            }
        });
        // Attach onSubmit to call callback handler
        if (this.submitCallBackhandler) {
            DomUtils.attachHandler(this.formEl, "submit", this.submitCallBackhandler.bind(this));
        }
    }
    getData() {
        return __awaiter$e(this, void 0, void 0, function* () {
            var _result = {
                method: this.formEl.getAttribute("method"),
                action: this.formEl.getAttribute("action"),
                content: this.getPayload(),
            };
            return _result;
        });
    }
    onChangeInputBlankHandler(event) {
        const element = event.target;
        if (element.hasAttribute(FormAttributes.DATA_ONCHANGE_BLANK_ATTRIBUTE_NAME)) {
            const _form = element.form;
            const inputElement = _form.querySelector("[" +
                FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
                "=" +
                element.getAttribute(FormAttributes.DATA_ONCHANGE_BLANK_ATTRIBUTE_NAME) +
                "]");
            if (inputElement) {
                inputElement.value = '';
            }
        }
    }
    onChangeValueFormElementHandler(event) {
        FormService.process(event);
        event.preventDefault();
    }
    onBlurFormElementHandler(event) {
        var _element = event.target;
        var _value = FormService.getValue(_element);
        if (StringUtils.hasLength(_value)) {
            FormService.process(event);
        }
        else {
            var _form = _element.form;
            var _dataErrorParent = _form.querySelector("[" +
                FormAttributes.DATA_FOR_ATTRIBUTE_NAME +
                "=" +
                _element.id +
                "]");
            if (_dataErrorParent) {
                var _errorMessageNode = FormService.getErrorMessageNode(_dataErrorParent);
                _errorMessageNode.classList.add("hidden");
            }
        }
        event.preventDefault();
    }
    onInvalidateFormElementHandler(event) {
        FormService.process(event);
        event.preventDefault();
    }
    getPayload() {
        var _result = {};
        var _elements = this.getFormElements();
        _elements.forEach((_element) => {
            _result[this.getPayloadNameForElement(_element)] = FormService.getValue(_element);
        });
        return _result;
    }
    submitForm(e) {
        this.formSubmit.emit(e);
        e.preventDefault();
    }
    getFormElements() {
        return this.formEl.querySelectorAll("input[" +
            FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
            "], select[" +
            FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
            "], textarea[" +
            FormAttributes.DATA_FIELD_ATTRUBITE_NAME +
            "]");
    }
    getPayloadNameForElement(element) {
        if (DomUtils.hasValidStringAttribute(element, FormAttributes.DATA_FIELD_ATTRUBITE_NAME)) {
            return element.getAttribute(FormAttributes.DATA_FIELD_ATTRUBITE_NAME);
        }
        else if (DomUtils.hasValidStringAttribute(element, "name")) {
            return element.getAttribute("name");
        }
        throw "Element " + element + " does not have a payload name.";
    }
    render() {
        return (h("form", { ref: (el) => (this.formEl = el), onSubmit: (e) => {
                this.submitForm(e);
            } }, h("slot", null)));
    }
    static get style() { return formComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-form",
        "$members$": {
            "text": [513],
            "submitCallBackhandler": [8, "submit-call-backhandler"],
            "openErrorModal": [64],
            "openSuccessModal": [64],
            "reset": [64],
            "getData": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["text", "text"]]
    }; }
}

class GetAQuoteExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("snt-layout", null, h("snt-form", null, h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "last-name" }, "Last Name"), h("input", { "data-field": "lastName", required: true, "aria-required": "true", minlength: "1", maxlength: "30", type: "text", class: "form-control", id: "last-name", "aria-describedby": "lastName_error" }), h("div", { "data-for": "last-name", id: "lastName_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Error empty value"), h("div", { "data-error": true, "data-special-character": true, class: "hidden", "aria-hidden": "false" }, "Error special characters"), h("div", { "data-error": true, "data-min-length": true, class: "hidden", "aria-hidden": "false" }, "Error min length"), h("div", { "data-error": true, "data-max-length": true, class: "hidden", "aria-hidden": "false" }, "Error max length")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "pay" }, "Currency"), h("span", { class: "currency-input" }, h("input", { "data-field": "pay", type: "text", class: "form-control", id: "pay", name: "pay", required: true, "aria-required": "true", minlength: "2", maxlength: "30", "aria-describedby": "pay_error" })), h("div", { "data-for": "pay", id: "pay_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Currency is blank"), h("div", { "data-error": true, "data-currency-format": true, class: "hidden", "aria-hidden": "false" }, "Invalid currency format")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "crm-email" }, "Email"), h("input", { "data-field": "email", required: true, "aria-required": "true", type: "text", class: "form-control", id: "crm-email", "aria-describedby": "email_error" }), h("div", { "data-for": "crm-email", id: "email_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Error empty value"), h("div", { "data-error": true, "data-email": true, class: "hidden", "aria-hidden": "false" }, "Email format invalid")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "email-confirmation" }, "Email confirmation"), h("input", { "data-field": "emailConfirmation", required: true, "aria-required": "true", type: "text", class: "form-control", id: "email-confirmation", "data-email-id": "crm-email", "aria-describedby": "emailConfirmation_error" }), h("div", { "data-for": "email-confirmation", id: "emailConfirmation_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Error empty value"), h("div", { "data-error": true, "data-email-confirmation": true, class: "hidden", "aria-hidden": "false" }, "Emails must match")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "coverageEnd" }, "End Date"), h("input", { "data-field": "coverageEnd", required: true, "aria-required": "true", type: "coverageEnd", class: "form-control", id: "coverageEnd", "data-onchange-blank": "coverageStart", placeholder: "MM/DD/YY", "aria-describedby": "coverageEnd_error" }), h("div", { "data-for": "coverageEnd", id: "coverageEnd_error" }, h("div", { "data-error": "data-error", "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Date can't be blank"), h("div", { "data-error": "data-error", "data-date-format": true, class: "hidden", "aria-hidden": "false" }, "Please provide proper date format"), h("div", { "data-error": "data-error", "data-date-past": true, class: "hidden", "aria-hidden": "false" }, "Date can't be in past"), h("div", { "data-error": "data-error", "data-date-exceeds-one-year-today": true, class: "hidden", "aria-hidden": "false" }, "Date cannot be more than one year from today")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "coverageStart" }, "Start Date"), h("input", { "data-field": "coverageStart", required: true, "aria-required": "true", type: "coverageStart", class: "form-control", id: "coverageStart", placeholder: "MM/DD/YY", "data-preceeds": "coverageEnd", "data-exceeds": "coverageEnd", "aria-describedby": "coverageStart_error" }), h("div", { "data-for": "coverageStart", id: "coverageStart_error" }, h("div", { "data-error": "data-error", "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Date can't be blank"), h("div", { "data-error": "data-error", "data-date-format": true, class: "hidden", "aria-hidden": "false" }, "Please provide proper date format"), h("div", { "data-error": "data-error", "data-date-preceeds-one-year": true, class: "hidden", "aria-hidden": "false" }, "Date cannot be more than one year before coverage end"), h("div", { "data-error": "data-error", "data-date-exceeds": true, class: "hidden", "aria-hidden": "false" }, "Date cannot be greater than coverage end")))), h("div", { class: "form-row" }, h("div", { class: "col-12 col-sm-6" }, h("label", { "html-for": "interest" }, "Interested in"), h("snt-dropdown", { name: "interest", "placeholder-text": "Select", labelText: "Interested in", required: true }, h("snt-options", null, h("snt-item", { "data-key": "one", value: "One" }), h("snt-item", { "data-key": "two", value: "Two" }))), h("div", { "data-for": "interest", id: "interest_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Error empty value")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("label", { "html-for": "copy" }, "Copy"), h("textarea", { "data-field": "copy", required: true, "aria-required": "true", class: "form-control", id: "copy", "aria-describedby": "copy_error" }), h("div", { "data-for": "copy", id: "copy_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Error empty value")))), h("div", { class: "form-row" }, h("div", { class: "col" }, h("snt-recaptcha", { sitekey: "6LdN6sEZAAAAAHZKlAlCNR7SX5DljuJ50N9loEvB" }), h("div", { slot: "error-messages", "data-for": "recaptcha", id: "recaptcha_error" }, h("div", { "data-error": true, "data-empty-value": true, class: "hidden", "aria-hidden": "false" }, "Please confirm you are not a robot")))), h("snt-button", { class: "submit-button", "style-classes": "cta theme-default" }, "Submit"))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "form-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const searchBarComponentCss = "snt-search-bar{display:none}snt-search-bar snt-pane{position:absolute;top:100%;left:0;right:0;background-color:#323232;border-top:1px solid #fcfcfc;padding:0.625rem 0;display:none}snt-search-bar[active]{display:block}snt-search-bar[active] snt-backdrop{display:block}snt-search-bar snt-search-typeahead{margin:0 0.75rem}snt-search-bar snt-search-typeahead+* snt-icon{font-size:0.875rem}";

var __awaiter$f = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class SearchBarComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.languageJson = StringUtils.empty();
    }
    toggleActive(active) {
        return __awaiter$f(this, void 0, void 0, function* () {
            this.active = (typeof (active) === "boolean") || !this.active;
            return this.active;
        });
    }
    watchActive(active) {
        if (active) {
            this.lastActiveElement = document.activeElement;
        }
    }
    componentDidUpdate() {
        this.setFocus();
    }
    setFocus() {
        if (this.active) {
            const input = this.searchTypeahead.querySelector("input");
            if (input) {
                input.focus();
            }
        }
        else {
            this.lastActiveElement.focus();
        }
    }
    render() {
        return (h(Host, { onSntBackdropTap: this.toggleActive.bind(this) }, h("snt-pane", { styleClasses: "d-flex justify-content-center align-items-center" }, h("snt-search-typeahead", { "search-combobox-id": "global-search-combobox", ref: (el) => this.searchTypeahead = el, languageJson: this.languageJson }), h("snt-action-button", { "action-reference": "Action.toggleSearch", "icon-class-name": "iconNavClose" })), ",", h("snt-backdrop", null)));
    }
    static get watchers() { return {
        "active": ["watchActive"]
    }; }
    static get style() { return searchBarComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-bar",
        "$members$": {
            "active": [516],
            "styleClasses": [513, "style-classes"],
            "languageJson": [513, "language-json"],
            "toggleActive": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["active", "active"], ["styleClasses", "style-classes"], ["languageJson", "language-json"]]
    }; }
}
SearchBarComponent.TAG_NAME = "snt-search-bar";

const searchPanelComponentCss = "snt-search-panel{position:absolute;top:0;bottom:0;left:0;right:0;display:-ms-flexbox;display:flex;-ms-flex-flow:column nowrap;flex-flow:column nowrap;-webkit-transform:translateX(-100%);transform:translateX(-100%);-webkit-transition:0.3s ease-out;transition:0.3s ease-out;background-color:#323232;padding:15px 30px 30px}snt-search-panel:not(.active){visibility:hidden}snt-search-panel[active]{-webkit-transform:translateX(0%);transform:translateX(0%);visibility:visible}@media (min-width: 1024px){snt-search-panel{display:none}}snt-search-panel snt-search-typeahead{margin-top:1.25rem}snt-search-panel snt-action-button snt-icon{margin-right:0.5rem;-webkit-transform:rotate(180deg);transform:rotate(180deg);display:inline-block}";

var __awaiter$g = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class SearchPanelComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.languageStrings = {};
        this.active = false;
        this.styleClasses = StringUtils.empty();
        this.languageJson = StringUtils.empty();
    }
    toggleActive(active) {
        return __awaiter$g(this, void 0, void 0, function* () {
            this.active = (typeof (active) === "boolean") ? active : !this.active;
            return this.active;
        });
    }
    componentWillLoad() {
        try {
            this.languageJson && (this.languageStrings = JSON.parse(this.languageJson));
        }
        catch (e) {
            console.error(e);
        }
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("snt-action-button", { actionReference: "Action.toggleSearch", linkTitle: this.languageStrings["back"] || "Back", iconClassName: "iconChevron" }), h("snt-search-typeahead", { "search-combobox-id": "global-search-panel-combobox", languageJson: this.languageJson })));
    }
    static get style() { return searchPanelComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-panel",
        "$members$": {
            "active": [516],
            "styleClasses": [1, "style-classes"],
            "languageJson": [513, "language-json"],
            "toggleActive": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["active", "active"], ["languageJson", "language-json"]]
    }; }
}
SearchPanelComponent.TAG_NAME = "snt-search-panel";

const headerComponentCss = "snt-header{position:relative;display:block;width:100%;z-index:99;background-color:#323232}snt-header[fixed]{position:-webkit-sticky;position:sticky;top:0;left:0;right:0}@media (max-width: 1023px){snt-header[active] .brand-and-toggle,snt-header[active] .actions-nav,snt-header[active] snt-pane{display:none}snt-header[active] header{padding:0}}snt-header header{position:relative;padding:1.125rem 0;margin:0 auto}snt-header snt-layout .spacings{overflow:visible}snt-header snt-nav[slot=secondary-nav-mobile]{display:-ms-flexbox;display:flex}@media (min-width: 1024px){snt-header snt-nav[slot=secondary-nav-mobile]{display:none}}snt-header snt-nav[slot=secondary-nav-mobile] snt-nav-item{margin:0 0 0.625rem 0}snt-header snt-nav[slot=secondary-nav-desktop]{display:none}@media (min-width: 768px){snt-header snt-nav[slot=secondary-nav-desktop]{display:-ms-flexbox;display:flex}}snt-header snt-nav[slot=secondary-nav-desktop] snt-nav-item{margin:0 0 0.625rem 0}@media (min-width: 768px){snt-header snt-nav[slot=secondary-nav-desktop] snt-nav-item{margin:0 0 0 1.65rem}}snt-header snt-navbar-collapse{overflow:hidden;position:relative}@media (min-width: 768px){snt-header snt-navbar-collapse{overflow:visible}}snt-header snt-navbar-collapse{-ms-flex-order:1;order:1}@media (min-width: 768px){snt-header snt-navbar-collapse{-ms-flex-order:initial;order:initial}}snt-header snt-navbar{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap}snt-header snt-button{white-space:nowrap}snt-header snt-button button{background:transparent;border:none;color:white}snt-header snt-link a{background-image:none;color:#ffffff}snt-header snt-link a:hover,snt-header snt-link a:focus{background-image:none}snt-header snt-skip-to-main a{font-family:Averta-ExtraBold;color:#6ebac5;text-decoration:none}snt-header snt-skip-to-main a:focus{outline:0.125rem solid #b2b2b2;outline-offset:0px}snt-header .header-container{width:100%;max-width:1440px;margin:auto}";

var __awaiter$h = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class HeaderComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
        this.fixed = false;
        this.languageJson = StringUtils.empty();
        this.mainContentId = StringUtils.empty();
        this.active = false;
        this.shrunk = false;
        this.languageStrings = {};
        this.focusTrap = null;
        this.gaqButtonActionData = null;
    }
    onToggleSearch(evt) {
        evt.composedPath().includes(this.secondaryNavDesktop) || evt.composedPath().includes(this.searchBar)
            ? this.searchBar.toggleActive().then((active) => {
                this.toggleFocusTrap(active);
            })
            : this.searchPanel.toggleActive().then((active) => {
                if (active) {
                    this.mainPanel.classList.add("hidden");
                }
                else {
                    this.mainPanel.classList.remove("hidden");
                    this.navbarCollapse.focus();
                }
            });
    }
    toggleActive(active) {
        return __awaiter$h(this, void 0, void 0, function* () {
            this.active = (typeof (active) === "boolean") ? active : !this.active;
            this.toggleFocusTrap(this.active);
            return Promise.resolve(this.active);
        });
    }
    setActive(active) {
        return __awaiter$h(this, void 0, void 0, function* () {
            this.active = active;
            this.toggleFocusTrap(this.active);
            return Promise.resolve(this.active);
        });
    }
    onScroll(_evt) {
        this.fixed && this.shrink();
    }
    onViewportChanged() {
        if (this.navbarCollapse) {
            this.navbarCollapse.viewport = this.layout.viewport;
        }
    }
    componentWillLoad() {
        try {
            this.languageStrings = JSON.parse(this.languageJson);
        }
        catch (e) {
            console.error(e);
        }
        this.gaqButtonActionData = JSON.stringify({
            getAQuoteUrl: this.languageStrings["getAQuoteUrl"],
            languageString: {
                close: this.languageStrings["close"]
            }
        });
    }
    componentDidLoad() {
        this.fixed && this.shrink();
        this.registersubComponents();
        this.setSubComponentClasses();
        this.insertAdditionalElements();
        this.focusTrap = focusTrap_1(this.element, {});
        this.searchBar = this.element.querySelector(SearchBarComponent.TAG_NAME);
        this.searchPanel = this.element.querySelector(SearchPanelComponent.TAG_NAME);
    }
    registersubComponents() {
        this.secondaryNavDesktop = this.element.querySelector(`[slot=${HeaderComponent.SECONDARY_NAV_DESKTOP_SLOT_NAME}]`);
        this.secondaryNavMobile = this.element.querySelector(`[slot=${HeaderComponent.SECONDARY_NAV_MOBILE_SLOT_NAME}]`);
        this.primaryNav = this.element.querySelector(`[slot=${HeaderComponent.PRIMARY_NAV_SLOT_NAME}]`);
    }
    setSubComponentClasses() {
        this.secondaryNavDesktop.classList.add("theme-header-nav", "flex-row", "justify-content-end", "secondary-nav");
        this.secondaryNavMobile.classList.add("theme-header-nav", "secondary-nav");
        this.primaryNav.classList.add("main-nav", "theme-header-nav");
    }
    insertAdditionalElements() {
        const searchButtonHTML = `<snt-nav-item><snt-action-button action-reference="Action.toggleSearch" icon-class-name="iconNavSearch" link-title="${this.languageStrings["search"] || "Search"}"></snt-action-button> </snt-nav-item>`;
        (!this.secondaryNavDesktop.querySelector(ActionButtonComponent.TAG_NAME) &&
            this.secondaryNavDesktop.insertAdjacentHTML("beforeend", searchButtonHTML));
        (!this.secondaryNavMobile.querySelector(ActionButtonComponent.TAG_NAME) &&
            this.secondaryNavMobile.insertAdjacentHTML("beforeend", searchButtonHTML));
    }
    shrink() {
        if (this.secondaryNavPane) {
            if (!this.shrunk && (this.element.offsetTop + window.scrollY) > (this.element.offsetTop + this.element.offsetHeight)) {
                this.secondaryNavPane.collapsed = true;
                this.shrunk = true;
            }
            else if (window.scrollY == 0 && this.shrunk) {
                this.secondaryNavPane.collapsed = false;
                this.shrunk = false;
            }
        }
    }
    toggleFocusTrap(active) {
        active ? this.focusTrap.activate() : this.focusTrap.deactivate();
    }
    render() {
        return (h(Host, { onSntBackdropTap: () => this.setActive(false), onNavbarToggled: () => this.toggleActive() }, h("div", { class: "header-container" }, h("snt-layout", { padding: "vertical-only", ref: (elem) => this.layout = elem }, h("header", { class: WebUtils.generateClasses(["header"], this.styleClasses) }, h("snt-skip-to-main", { "main-content-id": `#${this.mainContentId}` }, this.languageStrings["skipToMainContent"] || "Skip to main content"), h("snt-pane", { animated: true, ref: (elem) => this.secondaryNavPane = elem }, h("slot", { name: HeaderComponent.SECONDARY_NAV_DESKTOP_SLOT_NAME })), h("snt-navbar", { "style-classes": "navbar-expand-lg", "language-string": this.languageJson }, h("div", { slot: HeaderComponent.NAVBAR_BRAND_SLOT_NAME }, h("slot", { name: HeaderComponent.NAVBAR_BRAND_SLOT_NAME })), h("snt-navbar-collapse", { id: "navbar-collapse", slot: "navbar-collapse", "logo-url": this.languageStrings["logoUrl"], ref: (elem) => this.navbarCollapse = elem }, h("div", { class: "main-panel", ref: (elem) => this.mainPanel = elem }, h("snt-action-button", { "button-id": "get-a-quote-m-header", actionReference: "Action.openGetQuoteModal", linkTitle: this.languageStrings["gaq"] || "Get a Quote", actionData: this.gaqButtonActionData, styleClasses: "gaq-mobile cta theme-headerNav d-flex d-lg-none" }), h("slot", { name: HeaderComponent.PRIMARY_NAV_SLOT_NAME }), h("slot", { name: HeaderComponent.SECONDARY_NAV_MOBILE_SLOT_NAME })), h("snt-search-panel", { class: "hidden", languageJson: this.languageJson })), h("snt-nav", { id: "actions-nav", class: "actions-nav theme-header-nav", expander: "false" }, h("snt-nav-item", null, h("snt-shopping-cart", null, " ")), h("snt-nav-item", { styleClasses: "d-none d-md-flex" }, h("snt-action-button", { "button-id": "get-a-quote-header", styleClasses: "cta theme-headerNav", actionReference: "Action.openGetQuoteModal", actionData: this.gaqButtonActionData, linkTitle: this.languageStrings["gaq"] || "Get a Quote" }, " ")), h("snt-nav-item", null, h("slot", { name: "login-slot" }))))), h("snt-search-bar", { languageJson: this.languageJson })))));
    }
    get element() { return getElement(this); }
    static get style() { return headerComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-header",
        "$members$": {
            "styleClasses": [513, "style-classes"],
            "fixed": [516],
            "languageJson": [513, "language-json"],
            "mainContentId": [513, "main-content-id"],
            "active": [516],
            "toggleActive": [64],
            "setActive": [64]
        },
        "$listeners$": [[0, "toggleSearch", "onToggleSearch"], [9, "scroll", "onScroll"], [16, "viewportChanged", "onViewportChanged"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"], ["fixed", "fixed"], ["languageJson", "language-json"], ["mainContentId", "main-content-id"], ["active", "active"]]
    }; }
}
HeaderComponent.TAG_NAME = "snt-header";
HeaderComponent.SECONDARY_NAV_DESKTOP_SLOT_NAME = "secondary-nav-desktop";
HeaderComponent.SECONDARY_NAV_MOBILE_SLOT_NAME = "secondary-nav-mobile";
HeaderComponent.PRIMARY_NAV_SLOT_NAME = "primary-nav";
HeaderComponent.NAVBAR_BRAND_SLOT_NAME = "navbar-brand";

class HeaderExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        const langJsonEn = `{"search": "Search", "toggleNavigation":"toggleNavigation","close":"Close","searchUrl":"https://www.sonnet.ca/search.aspx","login":"Log In","gaq":"Get a Quote","back":"Back","skipToMainContent":"Skip to main content","getAQuoteUrl":"http://localhost:3333/getAQuote.html"}`;
        //const langJsonFr = `{\"search\":\"Rechercher\",\"login\":\"Connexion\",\"gaq\":\"Obtenir une soumission\",\"back\":\"retourner\",\"skipToMainContent\":\"Aller au contenu principal\"}`;
        return [
            h("snt-header", { fixed: true, "style-classes": "theme-primary", "language-json": langJsonEn }, h("snt-nav", { slot: "secondary-nav-desktop", id: "secondary-nav-desktop" }, h("snt-nav-item", { href: "?contact-us", target: "_self", "link-title": "Contact Us" }), h("snt-nav-item", { href: "?about-us", target: "_self", "link-title": "About Us" }), h("snt-nav-item", { href: "?fr", target: "_self", "link-title": "Fran\u00E7ais" })), h("snt-nav", { slot: "secondary-nav-mobile", id: "secondary-nav-mobile" }, h("snt-nav-item", { href: "?contact-us", target: "_self", linkTitle: "Contact Us" }), h("snt-nav-item", { href: "?about-us", target: "_self", linkTitle: "About Us" }), h("snt-nav-item", { href: "?fr", target: "_self", "link-title": "Fran\u00E7ais" })), h("snt-nav", { slot: "primary-nav", id: "main-nav", expander: "keyboard" }, h("snt-nav-item", { href: "?insurance", target: "_self", "link-title": "Insurance" }, h("snt-nav-item", { href: "?auto-insurance", target: "_self", "link-title": "Auto" }), h("snt-nav-item", { href: "?home-insurance", target: "_self", "link-title": "Home" }), h("snt-nav-item", { href: "?tenant-insurance", target: "_self", "link-title": "Tenant" })), h("snt-nav-item", { href: "?sonnet-connect", target: "_self", "link-title": "Sonnet Connect" }), h("snt-nav-item", { href: "?claims", target: "_self", "link-title": "Claims" })))
        ];
    }
    static get style() { return "#sidebar-wrapper { min-height: 125vh; }"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "header-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect$1;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof commonjsGlobal === "object" ? commonjsGlobal :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect$1 || (Reflect$1 = {}));

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global_1 =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func
  (function () { return this; })() || Function('return this')();

var fails = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var descriptors = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
var f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;

var objectPropertyIsEnumerable = {
	f: f
};

var createPropertyDescriptor = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var toString = {}.toString;

var classofRaw = function (it) {
  return toString.call(it).slice(8, -1);
};

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings



var toIndexedObject = function (it) {
  return indexedObject(requireObjectCoercible(it));
};

var isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var toPrimitive = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var hasOwnProperty$1 = {}.hasOwnProperty;

var has = function (it, key) {
  return hasOwnProperty$1.call(it, key);
};

var document$1 = global_1.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document$1) && isObject(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS ? document$1.createElement(it) : {};
};

// Thank's IE8 for his funny defineProperty
var ie8DomDefine = !descriptors && !fails(function () {
  return Object.defineProperty(documentCreateElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
var f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (ie8DomDefine) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);
};

var objectGetOwnPropertyDescriptor = {
	f: f$1
};

var anObject = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
var f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (ie8DomDefine) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var objectDefineProperty = {
	f: f$2
};

var createNonEnumerableProperty = descriptors ? function (object, key, value) {
  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var setGlobal = function (key, value) {
  try {
    createNonEnumerableProperty(global_1, key, value);
  } catch (error) {
    global_1[key] = value;
  } return value;
};

var SHARED = '__core-js_shared__';
var store = global_1[SHARED] || setGlobal(SHARED, {});

var sharedStore = store;

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof sharedStore.inspectSource != 'function') {
  sharedStore.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

var inspectSource = sharedStore.inspectSource;

var WeakMap$1 = global_1.WeakMap;

var nativeWeakMap = typeof WeakMap$1 === 'function' && /native code/.test(inspectSource(WeakMap$1));

var shared = createCommonjsModule(function (module) {
(module.exports = function (key, value) {
  return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.8.1',
  mode:  'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});
});

var id = 0;
var postfix = Math.random();

var uid = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};

var keys = shared('keys');

var sharedKey = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys = {};

var WeakMap$2 = global_1.WeakMap;
var set, get, has$1;

var enforce = function (it) {
  return has$1(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (nativeWeakMap) {
  var store$1 = sharedStore.state || (sharedStore.state = new WeakMap$2());
  var wmget = store$1.get;
  var wmhas = store$1.has;
  var wmset = store$1.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store$1, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store$1, it) || {};
  };
  has$1 = function (it) {
    return wmhas.call(store$1, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return has(it, STATE) ? it[STATE] : {};
  };
  has$1 = function (it) {
    return has(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has$1,
  enforce: enforce,
  getterFor: getterFor
};

var redefine = createCommonjsModule(function (module) {
var getInternalState = internalState.get;
var enforceInternalState = internalState.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global_1) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});
});

var path = global_1;

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

var getBuiltIn = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace])
    : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
};

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
var toInteger = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
var toLength = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var indexOf = arrayIncludes.indexOf;


var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal(O, hiddenKeys$1);
};

var objectGetOwnPropertyNames = {
	f: f$3
};

var f$4 = Object.getOwnPropertySymbols;

var objectGetOwnPropertySymbols = {
	f: f$4
};

// all object keys, includes non-enumerable and symbols
var ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = objectGetOwnPropertyNames.f(anObject(it));
  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};

var copyConstructorProperties = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = objectDefineProperty.f;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

var isForced_1 = isForced;

var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;






/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global_1;
  } else if (STATIC) {
    target = global_1[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global_1[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
var isArray = Array.isArray || function isArray(arg) {
  return classofRaw(arg) == 'Array';
};

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
var toObject = function (argument) {
  return Object(requireObjectCoercible(argument));
};

var createProperty = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};

var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});

var useSymbolAsUid = nativeSymbol
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';

var WellKnownSymbolsStore = shared('wks');
var Symbol$1 = global_1.Symbol;
var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;

var wellKnownSymbol = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
var arraySpeciesCreate = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};

var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';

var process$1 = global_1.process;
var versions = process$1 && process$1.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (engineUserAgent) {
  match = engineUserAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = engineUserAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

var engineV8Version = version && +version;

var SPECIES$1 = wellKnownSymbol('species');

var arrayMethodHasSpeciesSupport = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return engineV8Version >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES$1] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
_export({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

var toStringTagSupport = String(test) === '[object z]';

var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof = toStringTagSupport ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG$1)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
var objectToString = toStringTagSupport ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!toStringTagSupport) {
  redefine(Object.prototype, 'toString', objectToString, { unsafe: true });
}

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
var objectKeys = Object.keys || function keys(O) {
  return objectKeysInternal(O, enumBugKeys);
};

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);
  return O;
};

var html = getBuiltIn('document', 'documentElement');

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : objectDefineProperties(result, Properties);
};

var nativeGetOwnPropertyNames = objectGetOwnPropertyNames.f;

var toString$1 = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var f$5 = function getOwnPropertyNames(it) {
  return windowNames && toString$1.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};

var objectGetOwnPropertyNamesExternal = {
	f: f$5
};

var f$6 = wellKnownSymbol;

var wellKnownSymbolWrapped = {
	f: f$6
};

var defineProperty = objectDefineProperty.f;

var defineWellKnownSymbol = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wellKnownSymbolWrapped.f(NAME)
  });
};

var defineProperty$1 = objectDefineProperty.f;



var TO_STRING_TAG$2 = wellKnownSymbol('toStringTag');

var setToStringTag = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG$2)) {
    defineProperty$1(it, TO_STRING_TAG$2, { configurable: true, value: TAG });
  }
};

var aFunction$1 = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};

// optional / simple context binding
var functionBindContext = function (fn, that, length) {
  aFunction$1(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod$1 = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = indexedObject(O);
    var boundFunction = functionBindContext(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

var arrayIteration = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod$1(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod$1(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod$1(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod$1(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod$1(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod$1(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod$1(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod$1(7)
};

var $forEach = arrayIteration.forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE$1 = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = internalState.set;
var getInternalState = internalState.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE$1];
var $Symbol = global_1.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var nativeDefineProperty$1 = objectDefineProperty.f;
var nativeGetOwnPropertyNames$1 = objectGetOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable$1 = objectPropertyIsEnumerable.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore$1 = shared('wks');
var QObject = global_1.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE$1] || !QObject[PROTOTYPE$1].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = descriptors && fails(function () {
  return objectCreate(nativeDefineProperty$1({}, 'a', {
    get: function () { return nativeDefineProperty$1(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty$1(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty$1(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty$1;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = objectCreate($Symbol[PROTOTYPE$1]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!descriptors) symbol.description = description;
  return symbol;
};

var isSymbol = useSymbolAsUid ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty$1(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = objectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty$1(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!descriptors || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? objectCreate(O) : $defineProperties(objectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable$1.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames$1(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames$1(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!nativeSymbol) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (descriptors && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE$1], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  objectPropertyIsEnumerable.f = $propertyIsEnumerable;
  objectDefineProperty.f = $defineProperty;
  objectGetOwnPropertyDescriptor.f = $getOwnPropertyDescriptor;
  objectGetOwnPropertyNames.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;

  wellKnownSymbolWrapped.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (descriptors) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty$1($Symbol[PROTOTYPE$1], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

_export({ global: true, wrap: true, forced: !nativeSymbol, sham: !nativeSymbol }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore$1), function (name) {
  defineWellKnownSymbol(name);
});

_export({ target: SYMBOL, stat: true, forced: !nativeSymbol }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

_export({ target: 'Object', stat: true, forced: !nativeSymbol, sham: !descriptors }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

_export({ target: 'Object', stat: true, forced: !nativeSymbol }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
_export({ target: 'Object', stat: true, forced: fails(function () { objectGetOwnPropertySymbols.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return objectGetOwnPropertySymbols.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !nativeSymbol || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  _export({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE$1][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE$1], TO_PRIMITIVE, $Symbol[PROTOTYPE$1].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;

// `Symbol.asyncIterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol('asyncIterator');

var defineProperty$2 = objectDefineProperty.f;


var NativeSymbol = global_1.Symbol;

if (descriptors && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty$2(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  _export({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}

// `Symbol.hasInstance` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.hasinstance
defineWellKnownSymbol('hasInstance');

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable
defineWellKnownSymbol('isConcatSpreadable');

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');

// `Symbol.match` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.match
defineWellKnownSymbol('match');

// `Symbol.matchAll` well-known symbol
defineWellKnownSymbol('matchAll');

// `Symbol.replace` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.replace
defineWellKnownSymbol('replace');

// `Symbol.search` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.search
defineWellKnownSymbol('search');

// `Symbol.species` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.species
defineWellKnownSymbol('species');

// `Symbol.split` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.split
defineWellKnownSymbol('split');

// `Symbol.toPrimitive` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol('toPrimitive');

// `Symbol.toStringTag` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.tostringtag
defineWellKnownSymbol('toStringTag');

// `Symbol.unscopables` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.unscopables
defineWellKnownSymbol('unscopables');

// JSON[@@toStringTag] property
// https://tc39.github.io/ecma262/#sec-json-@@tostringtag
setToStringTag(global_1.JSON, 'JSON', true);

// Math[@@toStringTag] property
// https://tc39.github.io/ecma262/#sec-math-@@tostringtag
setToStringTag(Math, 'Math', true);

_export({ global: true }, { Reflect: {} });

// Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag
setToStringTag(global_1.Reflect, 'Reflect', true);

class ViewportConfiguration {
    constructor() {
        this.parameters = new Map();
    }
    addParameters(key, parameters) {
        if (!(this.parameters.has(key))) {
            this.parameters.set(key, new Array());
        }
        let instance = this.parameters.get(key);
        parameters.forEach((el) => instance.push(el));
    }
    getParametersByKey(key) {
        return (this.parameters.has(key)) ? this.parameters.get(key) : new Array();
    }
    hasKey(key) {
        return this.parameters.has(key);
    }
    hasStylesForKey(key) {
        let result = false;
        if (this.hasKey(key)) {
            this.getParametersByKey(key).forEach(parameter => {
                if (parameter.hasStyles()) {
                    result = true;
                }
            });
        }
        return result;
    }
    hasClassesForKey(key) {
        let result = false;
        if (this.hasKey(key)) {
            this.getParametersByKey(key).forEach(parameter => {
                if (parameter.hasClasses()) {
                    result = true;
                }
            });
        }
        return result;
    }
    hasAttributesForKey(key) {
        let result = false;
        if (this.hasKey(key)) {
            this.getParametersByKey(key).forEach(parameter => {
                if (parameter.hasAttributes()) {
                    result = true;
                }
            });
        }
        return result;
    }
    getStyles() {
    }
}

const VIEWPORT_PARAMETERS_META_KEY = Symbol('ViewportParameters');
function ViewportParameters(viewports) {
    function register(target, propertyKey) {
        let configuration = Reflect.getMetadata(VIEWPORT_PARAMETERS_META_KEY, target);
        if (!(configuration)) {
            configuration = new ViewportConfiguration();
            Reflect.defineMetadata(VIEWPORT_PARAMETERS_META_KEY, configuration, target);
        }
        configuration.addParameters(propertyKey, viewports);
    }
    return register;
}

class ViewportStyles {
    constructor(includes, excludes) {
        this.includes = includes;
        this.excludes = excludes;
    }
    hasStyles() {
        return ((this.includes.size > 0) || (this.excludes.size > 0));
    }
    getStyles() {
        return this.includes;
    }
    getExcludedStyles() {
        return this.excludes;
    }
}

class ViewportStylesBuilder {
    constructor() {
        this.includes = new Map();
        this.excludes = new Set();
    }
    static newInstance() {
        return new ViewportStylesBuilder();
    }
    with(name, value) {
        this.includes.set(name, value);
        return this;
    }
    remove(name) {
        this.excludes.add(name);
        return this;
    }
    build() {
        return new ViewportStyles(this.includes, this.excludes);
    }
}

class ViewportAttributes {
    constructor(includes, excludes) {
        this.includes = includes;
        this.excludes = excludes;
    }
    hasAttributes() {
        return ((this.includes.size > 0) || (this.excludes.size > 0));
    }
    getAttributes() {
        return this.includes;
    }
    getExcludedAttributes() {
        return this.excludes;
    }
}

class ViewportAttributesBuilder {
    constructor() {
        this.includes = new Map();
        this.excludes = new Set();
    }
    static newInstance() {
        return new ViewportAttributesBuilder();
    }
    with(name, value) {
        this.includes.set(name, value);
        return this;
    }
    remove(name) {
        this.excludes.add(name);
        return this;
    }
    build() {
        return new ViewportAttributes(this.includes, this.excludes);
    }
}

class ViewportParameter {
    constructor(width, height, styles, classes, attributes) {
        this.width = width;
        this.height = height;
        this.styles = styles;
        this.classes = classes;
        this.attributes = attributes;
    }
    hasStyles() {
        return ((this.styles) && (this.styles.hasStyles()));
    }
    hasClasses() {
        return ((this.classes) && (this.classes.hasClasses()));
    }
    hasAttributes() {
        return ((this.attributes) && (this.attributes.hasAttributes()));
    }
    getClasses() {
        return this.classes;
    }
    getStyles() {
        return this.styles;
    }
    getAttributes() {
        return this.attributes;
    }
    getWidth() {
        return this.width;
    }
    getHeigth() {
        return this.height;
    }
    inRange(width, height) {
        return (((!(this.width)) || (this.width.inRange(width))) && ((!(this.height)) || (this.height.inRange(height))));
    }
}

class AbstractViewportDimension {
    constructor(minimum, maximum) {
        this.minimum = minimum;
        this.maximum = maximum;
    }
    inRange(value) {
        return (((this.minimum) ? (value >= this.minimum) : true) && ((this.maximum) ? (value <= this.maximum) : true));
    }
}

class HeightViewportDimension extends AbstractViewportDimension {
}

class WidthViewportDimension extends AbstractViewportDimension {
}

class ViewportParameterBuilder {
    constructor() { }
    static newInstance() {
        return new ViewportParameterBuilder();
    }
    withWidth(minimum, maximum) {
        this.width = ((minimum || maximum) ? new WidthViewportDimension(minimum, maximum) : null);
        return this;
    }
    withHeight(minimum, maximum) {
        this.height = ((minimum || maximum) ? new HeightViewportDimension(minimum, maximum) : null);
        return this;
    }
    withStyles(styles) {
        this.styles = styles;
        return this;
    }
    withClasses(classes) {
        this.classes = classes;
        return this;
    }
    withAttributes(attributes) {
        this.attributes = attributes;
        return this;
    }
    build() {
        return new ViewportParameter(this.width, this.height, this.styles, this.classes, this.attributes);
    }
}

class DecoratorUtils {
    static getPropertyDecorator(target, name) {
        return Reflect.getMetadata(name, target);
    }
}

var ViewportProcessorTypeEnum;
(function (ViewportProcessorTypeEnum) {
    ViewportProcessorTypeEnum[ViewportProcessorTypeEnum["STYLES"] = 0] = "STYLES";
    ViewportProcessorTypeEnum[ViewportProcessorTypeEnum["CLASSES"] = 1] = "CLASSES";
    ViewportProcessorTypeEnum[ViewportProcessorTypeEnum["ATTRIBUTES"] = 2] = "ATTRIBUTES";
})(ViewportProcessorTypeEnum || (ViewportProcessorTypeEnum = {}));

var TemplateTypeEnum;
(function (TemplateTypeEnum) {
    TemplateTypeEnum[TemplateTypeEnum["MUSTACHE"] = 0] = "MUSTACHE";
    TemplateTypeEnum[TemplateTypeEnum["HANDLEBARS"] = 1] = "HANDLEBARS";
})(TemplateTypeEnum || (TemplateTypeEnum = {}));

var mustache = createCommonjsModule(function (module, exports) {
// This file has been generated from mustache.mjs
(function (global, factory) {
   module.exports = factory() ;
}(commonjsGlobal, (function () {
  /*!
   * mustache.js - Logic-less {{mustache}} templates with JavaScript
   * http://github.com/janl/mustache.js
   */

  var objectToString = Object.prototype.toString;
  var isArray = Array.isArray || function isArrayPolyfill (object) {
    return objectToString.call(object) === '[object Array]';
  };

  function isFunction (object) {
    return typeof object === 'function';
  }

  /**
   * More correct typeof string handling array
   * which normally returns typeof 'object'
   */
  function typeStr (obj) {
    return isArray(obj) ? 'array' : typeof obj;
  }

  function escapeRegExp (string) {
    return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
  }

  /**
   * Null safe way of checking whether or not an object,
   * including its prototype, has a given property
   */
  function hasProperty (obj, propName) {
    return obj != null && typeof obj === 'object' && (propName in obj);
  }

  /**
   * Safe way of detecting whether or not the given thing is a primitive and
   * whether it has the given property
   */
  function primitiveHasOwnProperty (primitive, propName) {
    return (
      primitive != null
      && typeof primitive !== 'object'
      && primitive.hasOwnProperty
      && primitive.hasOwnProperty(propName)
    );
  }

  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577
  // See https://github.com/janl/mustache.js/issues/189
  var regExpTest = RegExp.prototype.test;
  function testRegExp (re, string) {
    return regExpTest.call(re, string);
  }

  var nonSpaceRe = /\S/;
  function isWhitespace (string) {
    return !testRegExp(nonSpaceRe, string);
  }

  var entityMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;',
    '`': '&#x60;',
    '=': '&#x3D;'
  };

  function escapeHtml (string) {
    return String(string).replace(/[&<>"'`=\/]/g, function fromEntityMap (s) {
      return entityMap[s];
    });
  }

  var whiteRe = /\s*/;
  var spaceRe = /\s+/;
  var equalsRe = /\s*=/;
  var curlyRe = /\s*\}/;
  var tagRe = /#|\^|\/|>|\{|&|=|!/;

  /**
   * Breaks up the given `template` string into a tree of tokens. If the `tags`
   * argument is given here it must be an array with two string values: the
   * opening and closing tags used in the template (e.g. [ "<%", "%>" ]). Of
   * course, the default is to use mustaches (i.e. mustache.tags).
   *
   * A token is an array with at least 4 elements. The first element is the
   * mustache symbol that was used inside the tag, e.g. "#" or "&". If the tag
   * did not contain a symbol (i.e. {{myValue}}) this element is "name". For
   * all text that appears outside a symbol this element is "text".
   *
   * The second element of a token is its "value". For mustache tags this is
   * whatever else was inside the tag besides the opening symbol. For text tokens
   * this is the text itself.
   *
   * The third and fourth elements of the token are the start and end indices,
   * respectively, of the token in the original template.
   *
   * Tokens that are the root node of a subtree contain two more elements: 1) an
   * array of tokens in the subtree and 2) the index in the original template at
   * which the closing tag for that section begins.
   *
   * Tokens for partials also contain two more elements: 1) a string value of
   * indendation prior to that tag and 2) the index of that tag on that line -
   * eg a value of 2 indicates the partial is the third tag on this line.
   */
  function parseTemplate (template, tags) {
    if (!template)
      return [];
    var lineHasNonSpace = false;
    var sections = [];     // Stack to hold section tokens
    var tokens = [];       // Buffer to hold the tokens
    var spaces = [];       // Indices of whitespace tokens on the current line
    var hasTag = false;    // Is there a {{tag}} on the current line?
    var nonSpace = false;  // Is there a non-space char on the current line?
    var indentation = '';  // Tracks indentation for tags that use it
    var tagIndex = 0;      // Stores a count of number of tags encountered on a line

    // Strips all whitespace tokens array for the current line
    // if there was a {{#tag}} on it and otherwise only space.
    function stripSpace () {
      if (hasTag && !nonSpace) {
        while (spaces.length)
          delete tokens[spaces.pop()];
      } else {
        spaces = [];
      }

      hasTag = false;
      nonSpace = false;
    }

    var openingTagRe, closingTagRe, closingCurlyRe;
    function compileTags (tagsToCompile) {
      if (typeof tagsToCompile === 'string')
        tagsToCompile = tagsToCompile.split(spaceRe, 2);

      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)
        throw new Error('Invalid tags: ' + tagsToCompile);

      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\s*');
      closingTagRe = new RegExp('\\s*' + escapeRegExp(tagsToCompile[1]));
      closingCurlyRe = new RegExp('\\s*' + escapeRegExp('}' + tagsToCompile[1]));
    }

    compileTags(tags || mustache.tags);

    var scanner = new Scanner(template);

    var start, type, value, chr, token, openSection;
    while (!scanner.eos()) {
      start = scanner.pos;

      // Match any text between tags.
      value = scanner.scanUntil(openingTagRe);

      if (value) {
        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {
          chr = value.charAt(i);

          if (isWhitespace(chr)) {
            spaces.push(tokens.length);
            indentation += chr;
          } else {
            nonSpace = true;
            lineHasNonSpace = true;
            indentation += ' ';
          }

          tokens.push([ 'text', chr, start, start + 1 ]);
          start += 1;

          // Check for whitespace on the current line.
          if (chr === '\n') {
            stripSpace();
            indentation = '';
            tagIndex = 0;
            lineHasNonSpace = false;
          }
        }
      }

      // Match the opening tag.
      if (!scanner.scan(openingTagRe))
        break;

      hasTag = true;

      // Get the tag type.
      type = scanner.scan(tagRe) || 'name';
      scanner.scan(whiteRe);

      // Get the tag value.
      if (type === '=') {
        value = scanner.scanUntil(equalsRe);
        scanner.scan(equalsRe);
        scanner.scanUntil(closingTagRe);
      } else if (type === '{') {
        value = scanner.scanUntil(closingCurlyRe);
        scanner.scan(curlyRe);
        scanner.scanUntil(closingTagRe);
        type = '&';
      } else {
        value = scanner.scanUntil(closingTagRe);
      }

      // Match the closing tag.
      if (!scanner.scan(closingTagRe))
        throw new Error('Unclosed tag at ' + scanner.pos);

      if (type == '>') {
        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];
      } else {
        token = [ type, value, start, scanner.pos ];
      }
      tagIndex++;
      tokens.push(token);

      if (type === '#' || type === '^') {
        sections.push(token);
      } else if (type === '/') {
        // Check section nesting.
        openSection = sections.pop();

        if (!openSection)
          throw new Error('Unopened section "' + value + '" at ' + start);

        if (openSection[1] !== value)
          throw new Error('Unclosed section "' + openSection[1] + '" at ' + start);
      } else if (type === 'name' || type === '{' || type === '&') {
        nonSpace = true;
      } else if (type === '=') {
        // Set the tags for the next time around.
        compileTags(value);
      }
    }

    stripSpace();

    // Make sure there are no open sections when we're done.
    openSection = sections.pop();

    if (openSection)
      throw new Error('Unclosed section "' + openSection[1] + '" at ' + scanner.pos);

    return nestTokens(squashTokens(tokens));
  }

  /**
   * Combines the values of consecutive text tokens in the given `tokens` array
   * to a single token.
   */
  function squashTokens (tokens) {
    var squashedTokens = [];

    var token, lastToken;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      if (token) {
        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {
          lastToken[1] += token[1];
          lastToken[3] = token[3];
        } else {
          squashedTokens.push(token);
          lastToken = token;
        }
      }
    }

    return squashedTokens;
  }

  /**
   * Forms the given array of `tokens` into a nested tree structure where
   * tokens that represent a section have two additional items: 1) an array of
   * all tokens that appear in that section and 2) the index in the original
   * template that represents the end of that section.
   */
  function nestTokens (tokens) {
    var nestedTokens = [];
    var collector = nestedTokens;
    var sections = [];

    var token, section;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      switch (token[0]) {
        case '#':
        case '^':
          collector.push(token);
          sections.push(token);
          collector = token[4] = [];
          break;
        case '/':
          section = sections.pop();
          section[5] = token[2];
          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;
          break;
        default:
          collector.push(token);
      }
    }

    return nestedTokens;
  }

  /**
   * A simple string scanner that is used by the template parser to find
   * tokens in template strings.
   */
  function Scanner (string) {
    this.string = string;
    this.tail = string;
    this.pos = 0;
  }

  /**
   * Returns `true` if the tail is empty (end of string).
   */
  Scanner.prototype.eos = function eos () {
    return this.tail === '';
  };

  /**
   * Tries to match the given regular expression at the current position.
   * Returns the matched text if it can match, the empty string otherwise.
   */
  Scanner.prototype.scan = function scan (re) {
    var match = this.tail.match(re);

    if (!match || match.index !== 0)
      return '';

    var string = match[0];

    this.tail = this.tail.substring(string.length);
    this.pos += string.length;

    return string;
  };

  /**
   * Skips all text until the given regular expression can be matched. Returns
   * the skipped string, which is the entire tail if no match can be made.
   */
  Scanner.prototype.scanUntil = function scanUntil (re) {
    var index = this.tail.search(re), match;

    switch (index) {
      case -1:
        match = this.tail;
        this.tail = '';
        break;
      case 0:
        match = '';
        break;
      default:
        match = this.tail.substring(0, index);
        this.tail = this.tail.substring(index);
    }

    this.pos += match.length;

    return match;
  };

  /**
   * Represents a rendering context by wrapping a view object and
   * maintaining a reference to the parent context.
   */
  function Context (view, parentContext) {
    this.view = view;
    this.cache = { '.': this.view };
    this.parent = parentContext;
  }

  /**
   * Creates a new context using the given view with this context
   * as the parent.
   */
  Context.prototype.push = function push (view) {
    return new Context(view, this);
  };

  /**
   * Returns the value of the given name in this context, traversing
   * up the context hierarchy if the value is absent in this context's view.
   */
  Context.prototype.lookup = function lookup (name) {
    var cache = this.cache;

    var value;
    if (cache.hasOwnProperty(name)) {
      value = cache[name];
    } else {
      var context = this, intermediateValue, names, index, lookupHit = false;

      while (context) {
        if (name.indexOf('.') > 0) {
          intermediateValue = context.view;
          names = name.split('.');
          index = 0;

          /**
           * Using the dot notion path in `name`, we descend through the
           * nested objects.
           *
           * To be certain that the lookup has been successful, we have to
           * check if the last object in the path actually has the property
           * we are looking for. We store the result in `lookupHit`.
           *
           * This is specially necessary for when the value has been set to
           * `undefined` and we want to avoid looking up parent contexts.
           *
           * In the case where dot notation is used, we consider the lookup
           * to be successful even if the last "object" in the path is
           * not actually an object but a primitive (e.g., a string, or an
           * integer), because it is sometimes useful to access a property
           * of an autoboxed primitive, such as the length of a string.
           **/
          while (intermediateValue != null && index < names.length) {
            if (index === names.length - 1)
              lookupHit = (
                hasProperty(intermediateValue, names[index])
                || primitiveHasOwnProperty(intermediateValue, names[index])
              );

            intermediateValue = intermediateValue[names[index++]];
          }
        } else {
          intermediateValue = context.view[name];

          /**
           * Only checking against `hasProperty`, which always returns `false` if
           * `context.view` is not an object. Deliberately omitting the check
           * against `primitiveHasOwnProperty` if dot notation is not used.
           *
           * Consider this example:
           * ```
           * Mustache.render("The length of a football field is {{#length}}{{length}}{{/length}}.", {length: "100 yards"})
           * ```
           *
           * If we were to check also against `primitiveHasOwnProperty`, as we do
           * in the dot notation case, then render call would return:
           *
           * "The length of a football field is 9."
           *
           * rather than the expected:
           *
           * "The length of a football field is 100 yards."
           **/
          lookupHit = hasProperty(context.view, name);
        }

        if (lookupHit) {
          value = intermediateValue;
          break;
        }

        context = context.parent;
      }

      cache[name] = value;
    }

    if (isFunction(value))
      value = value.call(this.view);

    return value;
  };

  /**
   * A Writer knows how to take a stream of tokens and render them to a
   * string, given a context. It also maintains a cache of templates to
   * avoid the need to parse the same template twice.
   */
  function Writer () {
    this.templateCache = {
      _cache: {},
      set: function set (key, value) {
        this._cache[key] = value;
      },
      get: function get (key) {
        return this._cache[key];
      },
      clear: function clear () {
        this._cache = {};
      }
    };
  }

  /**
   * Clears all cached templates in this writer.
   */
  Writer.prototype.clearCache = function clearCache () {
    if (typeof this.templateCache !== 'undefined') {
      this.templateCache.clear();
    }
  };

  /**
   * Parses and caches the given `template` according to the given `tags` or
   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens
   * that is generated from the parse.
   */
  Writer.prototype.parse = function parse (template, tags) {
    var cache = this.templateCache;
    var cacheKey = template + ':' + (tags || mustache.tags).join(':');
    var isCacheEnabled = typeof cache !== 'undefined';
    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;

    if (tokens == undefined) {
      tokens = parseTemplate(template, tags);
      isCacheEnabled && cache.set(cacheKey, tokens);
    }
    return tokens;
  };

  /**
   * High-level method that is used to render the given `template` with
   * the given `view`.
   *
   * The optional `partials` argument may be an object that contains the
   * names and templates of partials that are used in the template. It may
   * also be a function that is used to load partial templates on the fly
   * that takes a single argument: the name of the partial.
   *
   * If the optional `tags` argument is given here it must be an array with two
   * string values: the opening and closing tags used in the template (e.g.
   * [ "<%", "%>" ]). The default is to mustache.tags.
   */
  Writer.prototype.render = function render (template, view, partials, tags) {
    var tokens = this.parse(template, tags);
    var context = (view instanceof Context) ? view : new Context(view, undefined);
    return this.renderTokens(tokens, context, partials, template, tags);
  };

  /**
   * Low-level method that renders the given array of `tokens` using
   * the given `context` and `partials`.
   *
   * Note: The `originalTemplate` is only ever used to extract the portion
   * of the original template that was contained in a higher-order section.
   * If the template doesn't use higher-order sections, this argument may
   * be omitted.
   */
  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {
    var buffer = '';

    var token, symbol, value;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      value = undefined;
      token = tokens[i];
      symbol = token[0];

      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);
      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);
      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);
      else if (symbol === '&') value = this.unescapedValue(token, context);
      else if (symbol === 'name') value = this.escapedValue(token, context);
      else if (symbol === 'text') value = this.rawValue(token);

      if (value !== undefined)
        buffer += value;
    }

    return buffer;
  };

  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {
    var self = this;
    var buffer = '';
    var value = context.lookup(token[1]);

    // This function is used to render an arbitrary template
    // in the current context by higher-order sections.
    function subRender (template) {
      return self.render(template, context, partials);
    }

    if (!value) return;

    if (isArray(value)) {
      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {
        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);
      }
    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {
      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);
    } else if (isFunction(value)) {
      if (typeof originalTemplate !== 'string')
        throw new Error('Cannot use higher-order sections without the original template');

      // Extract the portion of the original template that the section contains.
      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);

      if (value != null)
        buffer += value;
    } else {
      buffer += this.renderTokens(token[4], context, partials, originalTemplate);
    }
    return buffer;
  };

  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {
    var value = context.lookup(token[1]);

    // Use JavaScript's definition of falsy. Include empty arrays.
    // See https://github.com/janl/mustache.js/issues/186
    if (!value || (isArray(value) && value.length === 0))
      return this.renderTokens(token[4], context, partials, originalTemplate);
  };

  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {
    var filteredIndentation = indentation.replace(/[^ \t]/g, '');
    var partialByNl = partial.split('\n');
    for (var i = 0; i < partialByNl.length; i++) {
      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {
        partialByNl[i] = filteredIndentation + partialByNl[i];
      }
    }
    return partialByNl.join('\n');
  };

  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {
    if (!partials) return;

    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];
    if (value != null) {
      var lineHasNonSpace = token[6];
      var tagIndex = token[5];
      var indentation = token[4];
      var indentedValue = value;
      if (tagIndex == 0 && indentation) {
        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);
      }
      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);
    }
  };

  Writer.prototype.unescapedValue = function unescapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return value;
  };

  Writer.prototype.escapedValue = function escapedValue (token, context) {
    var value = context.lookup(token[1]);
    if (value != null)
      return mustache.escape(value);
  };

  Writer.prototype.rawValue = function rawValue (token) {
    return token[1];
  };

  var mustache = {
    name: 'mustache.js',
    version: '4.0.0',
    tags: [ '{{', '}}' ],
    clearCache: undefined,
    escape: undefined,
    parse: undefined,
    render: undefined,
    Scanner: undefined,
    Context: undefined,
    Writer: undefined,
    /**
     * Allows a user to override the default caching strategy, by providing an
     * object with set, get and clear methods. This can also be used to disable
     * the cache by setting it to the literal `undefined`.
     */
    set templateCache (cache) {
      defaultWriter.templateCache = cache;
    },
    /**
     * Gets the default or overridden caching object from the default writer.
     */
    get templateCache () {
      return defaultWriter.templateCache;
    }
  };

  // All high-level mustache.* functions use this writer.
  var defaultWriter = new Writer();

  /**
   * Clears all cached templates in the default writer.
   */
  mustache.clearCache = function clearCache () {
    return defaultWriter.clearCache();
  };

  /**
   * Parses and caches the given template in the default writer and returns the
   * array of tokens it contains. Doing this ahead of time avoids the need to
   * parse templates on the fly as they are rendered.
   */
  mustache.parse = function parse (template, tags) {
    return defaultWriter.parse(template, tags);
  };

  /**
   * Renders the `template` with the given `view` and `partials` using the
   * default writer. If the optional `tags` argument is given here it must be an
   * array with two string values: the opening and closing tags used in the
   * template (e.g. [ "<%", "%>" ]). The default is to mustache.tags.
   */
  mustache.render = function render (template, view, partials, tags) {
    if (typeof template !== 'string') {
      throw new TypeError('Invalid template! Template should be a "string" ' +
                          'but "' + typeStr(template) + '" was given as the first ' +
                          'argument for mustache#render(template, view, partials)');
    }

    return defaultWriter.render(template, view, partials, tags);
  };

  // Export the escaping function so that the user may override it.
  // See https://github.com/janl/mustache.js/issues/244
  mustache.escape = escapeHtml;

  // Export these mainly for testing, but also for advanced usage.
  mustache.Scanner = Scanner;
  mustache.Context = Context;
  mustache.Writer = Writer;

  return mustache;

})));
});

mustache.escape = function (value) {
    return value;
};
class MustacheTemplateEvaluatorImpl {
    constructor(template) {
        this.template = template;
    }
    evaluate(context) {
        let result = mustache.render(this.template, this.convert(context));
        return result;
    }
    convert(context) {
        return context.getObject();
    }
}

class MustacheTemplateParserImpl {
    parse(template) {
        return new MustacheTemplateEvaluatorImpl(template.value);
    }
}

class TemplateParserFactory {
    static getInstance(template) {
        switch (template.type) {
            case TemplateTypeEnum.MUSTACHE:
                return new MustacheTemplateParserImpl();
            case TemplateTypeEnum.HANDLEBARS:
                return new MustacheTemplateParserImpl();
            default:
                throw new Error(`Unable to locate an expression parser for ${template.type}`);
        }
    }
}

class Template {
    constructor(type, value) {
        this.type = type;
        this.value = value;
    }
}

class AbstractViewportProcessor {
    constructor() {
    }
    apply(value, context) {
        let template = new Template(TemplateTypeEnum.MUSTACHE, value);
        let parser = TemplateParserFactory.getInstance(template).parse(template);
        return parser.evaluate(context);
    }
}

class StylesViewportProcessor extends AbstractViewportProcessor {
    process(element, parameters, context) {
        parameters.forEach(parameter => {
            if (parameter.hasStyles()) {
                parameter.getStyles().getStyles().forEach((value, name) => {
                    element.style[name] = this.apply(value, context);
                });
                parameter.getStyles().getExcludedStyles().forEach(name => element.style.removeProperty(this.apply(name, context)));
            }
        });
    }
}

class AttributesViewportProcessor extends AbstractViewportProcessor {
    process(element, parameters, context) {
        parameters.forEach(parameter => {
            if (parameter.hasAttributes()) {
                parameter.getAttributes().getAttributes().forEach((value, name) => {
                    element.setAttribute(name, this.apply(value, context));
                });
                parameter.getAttributes().getExcludedAttributes().forEach(name => element.removeAttribute(this.apply(name, context)));
            }
        });
    }
}

class ClassesViewportProcessor extends AbstractViewportProcessor {
    process(element, parameters, context) {
        parameters.forEach(parameter => {
            if (parameter.hasClasses()) {
                parameter.getClasses().getClasses().forEach(value => {
                    element.classList.add(this.apply(value, context));
                });
                parameter.getClasses().getExcludedClasses().forEach(value => element.classList.remove(this.apply(value, context)));
            }
        });
    }
}

class ViewportProcessorFactory {
    static getInstance(type) {
        switch (type) {
            case ViewportProcessorTypeEnum.STYLES:
                return new StylesViewportProcessor();
            case ViewportProcessorTypeEnum.ATTRIBUTES:
                return new AttributesViewportProcessor();
            case ViewportProcessorTypeEnum.CLASSES:
                return new ClassesViewportProcessor();
            default:
                throw new Error(`Unable to locate an viewport processor for ${type}`);
        }
    }
}

class ViewportConfigurationService {
    constructor() { }
    static getInstance() {
        if (!ViewportConfigurationService.instance) {
            ViewportConfigurationService.instance = new ViewportConfigurationService();
        }
        return ViewportConfigurationService.instance;
    }
    register(target, _nodes, callback) {
        const mediaQueryInstances = WebUtils.getMediaQueryInstances();
        mediaQueryInstances.forEach((mediaQueryInstance) => {
            mediaQueryInstance.mediaQueryList.addListener((e) => {
                if (e.matches) {
                    callback.call(target);
                }
            });
        });
        callback.call(target);
    }
    process(target, context, properties) {
        let configuration = this.getConfiguration(target);
        let styles = ViewportProcessorFactory.getInstance(ViewportProcessorTypeEnum.STYLES);
        let classes = ViewportProcessorFactory.getInstance(ViewportProcessorTypeEnum.CLASSES);
        let attributes = ViewportProcessorFactory.getInstance(ViewportProcessorTypeEnum.ATTRIBUTES);
        // TODO: Need to add support for a quick check for active view port so we only call process on the element once it changes. Right now we are calling it every time
        properties.forEach(entry => {
            let propertyName = entry.getLeft();
            if (configuration.hasKey(propertyName)) {
                let parameters = configuration.getParametersByKey(propertyName).filter(parameter => parameter.inRange(Math.round(window.innerWidth), Math.round(window.innerHeight)));
                if (parameters.length > 0) {
                    if (configuration.hasStylesForKey(propertyName)) {
                        styles.process(entry.getRight(), parameters, context);
                    }
                    if (configuration.hasClassesForKey(entry.getLeft())) {
                        classes.process(entry.getRight(), parameters, context);
                    }
                    if (configuration.hasAttributesForKey(entry.getLeft())) {
                        attributes.process(entry.getRight(), parameters, context);
                    }
                }
            }
        });
    }
    getConfiguration(target) {
        return DecoratorUtils.getPropertyDecorator(target, VIEWPORT_PARAMETERS_META_KEY);
    }
}

class AbstractContext {
    constructor() {
        this.values = new Map();
    }
    getInstance(key) {
        return this.values.get(key);
    }
    add(key, value) {
        this.values.set(key, value);
    }
    remove(key) {
        this.values.delete(key);
    }
    exists(key) {
        return this.values.has(key);
    }
    getObject() {
        const result = {};
        for (let prop of this.values) {
            result[prop[0]] = prop[1];
        }
        return result;
    }
    fromObject(instance) {
        Object.keys(instance).forEach(key => {
            this.values.set(key, instance[key]);
        });
        return this;
    }
    getValues() {
        return this.values;
    }
}

class DefaultContext extends AbstractContext {
    static create() {
        return new DefaultContext();
    }
}

const heroComponentCss = "snt-hero{position:relative;height:100%;width:100%;margin:0 auto;overflow:hidden;background-image:-webkit-gradient(linear, right top, left top, color-stop(30%, rgba(255, 255, 255, 0)), color-stop(115%, #ffffff));background-image:linear-gradient(270deg, rgba(255, 255, 255, 0) 30%, #ffffff 115%)}.light-fill snt-hero,snt-hero.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-hero,snt-hero.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-hero,snt-hero.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-hero,snt-hero.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-hero,snt-hero.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}snt-hero snt-layout[viewport=medium]{min-height:25em}snt-hero snt-layout[viewport=large]{min-height:31.25em;max-width:100%}snt-hero snt-layout[viewport=extra-large]{min-height:39.0625em;max-width:100%}snt-hero snt-panel{min-height:unset}snt-hero snt-panel.logo-present snt-layout .spacings{padding-top:0px}snt-hero snt-layout[viewport=extra-large]{max-width:1440px}snt-hero snt-layout[viewport=extra-large] .hero_container{max-width:60%}snt-hero snt-layout[viewport=extra-large] button-link-group{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:unset;align-items:unset}snt-hero snt-layout[viewport=extra-large] button-link{width:auto}snt-hero snt-layout[viewport=large] .hero_container{max-width:60%}snt-hero snt-layout[viewport=large] button-link-group{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:unset;align-items:unset}snt-hero snt-layout[viewport=large] button-link{width:auto}snt-hero snt-layout[viewport=medium] .hero_container{max-width:60%}snt-hero snt-layout[viewport=medium] button-link-group{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:unset;align-items:unset}snt-hero snt-layout[viewport=medium] button-link{width:auto}snt-hero snt-layout[viewport=extra-small] snt-action-button,snt-hero snt-layout[viewport=extra-small] snt-button,snt-hero snt-layout[viewport=extra-small] button,snt-hero snt-layout[viewport=extra-small] a{width:100% !important}snt-hero snt-layout[viewport=extra-small] .hero_container snt-button{display:-ms-flexbox;display:flex}snt-hero snt-layout[viewport=extra-small] .float-left{width:100%;margin:0 0 1.25em 0}snt-hero snt-layout[viewport=small] snt-action-button,snt-hero snt-layout[viewport=small] snt-button,snt-hero snt-layout[viewport=small] button,snt-hero snt-layout[viewport=small] a{width:100% !important}snt-hero snt-layout[viewport=small] .hero_container snt-button{display:-ms-flexbox;display:flex}snt-hero snt-layout[viewport=small] .float-left{width:100%;margin:0 0 1.25em 0}snt-hero .hero_container{width:100%;float:left}snt-hero .hero_container p{margin:0.938em 0 1.875em}snt-hero .hero_container .float-left{margin:0 1.25em 1.25em 0}snt-hero snt-image.mobile-image[viewport=medium],snt-hero snt-image.mobile-image[viewport=large],snt-hero snt-image.mobile-image[viewport=extra-large]{display:none}snt-hero snt-image.mobile-image img{-o-object-fit:cover;object-fit:cover;max-height:670px;width:100%}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
class HeroComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    onResize(event) {
        const viewport = event.detail.viewport;
        this.mobileImage.setAttribute('viewport', viewport);
    }
    componentDidLoad() {
        this.data.getData().then(value => {
            this.context = new DefaultContext().fromObject(value);
            this.mobileImage.setAttribute('src-image', this.context.getInstance('small').styles.backgroundImage);
            this.mobileImage.setAttribute('data-src', this.context.getInstance('small').styles.backgroundImage);
            ViewportConfigurationService.getInstance().register(this, this.getElements(), this.resize);
        }).catch(() => {
        });
    }
    resize() {
        ViewportConfigurationService.getInstance().process(this, this.context, this.getElements());
        if (StringUtils.hasValue(this.logoImage.getAttribute('src-image'))) {
            this.panel.classList.add('logo-present');
        }
        else {
            this.panel.classList.remove('logo-present');
        }
    }
    getElements() {
        const elements = [Pair.of("panel", this.panel), Pair.of("logoImage", this.logoImage)];
        return elements;
    }
    render() {
        return (h(Host, null, h("snt-panel", { ref: (el) => this.panel = el }, h("div", { class: 'hero_container' }, h("snt-image", { "src-image": "", "data-src": "", ref: (el) => this.logoImage = el }), h("slot", { name: "content" }))), h("snt-image", { class: "mobile-image", "src-image": "", "data-src": "", ref: (el) => this.mobileImage = el }), h("snt-data", { type: "json", src: this.propertiesSrc, data: this.properties, ref: (el) => this.data = el })));
    }
    get element() { return getElement(this); }
    static get style() { return heroComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-hero",
        "$members$": {
            "propertiesSrc": [1, "properties-src"],
            "properties": [1]
        },
        "$listeners$": [[0, "viewportChanged", "onResize"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
__decorate([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withStyles(ViewportStylesBuilder.newInstance().with("backgroundImage", "none").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withStyles(ViewportStylesBuilder.newInstance().with("backgroundImage", "none").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withStyles(ViewportStylesBuilder.newInstance().with("backgroundImage", "linear-gradient(270deg,hsla(0,0%,100%,0) 30%,#fff 115%), url('{{medium.styles.backgroundImage}}')").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withStyles(ViewportStylesBuilder.newInstance().with("backgroundImage", "linear-gradient(270deg,hsla(0,0%,100%,0) 30%,#fff 115%), url('{{large.styles.backgroundImage}}')").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withStyles(ViewportStylesBuilder.newInstance().with("backgroundImage", "linear-gradient(270deg,hsla(0,0%,100%,0) 30%,#fff 115%), url('{{extra_large.styles.backgroundImage}}')").build())
            .build()
    ]),
    __metadata("design:type", HTMLElement)
], HeroComponent.prototype, "panel", void 0);
__decorate([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{extra_small.logoUrl}}')
            .with('src-image', '{{extra_small.logoUrl}}')
            .with('img-alt', '{{extra_small.logoAltText}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{small.logoUrl}}')
            .with('src-image', '{{small.logoUrl}}')
            .with('img-alt', '{{small.logoAltText}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{medium.logoUrl}}')
            .with('src-image', '{{medium.logoUrl}}')
            .with('img-alt', '{{medium.logoAltText}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{large.logoUrl}}')
            .with('src-image', '{{large.logoUrl}}')
            .with('img-alt', '{{large.logoAltText}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{extra_large.logoUrl}}')
            .with('src-image', '{{extra_large.logoUrl}}')
            .with('img-alt', '{{extra_large.logoAltText}}')
            .build())
            .build()
    ]),
    __metadata("design:type", HTMLElement)
], HeroComponent.prototype, "logoImage", void 0);

const bootstrapCss = "/*!\n* Bootstrap v4.3.1 (https://getbootstrap.com/)\n* Copyright 2011-2019 The Bootstrap Authors\n* Copyright 2011-2019 Twitter, Inc.\n* Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n*/html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0, 0, 0, 0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system, \"Averta-Regular\", Arial, Helvetica, sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#f2f2f2}[tabindex=\"-1\"]:focus{outline:0 !important}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0.5rem;font-family:\"Averta-ExtraBold\", sans-serif}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:0.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}a{color:#147582;text-decoration:underline;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#9e0a9a;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):hover,a:not([href]):not([tabindex]):focus{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}a.primary{color:#ffffff;text-decoration:underline;background-color:transparent}a.primary:hover{color:#ffffff;text-decoration:underline}a.primary:focus{outline:1px solid #ffffff;padding:3px;-webkit-box-sizing:border-box;box-sizing:border-box}pre,code,kbd,samp{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:0.75rem;padding-bottom:0.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button:not(:disabled),[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{padding:0;border-style:none}input[type=radio],input[type=checkbox]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=date],input[type=time],input[type=datetime-local],input[type=month]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:0.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:0.25rem;background-color:#f2f2f2;border:1px solid #dee2e6;border-radius:0.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:0.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a>code{color:inherit}kbd{padding:0.2rem 0.4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:0.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:767px}}@media (min-width: 768px){.container{max-width:1023px}}@media (min-width: 1024px){.container{max-width:1439px}}@media (min-width: 1440px){.container{max-width:1440px}}.container-fluid{width:100%;margin-right:auto;margin-left:auto}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col-xl,.col-xl-auto,.col-xl-12,.col-xl-11,.col-xl-10,.col-xl-9,.col-xl-8,.col-xl-7,.col-xl-6,.col-xl-5,.col-xl-4,.col-xl-3,.col-xl-2,.col-xl-1,.col-lg,.col-lg-auto,.col-lg-12,.col-lg-11,.col-lg-10,.col-lg-9,.col-lg-8,.col-lg-7,.col-lg-6,.col-lg-5,.col-lg-4,.col-lg-3,.col-lg-2,.col-lg-1,.col-md,.col-md-auto,.col-md-12,.col-md-11,.col-md-10,.col-md-9,.col-md-8,.col-md-7,.col-md-6,.col-md-5,.col-md-4,.col-md-3,.col-md-2,.col-md-1,.col-sm,.col-sm-auto,.col-sm-12,.col-sm-11,.col-sm-10,.col-sm-9,.col-sm-8,.col-sm-7,.col-sm-6,.col-sm-5,.col-sm-4,.col-sm-3,.col-sm-2,.col-sm-1,.col,.col-auto,.col-12,.col-11,.col-10,.col-9,.col-8,.col-7,.col-6,.col-5,.col-4,.col-3,.col-2,.col-1{position:relative;width:100%;padding-right:0px;padding-left:0px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-2{-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-5{-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-8{-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-11{-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.3333333333%}.offset-2{margin-left:16.6666666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.3333333333%}.offset-5{margin-left:41.6666666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.3333333333%}.offset-8{margin-left:66.6666666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.3333333333%}.offset-11{margin-left:91.6666666667%}@media (min-width: 576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-sm-2{-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-sm-5{-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-sm-8{-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-sm-11{-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.3333333333%}.offset-sm-2{margin-left:16.6666666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.3333333333%}.offset-sm-5{margin-left:41.6666666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.3333333333%}.offset-sm-8{margin-left:66.6666666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.3333333333%}.offset-sm-11{margin-left:91.6666666667%}}@media (min-width: 768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-md-2{-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-md-5{-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-md-8{-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-md-11{-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.3333333333%}.offset-md-2{margin-left:16.6666666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.3333333333%}.offset-md-5{margin-left:41.6666666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.3333333333%}.offset-md-8{margin-left:66.6666666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.3333333333%}.offset-md-11{margin-left:91.6666666667%}}@media (min-width: 1024px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-lg-2{-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-lg-5{-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-lg-8{-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-lg-11{-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.3333333333%}.offset-lg-2{margin-left:16.6666666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.3333333333%}.offset-lg-5{margin-left:41.6666666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.3333333333%}.offset-lg-8{margin-left:66.6666666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.3333333333%}.offset-lg-11{margin-left:91.6666666667%}}@media (min-width: 1440px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.3333333333%;flex:0 0 8.3333333333%;max-width:8.3333333333%}.col-xl-2{-ms-flex:0 0 16.6666666667%;flex:0 0 16.6666666667%;max-width:16.6666666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%;max-width:33.3333333333%}.col-xl-5{-ms-flex:0 0 41.6666666667%;flex:0 0 41.6666666667%;max-width:41.6666666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.3333333333%;flex:0 0 58.3333333333%;max-width:58.3333333333%}.col-xl-8{-ms-flex:0 0 66.6666666667%;flex:0 0 66.6666666667%;max-width:66.6666666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.3333333333%;flex:0 0 83.3333333333%;max-width:83.3333333333%}.col-xl-11{-ms-flex:0 0 91.6666666667%;flex:0 0 91.6666666667%;max-width:91.6666666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.3333333333%}.offset-xl-2{margin-left:16.6666666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.3333333333%}.offset-xl-5{margin-left:41.6666666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.3333333333%}.offset-xl-8{margin-left:66.6666666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.3333333333%}.offset-xl-11{margin-left:91.6666666667%}}.form-control{display:block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:0.25rem;-webkit-transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{-webkit-transition:none;transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(0.375rem + 1px);padding-bottom:calc(0.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(0.25rem + 1px);padding-bottom:calc(0.25rem + 1px);font-size:0.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:0.375rem;padding-bottom:0.375rem;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-sm,.form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + 0.5rem + 2px);padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}select.form-control[size],select.form-control[multiple]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:0.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:0.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:0.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:0.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:0.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(40, 167, 69, 0.9);border-radius:0.25rem}.was-validated .form-control:valid,.form-control.is-valid{border-color:#28a745;padding-right:calc(1.5em + 0.75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:center right calc(0.375em + 0.1875rem);background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:valid:focus,.form-control.is-valid:focus{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip,.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip{display:block}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:valid,.custom-select.is-valid{border-color:#28a745;padding-right:calc((1em + 0.75rem) * 3 / 4 + 1.75rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px, url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:valid:focus,.custom-select.is-valid:focus{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip,.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip{display:block}.was-validated .form-control-file:valid~.valid-feedback,.was-validated .form-control-file:valid~.valid-tooltip,.form-control-file.is-valid~.valid-feedback,.form-control-file.is-valid~.valid-tooltip{display:block}.was-validated .form-check-input:valid~.form-check-label,.form-check-input.is-valid~.form-check-label{color:#28a745}.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip,.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip{display:block}.was-validated .custom-control-input:valid~.custom-control-label,.custom-control-input.is-valid~.custom-control-label{color:#28a745}.was-validated .custom-control-input:valid~.custom-control-label::before,.custom-control-input.is-valid~.custom-control-label::before{border-color:#28a745}.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip,.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip{display:block}.was-validated .custom-control-input:valid:checked~.custom-control-label::before,.custom-control-input.is-valid:checked~.custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.was-validated .custom-control-input:valid:focus~.custom-control-label::before,.custom-control-input.is-valid:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.was-validated .custom-control-input:valid:focus:not(:checked)~.custom-control-label::before,.custom-control-input.is-valid:focus:not(:checked)~.custom-control-label::before{border-color:#28a745}.was-validated .custom-file-input:valid~.custom-file-label,.custom-file-input.is-valid~.custom-file-label{border-color:#28a745}.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip,.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip{display:block}.was-validated .custom-file-input:valid:focus~.custom-file-label,.custom-file-input.is-valid:focus~.custom-file-label{border-color:#28a745;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.25)}.invalid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:0.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(220, 53, 69, 0.9);border-radius:0.25rem}.was-validated .form-control:invalid,.form-control.is-invalid{border-color:#dc3545;padding-right:calc(1.5em + 0.75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E\");background-repeat:no-repeat;background-position:center right calc(0.375em + 0.1875rem);background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:invalid:focus,.form-control.is-invalid:focus{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip{display:block}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:invalid,.custom-select.is-invalid{border-color:#dc3545;padding-right:calc((1em + 0.75rem) * 3 / 4 + 1.75rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px, url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E\") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:invalid:focus,.custom-select.is-invalid:focus{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip{display:block}.was-validated .form-control-file:invalid~.invalid-feedback,.was-validated .form-control-file:invalid~.invalid-tooltip,.form-control-file.is-invalid~.invalid-feedback,.form-control-file.is-invalid~.invalid-tooltip{display:block}.was-validated .form-check-input:invalid~.form-check-label,.form-check-input.is-invalid~.form-check-label{color:#dc3545}.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip,.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip{display:block}.was-validated .custom-control-input:invalid~.custom-control-label,.custom-control-input.is-invalid~.custom-control-label{color:#dc3545}.was-validated .custom-control-input:invalid~.custom-control-label::before,.custom-control-input.is-invalid~.custom-control-label::before{border-color:#dc3545}.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip,.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip{display:block}.was-validated .custom-control-input:invalid:checked~.custom-control-label::before,.custom-control-input.is-invalid:checked~.custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.was-validated .custom-control-input:invalid:focus~.custom-control-label::before,.custom-control-input.is-invalid:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.was-validated .custom-control-input:invalid:focus:not(:checked)~.custom-control-label::before,.custom-control-input.is-invalid:focus:not(:checked)~.custom-control-label::before{border-color:#dc3545}.was-validated .custom-file-input:invalid~.custom-file-label,.custom-file-input.is-invalid~.custom-file-label{border-color:#dc3545}.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip,.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip{display:block}.was-validated .custom-file-input:invalid:focus~.custom-file-label,.custom-file-input.is-invalid:focus~.custom-file-label{border-color:#dc3545;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:0.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent}.btn:hover{color:#212529;text-decoration:none}.btn:focus,.btn.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.btn.disabled,.btn:disabled{opacity:0.65}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary:focus,.btn-primary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(38, 143, 255, 0.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary:focus,.btn-secondary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5);box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled):active:focus,.btn-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5);box-shadow:0 0 0 0.2rem rgba(130, 138, 145, 0.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success:focus,.btn-success.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled):active,.btn-success:not(:disabled):not(.disabled).active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled):active:focus,.btn-success:not(:disabled):not(.disabled).active:focus,.show>.btn-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(72, 180, 97, 0.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info:focus,.btn-info.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5);box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled):active:focus,.btn-info:not(:disabled):not(.disabled).active:focus,.show>.btn-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5);box-shadow:0 0 0 0.2rem rgba(58, 176, 195, 0.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning:focus,.btn-warning.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5);box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled):active:focus,.btn-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5);box-shadow:0 0 0 0.2rem rgba(222, 170, 12, 0.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger:focus,.btn-danger.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled):active,.btn-danger:not(:disabled):not(.disabled).active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled):active:focus,.btn-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5);box-shadow:0 0 0 0.2rem rgba(225, 83, 97, 0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5);box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus,.show>.btn-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5);box-shadow:0 0 0 0.2rem rgba(216, 217, 219, 0.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark:focus,.btn-dark.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5);box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled):active,.btn-dark:not(:disabled):not(.disabled).active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled):active:focus,.btn-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5);box-shadow:0 0 0 0.2rem rgba(82, 88, 93, 0.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:focus,.btn-outline-primary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:focus,.btn-outline-secondary.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5);box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5);box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:focus,.btn-outline-success.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled):active,.btn-outline-success:not(:disabled):not(.disabled).active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled):active:focus,.btn-outline-success:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-success.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:focus,.btn-outline-info.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5);box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled):active,.btn-outline-info:not(:disabled):not(.disabled).active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled):active:focus,.btn-outline-info:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-info.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5);box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:focus,.btn-outline-warning.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5);box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled):active,.btn-outline-warning:not(:disabled):not(.disabled).active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5);box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:focus,.btn-outline-danger.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled):active,.btn-outline-danger:not(:disabled):not(.disabled).active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:focus,.btn-outline-light.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5);box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled):active,.btn-outline-light:not(:disabled):not(.disabled).active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled):active:focus,.btn-outline-light:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-light.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5);box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:focus,.btn-outline-dark.focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5);box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled):active,.btn-outline-dark:not(:disabled):not(.disabled).active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{-webkit-box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5);box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5)}.btn-link{font-weight:400;color:#147582;text-decoration:underline}.btn-link:hover{color:#9e0a9a;text-decoration:underline}.btn-link:focus,.btn-link.focus{text-decoration:underline;-webkit-box-shadow:none;box-shadow:none}.btn-link:disabled,.btn-link.disabled{color:#6c757d;pointer-events:none}.btn-lg,.btn-group-lg>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.btn-sm,.btn-group-sm>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:0.5rem}input[type=submit].btn-block,input[type=reset].btn-block,input[type=button].btn-block{width:100%}.fade{-webkit-transition:opacity 0.15s linear;transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.fade{-webkit-transition:none;transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height 0.35s ease;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.collapsing{-webkit-transition:none;transition:none}}.dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid;border-right:0.3em solid transparent;border-bottom:0;border-left:0.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0.5rem 0;margin:0.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0, 0, 0, 0.15);border-radius:0.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 1024px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1440px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:0.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0;border-right:0.3em solid transparent;border-bottom:0.3em solid;border-left:0.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:0.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0;border-bottom:0.3em solid transparent;border-left:0.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:0.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:0.255em;vertical-align:0.255em;content:\"\";border-top:0.3em solid transparent;border-right:0.3em solid;border-bottom:0.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=top],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:0.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:0.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0.5rem 1.5rem;margin-bottom:0;font-size:0.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:0.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group>.btn,.btn-group-vertical>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group>.btn:hover,.btn-group-vertical>.btn:hover{z-index:1}.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn.active{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child){margin-left:-1px}.btn-group>.btn:not(:last-child):not(.dropdown-toggle),.btn-group>.btn-group:not(:last-child)>.btn{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:0.5625rem;padding-left:0.5625rem}.dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-sm+.dropdown-toggle-split,.btn-group-sm>.btn+.dropdown-toggle-split{padding-right:0.375rem;padding-left:0.375rem}.btn-lg+.dropdown-toggle-split,.btn-group-lg>.btn+.dropdown-toggle-split{padding-right:0.75rem;padding-left:0.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle),.btn-group-vertical>.btn-group:not(:last-child)>.btn{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox]{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-control-plaintext,.input-group>.custom-select,.input-group>.custom-file{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.form-control+.form-control,.input-group>.form-control+.custom-select,.input-group>.form-control+.custom-file,.input-group>.form-control-plaintext+.form-control,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.custom-file,.input-group>.custom-select+.form-control,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.custom-file,.input-group>.custom-file+.form-control,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.custom-file{margin-left:-1px}.input-group>.form-control:focus,.input-group>.custom-select:focus,.input-group>.custom-file .custom-file-input:focus~.custom-file-label{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.form-control:not(:last-child),.input-group>.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.form-control:not(:first-child),.input-group>.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-prepend,.input-group-append{display:-ms-flexbox;display:flex}.input-group-prepend .btn,.input-group-append .btn{position:relative;z-index:2}.input-group-prepend .btn:focus,.input-group-append .btn:focus{z-index:3}.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.input-group-text,.input-group-append .input-group-text+.btn{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.375rem 0.75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:0.25rem}.input-group-text input[type=radio],.input-group-text input[type=checkbox]{margin-top:0}.input-group-lg>.form-control:not(textarea),.input-group-lg>.custom-select{height:calc(1.5em + 1rem + 2px)}.input-group-lg>.form-control,.input-group-lg>.custom-select,.input-group-lg>.input-group-prepend>.input-group-text,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-append>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.input-group-sm>.form-control:not(textarea),.input-group-sm>.custom-select{height:calc(1.5em + 0.5rem + 2px)}.input-group-sm>.form-control,.input-group-sm>.custom-select,.input-group-sm>.input-group-prepend>.input-group-text,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-append>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text,.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus~.custom-control-label::before{-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-control-input:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\"\";background:no-repeat 50%/50% 50%}.custom-checkbox .custom-control-label::before{border-radius:0.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:0.5rem}.custom-switch .custom-control-label::after{top:calc(0.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:0.5rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{-webkit-transition:none;transition:none}}.custom-switch .custom-control-input:checked~.custom-control-label::after{background-color:#fff;-webkit-transform:translateX(0.75rem);transform:translateX(0.75rem)}.custom-switch .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0, 123, 255, 0.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 1.75rem 0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/8px 10px;background-color:#fff;border:1px solid #ced4da;border-radius:0.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:0.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select-sm{height:calc(1.5em + 0.5rem + 2px);padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;font-size:0.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + 0.75rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-file-input:disabled~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-input~.custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:0.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + 0.75rem);padding:0.375rem 0.75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:inherit;border-radius:0 0.25rem 0.25rem 0}.custom-range{width:100%;height:calc(1rem + 0.4rem);padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 1px #f2f2f2, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 1px #f2f2f2, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #f2f2f2, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #f2f2f2, 0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-0.25rem;background-color:#007bff;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;-moz-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0.2rem;margin-left:0.2rem;background-color:#007bff;border:0;border-radius:1rem;-ms-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:0.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select{-webkit-transition:none;transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:0.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#f2f2f2;border-color:#dee2e6 #dee2e6 #f2f2f2}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:0.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:0.5rem 1rem}.navbar>.container,.navbar>.container-fluid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:0.3125rem;padding-bottom:0.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:0.5rem;padding-bottom:0.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:0.25rem 0.75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:0.25rem}.navbar-toggler:hover,.navbar-toggler:focus{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width: 767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width: 1023.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 1024px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width: 1439.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width: 1440px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-brand:hover,.navbar-light .navbar-brand:focus{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0, 0, 0, 0.5)}.navbar-light .navbar-nav .nav-link:hover,.navbar-light .navbar-nav .nav-link:focus{color:rgba(0, 0, 0, 0.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0, 0, 0, 0.3)}.navbar-light .navbar-nav .show>.nav-link,.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-toggler{color:rgba(0, 0, 0, 0.5);border-color:rgba(0, 0, 0, 0.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-light .navbar-text{color:rgba(0, 0, 0, 0.5)}.navbar-light .navbar-text a{color:rgba(0, 0, 0, 0.9)}.navbar-light .navbar-text a:hover,.navbar-light .navbar-text a:focus{color:rgba(0, 0, 0, 0.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:hover,.navbar-dark .navbar-brand:focus{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255, 255, 255, 0.5)}.navbar-dark .navbar-nav .nav-link:hover,.navbar-dark .navbar-nav .nav-link:focus{color:rgba(255, 255, 255, 0.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255, 255, 255, 0.25)}.navbar-dark .navbar-nav .show>.nav-link,.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255, 255, 255, 0.5);border-color:rgba(255, 255, 255, 0.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-dark .navbar-text{color:rgba(255, 255, 255, 0.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:hover,.navbar-dark .navbar-text a:focus{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0, 0, 0, 0.125);border-radius:0.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:0.75rem}.card-subtitle{margin-top:-0.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:0.75rem 1.25rem;margin-bottom:0;background-color:rgba(0, 0, 0, 0.03);border-bottom:1px solid rgba(0, 0, 0, 0.125)}.card-header:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:0.75rem 1.25rem;background-color:rgba(0, 0, 0, 0.03);border-top:1px solid rgba(0, 0, 0, 0.125)}.card-footer:last-child{border-radius:0 0 calc(0.25rem - 1px) calc(0.25rem - 1px)}.card-header-tabs{margin-right:-0.625rem;margin-bottom:-0.75rem;margin-left:-0.625rem;border-bottom:0}.card-header-pills{margin-right:-0.625rem;margin-left:-0.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(0.25rem - 1px)}.card-img-top{width:100%;border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card-deck{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-deck .card{margin-bottom:0px}@media (min-width: 576px){.card-deck{-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:0px;margin-left:0px}.card-deck .card{display:-ms-flexbox;display:flex;-ms-flex:1 0 0%;flex:1 0 0%;-ms-flex-direction:column;flex-direction:column;margin-right:0px;margin-bottom:0;margin-left:0px}}.card-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.card-group>.card{margin-bottom:0px}@media (min-width: 576px){.card-group{-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-img-top,.card-group>.card:not(:last-child) .card-header{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-img-bottom,.card-group>.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-img-top,.card-group>.card:not(:first-child) .card-header{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-img-bottom,.card-group>.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:0.75rem}@media (min-width: 576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion>.card{overflow:hidden}.accordion>.card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion>.card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion>.card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.accordion>.card .card-header{margin-bottom:-1px}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:0.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:0.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:0.5rem;color:#6c757d;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:0.25rem}.page-link{position:relative;display:block;padding:0.5rem 0.75rem;margin-left:-1px;line-height:1.25;color:#147582;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#9e0a9a;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:2;outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem}.page-item:last-child .page-link{border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:0.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:0.3rem;border-bottom-left-radius:0.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:0.3rem;border-bottom-right-radius:0.3rem}.pagination-sm .page-link{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:0.2rem;border-bottom-left-radius:0.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:0.2rem;border-bottom-right-radius:0.2rem}.badge{display:inline-block;padding:0.25em 0.4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0.25rem;-webkit-transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.badge{-webkit-transition:none;transition:none}}a.badge:hover,a.badge:focus{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:0.6em;padding-left:0.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:hover,a.badge-primary:focus{color:#fff;background-color:#0062cc}a.badge-primary:focus,a.badge-primary.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5);box-shadow:0 0 0 0.2rem rgba(0, 123, 255, 0.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:hover,a.badge-secondary:focus{color:#fff;background-color:#545b62}a.badge-secondary:focus,a.badge-secondary.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5);box-shadow:0 0 0 0.2rem rgba(108, 117, 125, 0.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:hover,a.badge-success:focus{color:#fff;background-color:#1e7e34}a.badge-success:focus,a.badge-success.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(40, 167, 69, 0.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:hover,a.badge-info:focus{color:#fff;background-color:#117a8b}a.badge-info:focus,a.badge-info.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5);box-shadow:0 0 0 0.2rem rgba(23, 162, 184, 0.5)}.badge-warning{color:#212529;background-color:#ffc107}a.badge-warning:hover,a.badge-warning:focus{color:#212529;background-color:#d39e00}a.badge-warning:focus,a.badge-warning.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5);box-shadow:0 0 0 0.2rem rgba(255, 193, 7, 0.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:hover,a.badge-danger:focus{color:#fff;background-color:#bd2130}a.badge-danger:focus,a.badge-danger.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5);box-shadow:0 0 0 0.2rem rgba(220, 53, 69, 0.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:hover,a.badge-light:focus{color:#212529;background-color:#dae0e5}a.badge-light:focus,a.badge-light.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5);box-shadow:0 0 0 0.2rem rgba(248, 249, 250, 0.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:hover,a.badge-dark:focus{color:#fff;background-color:#1d2124}a.badge-dark:focus,a.badge-dark.focus{outline:0;-webkit-box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5);box-shadow:0 0 0 0.2rem rgba(52, 58, 64, 0.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:0.3rem}@media (min-width: 576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:0.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:0.75rem;background-color:#e9ecef;border-radius:0.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;-webkit-transition:width 0.6s ease;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.progress-bar{-webkit-transition:none;transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:0.75rem 0px;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0, 0, 0, 0.125)}.list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}@media (min-width: 576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-sm .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-sm .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-md .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-md .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 1024px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-lg .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-lg .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}@media (min-width: 1440px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl .list-group-item{margin-right:-1px;margin-bottom:0}.list-group-horizontal-xl .list-group-item:first-child{border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-xl .list-group-item:last-child{margin-right:0;border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0}}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush .list-group-item:last-child{margin-bottom:-1px}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{margin-bottom:0;border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:hover,.list-group-item-primary.list-group-item-action:focus{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:hover,.list-group-item-secondary.list-group-item-action:focus{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:hover,.list-group-item-success.list-group-item-action:focus{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:hover,.list-group-item-info.list-group-item-action:focus{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:hover,.list-group-item-warning.list-group-item-action:focus{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:hover,.list-group-item-danger.list-group-item-action:focus{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:hover,.list-group-item-light.list-group-item-action:focus{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:hover,.list-group-item-dark.list-group-item-action:focus{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:0.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):hover,.close:not(:disabled):not(.disabled):focus{opacity:0.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}a.close.disabled{pointer-events:none}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:0.5rem;pointer-events:none}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform 0.3s ease-out;transition:-webkit-transform 0.3s ease-out;transition:transform 0.3s ease-out;transition:transform 0.3s ease-out, -webkit-transform 0.3s ease-out;-webkit-transform:translate(0, -50px);transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .modal-dialog{-webkit-transition:none;transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);content:\"\"}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0, 0, 0, 0.2);border-radius:0.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:0.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-top-left-radius:0.3rem;border-top-right-radius:0.3rem}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:1rem;border-top:1px solid #dee2e6;border-bottom-right-radius:0.3rem;border-bottom-left-radius:0.3rem}.modal-footer>:not(:first-child){margin-left:0.25rem}.modal-footer>:not(:last-child){margin-right:0.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width: 1024px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width: 1440px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system, \"Averta-Regular\", Arial, Helvetica, sans-serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:0.9}.tooltip .arrow{position:absolute;display:block;width:0.8rem;height:0.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-top,.bs-tooltip-auto[x-placement^=top]{padding:0.4rem 0}.bs-tooltip-top .arrow,.bs-tooltip-auto[x-placement^=top] .arrow{bottom:0}.bs-tooltip-top .arrow::before,.bs-tooltip-auto[x-placement^=top] .arrow::before{top:0;border-width:0.4rem 0.4rem 0;border-top-color:#000}.bs-tooltip-right,.bs-tooltip-auto[x-placement^=right]{padding:0 0.4rem}.bs-tooltip-right .arrow,.bs-tooltip-auto[x-placement^=right] .arrow{left:0;width:0.4rem;height:0.8rem}.bs-tooltip-right .arrow::before,.bs-tooltip-auto[x-placement^=right] .arrow::before{right:0;border-width:0.4rem 0.4rem 0.4rem 0;border-right-color:#000}.bs-tooltip-bottom,.bs-tooltip-auto[x-placement^=bottom]{padding:0.4rem 0}.bs-tooltip-bottom .arrow,.bs-tooltip-auto[x-placement^=bottom] .arrow{top:0}.bs-tooltip-bottom .arrow::before,.bs-tooltip-auto[x-placement^=bottom] .arrow::before{bottom:0;border-width:0 0.4rem 0.4rem;border-bottom-color:#000}.bs-tooltip-left,.bs-tooltip-auto[x-placement^=left]{padding:0 0.4rem}.bs-tooltip-left .arrow,.bs-tooltip-auto[x-placement^=left] .arrow{right:0;width:0.4rem;height:0.8rem}.bs-tooltip-left .arrow::before,.bs-tooltip-auto[x-placement^=left] .arrow::before{left:0;border-width:0.4rem 0 0.4rem 0.4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:0.25rem 0.5rem;color:#fff;text-align:center;background-color:#000;border-radius:0.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system, \"Averta-Regular\", Arial, Helvetica, sans-serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0, 0, 0, 0.2);border-radius:0.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:0.5rem;margin:0 0.3rem}.popover .arrow::before,.popover .arrow::after{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-top,.bs-popover-auto[x-placement^=top]{margin-bottom:0.5rem}.bs-popover-top>.arrow,.bs-popover-auto[x-placement^=top]>.arrow{bottom:calc((0.5rem + 1px) * -1)}.bs-popover-top>.arrow::before,.bs-popover-auto[x-placement^=top]>.arrow::before{bottom:0;border-width:0.5rem 0.5rem 0;border-top-color:rgba(0, 0, 0, 0.25)}.bs-popover-top>.arrow::after,.bs-popover-auto[x-placement^=top]>.arrow::after{bottom:1px;border-width:0.5rem 0.5rem 0;border-top-color:#fff}.bs-popover-right,.bs-popover-auto[x-placement^=right]{margin-left:0.5rem}.bs-popover-right>.arrow,.bs-popover-auto[x-placement^=right]>.arrow{left:calc((0.5rem + 1px) * -1);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-right>.arrow::before,.bs-popover-auto[x-placement^=right]>.arrow::before{left:0;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:rgba(0, 0, 0, 0.25)}.bs-popover-right>.arrow::after,.bs-popover-auto[x-placement^=right]>.arrow::after{left:1px;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:#fff}.bs-popover-bottom,.bs-popover-auto[x-placement^=bottom]{margin-top:0.5rem}.bs-popover-bottom>.arrow,.bs-popover-auto[x-placement^=bottom]>.arrow{top:calc((0.5rem + 1px) * -1)}.bs-popover-bottom>.arrow::before,.bs-popover-auto[x-placement^=bottom]>.arrow::before{top:0;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:rgba(0, 0, 0, 0.25)}.bs-popover-bottom>.arrow::after,.bs-popover-auto[x-placement^=bottom]>.arrow::after{top:1px;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:#fff}.bs-popover-bottom .popover-header::before,.bs-popover-auto[x-placement^=bottom] .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-0.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-left,.bs-popover-auto[x-placement^=left]{margin-right:0.5rem}.bs-popover-left>.arrow,.bs-popover-auto[x-placement^=left]>.arrow{right:calc((0.5rem + 1px) * -1);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-left>.arrow::before,.bs-popover-auto[x-placement^=left]>.arrow::before{right:0;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:rgba(0, 0, 0, 0.25)}.bs-popover-left>.arrow::after,.bs-popover-auto[x-placement^=left]>.arrow::after{right:1px;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:#fff}.popover-header{padding:0.5rem 0.75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:0.5rem 0.75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\"\"}.carousel-item{position:relative;display:none}.carousel-item.active,.carousel-item-next,.carousel-item-prev{display:block}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right{-webkit-transform:translateX(100%);transform:translateX(100%)}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;-webkit-transition-property:opacity;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;-webkit-transition:0s 0.6s opacity;transition:0s 0.6s opacity}@media (prefers-reduced-motion: reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{-webkit-transition:none;transition:none}}.carousel-control-prev,.carousel-control-next{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;text-decoration:none !important;opacity:0.5;-webkit-transition:opacity 0.15s ease;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.carousel-control-prev,.carousel-control-next{-webkit-transition:none;transition:none}}.carousel-control-prev:before,.carousel-control-next:before{background:none}.carousel-control-prev:hover,.carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus{color:#fff;text-decoration:none;outline:0;opacity:0.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-prev-icon,.carousel-control-next-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50%/100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e\")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{-webkit-box-sizing:content-box;box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:0.5;-webkit-transition:opacity 0.6s ease;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.carousel-indicators li{-webkit-transition:none;transition:none}}.carousel-indicators .active{opacity:1}.align-baseline{vertical-align:baseline !important}.align-top{vertical-align:top !important}.align-middle{vertical-align:middle !important}.align-bottom{vertical-align:bottom !important}.align-text-bottom{vertical-align:text-bottom !important}.align-text-top{vertical-align:text-top !important}.bg-primary{background-color:#007bff !important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#0062cc !important}.bg-secondary{background-color:#6c757d !important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#545b62 !important}.bg-success{background-color:#28a745 !important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#1e7e34 !important}.bg-info{background-color:#17a2b8 !important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#117a8b !important}.bg-warning{background-color:#ffc107 !important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#d39e00 !important}.bg-danger{background-color:#dc3545 !important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#bd2130 !important}.bg-light{background-color:#f8f9fa !important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#dae0e5 !important}.bg-dark{background-color:#343a40 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#1d2124 !important}.bg-white{background-color:#fff !important}.bg-transparent{background-color:transparent !important}.border{border:1px solid #dee2e6 !important}.border-top{border-top:1px solid #dee2e6 !important}.border-right{border-right:1px solid #dee2e6 !important}.border-bottom{border-bottom:1px solid #dee2e6 !important}.border-left{border-left:1px solid #dee2e6 !important}.border-0{border:0 !important}.border-top-0{border-top:0 !important}.border-right-0{border-right:0 !important}.border-bottom-0{border-bottom:0 !important}.border-left-0{border-left:0 !important}.border-primary{border-color:#007bff !important}.border-secondary{border-color:#6c757d !important}.border-success{border-color:#28a745 !important}.border-info{border-color:#17a2b8 !important}.border-warning{border-color:#ffc107 !important}.border-danger{border-color:#dc3545 !important}.border-light{border-color:#f8f9fa !important}.border-dark{border-color:#343a40 !important}.border-white{border-color:#fff !important}.rounded-sm{border-radius:0.2rem !important}.rounded{border-radius:0.25rem !important}.rounded-top{border-top-left-radius:0.25rem !important;border-top-right-radius:0.25rem !important}.rounded-right{border-top-right-radius:0.25rem !important;border-bottom-right-radius:0.25rem !important}.rounded-bottom{border-bottom-right-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-left{border-top-left-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-lg{border-radius:0.3rem !important}.rounded-circle{border-radius:50% !important}.rounded-pill{border-radius:50rem !important}.rounded-0{border-radius:0 !important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}@media (min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1024px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1440px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media print{.d-print-none{display:none !important}.d-print-inline{display:inline !important}.d-print-inline-block{display:inline-block !important}.d-print-block{display:block !important}.d-print-table{display:table !important}.d-print-table-row{display:table-row !important}.d-print-table-cell{display:table-cell !important}.d-print-flex{display:-ms-flexbox !important;display:flex !important}.d-print-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.8571428571%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-center{-ms-flex-align:center !important;align-items:center !important}.align-items-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}@media (min-width: 576px){.flex-sm-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-sm-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-sm-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-sm-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-sm-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-sm-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-sm-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-sm-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-sm-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-sm-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-sm-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-sm-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-sm-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-sm-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-sm-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-sm-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-sm-center{-ms-flex-align:center !important;align-items:center !important}.align-items-sm-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-sm-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-sm-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-sm-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-sm-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-sm-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-sm-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-sm-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-sm-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-sm-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-sm-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-sm-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-sm-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-sm-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 768px){.flex-md-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-md-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-md-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-md-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-md-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-md-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-md-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-md-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-md-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-md-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-md-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-md-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-md-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-md-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-md-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-md-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-md-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-md-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-md-center{-ms-flex-align:center !important;align-items:center !important}.align-items-md-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-md-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-md-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-md-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-md-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-md-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-md-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-md-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-md-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-md-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-md-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-md-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-md-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-md-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1024px){.flex-lg-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-lg-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-lg-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-lg-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-lg-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-lg-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-lg-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-lg-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-lg-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-lg-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-lg-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-lg-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-lg-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-lg-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-lg-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-lg-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-lg-center{-ms-flex-align:center !important;align-items:center !important}.align-items-lg-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-lg-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-lg-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-lg-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-lg-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-lg-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-lg-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-lg-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-lg-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-lg-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-lg-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-lg-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-lg-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-lg-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1440px){.flex-xl-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-xl-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-xl-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-xl-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-xl-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-xl-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-xl-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-xl-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-xl-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-xl-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-xl-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-xl-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-xl-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-xl-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-xl-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-xl-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-xl-center{-ms-flex-align:center !important;align-items:center !important}.align-items-xl-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-xl-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-xl-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-xl-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-xl-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-xl-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-xl-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-xl-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-xl-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-xl-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-xl-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-xl-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-xl-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-xl-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}.float-left{float:left !important}.float-right{float:right !important}.float-none{float:none !important}@media (min-width: 576px){.float-sm-left{float:left !important}.float-sm-right{float:right !important}.float-sm-none{float:none !important}}@media (min-width: 768px){.float-md-left{float:left !important}.float-md-right{float:right !important}.float-md-none{float:none !important}}@media (min-width: 1024px){.float-lg-left{float:left !important}.float-lg-right{float:right !important}.float-lg-none{float:none !important}}@media (min-width: 1440px){.float-xl-left{float:left !important}.float-xl-right{float:right !important}.float-xl-none{float:none !important}}.overflow-auto{overflow:auto !important}.overflow-hidden{overflow:hidden !important}.position-static{position:static !important}.position-relative{position:relative !important}.position-absolute{position:absolute !important}.position-fixed{position:fixed !important}.position-sticky{position:-webkit-sticky !important;position:sticky !important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position: -webkit-sticky) or (position: sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{-webkit-box-shadow:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;box-shadow:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important}.shadow{-webkit-box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important}.shadow-lg{-webkit-box-shadow:0 1rem 3rem rgba(0, 0, 0, 0.175) !important;box-shadow:0 1rem 3rem rgba(0, 0, 0, 0.175) !important}.shadow-none{-webkit-box-shadow:none !important;box-shadow:none !important}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.w-auto{width:auto !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.h-auto{height:auto !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.min-vw-100{min-width:100vw !important}.min-vh-100{min-height:100vh !important}.vw-100{width:100vw !important}.vh-100{height:100vh !important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\"\";background-color:rgba(0, 0, 0, 0)}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:0.25rem !important}.mt-1,.my-1{margin-top:0.25rem !important}.mr-1,.mx-1{margin-right:0.25rem !important}.mb-1,.my-1{margin-bottom:0.25rem !important}.ml-1,.mx-1{margin-left:0.25rem !important}.m-2{margin:0.5rem !important}.mt-2,.my-2{margin-top:0.5rem !important}.mr-2,.mx-2{margin-right:0.5rem !important}.mb-2,.my-2{margin-bottom:0.5rem !important}.ml-2,.mx-2{margin-left:0.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:0.25rem !important}.pt-1,.py-1{padding-top:0.25rem !important}.pr-1,.px-1{padding-right:0.25rem !important}.pb-1,.py-1{padding-bottom:0.25rem !important}.pl-1,.px-1{padding-left:0.25rem !important}.p-2{padding:0.5rem !important}.pt-2,.py-2{padding-top:0.5rem !important}.pr-2,.px-2{padding-right:0.5rem !important}.pb-2,.py-2{padding-bottom:0.5rem !important}.pl-2,.px-2{padding-left:0.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-n1{margin:-0.25rem !important}.mt-n1,.my-n1{margin-top:-0.25rem !important}.mr-n1,.mx-n1{margin-right:-0.25rem !important}.mb-n1,.my-n1{margin-bottom:-0.25rem !important}.ml-n1,.mx-n1{margin-left:-0.25rem !important}.m-n2{margin:-0.5rem !important}.mt-n2,.my-n2{margin-top:-0.5rem !important}.mr-n2,.mx-n2{margin-right:-0.5rem !important}.mb-n2,.my-n2{margin-bottom:-0.5rem !important}.ml-n2,.mx-n2{margin-left:-0.5rem !important}.m-n3{margin:-1rem !important}.mt-n3,.my-n3{margin-top:-1rem !important}.mr-n3,.mx-n3{margin-right:-1rem !important}.mb-n3,.my-n3{margin-bottom:-1rem !important}.ml-n3,.mx-n3{margin-left:-1rem !important}.m-n4{margin:-1.5rem !important}.mt-n4,.my-n4{margin-top:-1.5rem !important}.mr-n4,.mx-n4{margin-right:-1.5rem !important}.mb-n4,.my-n4{margin-bottom:-1.5rem !important}.ml-n4,.mx-n4{margin-left:-1.5rem !important}.m-n5{margin:-3rem !important}.mt-n5,.my-n5{margin-top:-3rem !important}.mr-n5,.mx-n5{margin-right:-3rem !important}.mb-n5,.my-n5{margin-bottom:-3rem !important}.ml-n5,.mx-n5{margin-left:-3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media (min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:0.25rem !important}.mt-sm-1,.my-sm-1{margin-top:0.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:0.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:0.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:0.25rem !important}.m-sm-2{margin:0.5rem !important}.mt-sm-2,.my-sm-2{margin-top:0.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:0.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:0.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:0.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:0.25rem !important}.pt-sm-1,.py-sm-1{padding-top:0.25rem !important}.pr-sm-1,.px-sm-1{padding-right:0.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:0.25rem !important}.pl-sm-1,.px-sm-1{padding-left:0.25rem !important}.p-sm-2{padding:0.5rem !important}.pt-sm-2,.py-sm-2{padding-top:0.5rem !important}.pr-sm-2,.px-sm-2{padding-right:0.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:0.5rem !important}.pl-sm-2,.px-sm-2{padding-left:0.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-n1{margin:-0.25rem !important}.mt-sm-n1,.my-sm-n1{margin-top:-0.25rem !important}.mr-sm-n1,.mx-sm-n1{margin-right:-0.25rem !important}.mb-sm-n1,.my-sm-n1{margin-bottom:-0.25rem !important}.ml-sm-n1,.mx-sm-n1{margin-left:-0.25rem !important}.m-sm-n2{margin:-0.5rem !important}.mt-sm-n2,.my-sm-n2{margin-top:-0.5rem !important}.mr-sm-n2,.mx-sm-n2{margin-right:-0.5rem !important}.mb-sm-n2,.my-sm-n2{margin-bottom:-0.5rem !important}.ml-sm-n2,.mx-sm-n2{margin-left:-0.5rem !important}.m-sm-n3{margin:-1rem !important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem !important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem !important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem !important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem !important}.m-sm-n4{margin:-1.5rem !important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem !important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem !important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem !important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem !important}.m-sm-n5{margin:-3rem !important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem !important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem !important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem !important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media (min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:0.25rem !important}.mt-md-1,.my-md-1{margin-top:0.25rem !important}.mr-md-1,.mx-md-1{margin-right:0.25rem !important}.mb-md-1,.my-md-1{margin-bottom:0.25rem !important}.ml-md-1,.mx-md-1{margin-left:0.25rem !important}.m-md-2{margin:0.5rem !important}.mt-md-2,.my-md-2{margin-top:0.5rem !important}.mr-md-2,.mx-md-2{margin-right:0.5rem !important}.mb-md-2,.my-md-2{margin-bottom:0.5rem !important}.ml-md-2,.mx-md-2{margin-left:0.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:0.25rem !important}.pt-md-1,.py-md-1{padding-top:0.25rem !important}.pr-md-1,.px-md-1{padding-right:0.25rem !important}.pb-md-1,.py-md-1{padding-bottom:0.25rem !important}.pl-md-1,.px-md-1{padding-left:0.25rem !important}.p-md-2{padding:0.5rem !important}.pt-md-2,.py-md-2{padding-top:0.5rem !important}.pr-md-2,.px-md-2{padding-right:0.5rem !important}.pb-md-2,.py-md-2{padding-bottom:0.5rem !important}.pl-md-2,.px-md-2{padding-left:0.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-n1{margin:-0.25rem !important}.mt-md-n1,.my-md-n1{margin-top:-0.25rem !important}.mr-md-n1,.mx-md-n1{margin-right:-0.25rem !important}.mb-md-n1,.my-md-n1{margin-bottom:-0.25rem !important}.ml-md-n1,.mx-md-n1{margin-left:-0.25rem !important}.m-md-n2{margin:-0.5rem !important}.mt-md-n2,.my-md-n2{margin-top:-0.5rem !important}.mr-md-n2,.mx-md-n2{margin-right:-0.5rem !important}.mb-md-n2,.my-md-n2{margin-bottom:-0.5rem !important}.ml-md-n2,.mx-md-n2{margin-left:-0.5rem !important}.m-md-n3{margin:-1rem !important}.mt-md-n3,.my-md-n3{margin-top:-1rem !important}.mr-md-n3,.mx-md-n3{margin-right:-1rem !important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem !important}.ml-md-n3,.mx-md-n3{margin-left:-1rem !important}.m-md-n4{margin:-1.5rem !important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem !important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem !important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem !important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem !important}.m-md-n5{margin:-3rem !important}.mt-md-n5,.my-md-n5{margin-top:-3rem !important}.mr-md-n5,.mx-md-n5{margin-right:-3rem !important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem !important}.ml-md-n5,.mx-md-n5{margin-left:-3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media (min-width: 1024px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:0.25rem !important}.mt-lg-1,.my-lg-1{margin-top:0.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:0.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:0.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:0.25rem !important}.m-lg-2{margin:0.5rem !important}.mt-lg-2,.my-lg-2{margin-top:0.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:0.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:0.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:0.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:0.25rem !important}.pt-lg-1,.py-lg-1{padding-top:0.25rem !important}.pr-lg-1,.px-lg-1{padding-right:0.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:0.25rem !important}.pl-lg-1,.px-lg-1{padding-left:0.25rem !important}.p-lg-2{padding:0.5rem !important}.pt-lg-2,.py-lg-2{padding-top:0.5rem !important}.pr-lg-2,.px-lg-2{padding-right:0.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:0.5rem !important}.pl-lg-2,.px-lg-2{padding-left:0.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-n1{margin:-0.25rem !important}.mt-lg-n1,.my-lg-n1{margin-top:-0.25rem !important}.mr-lg-n1,.mx-lg-n1{margin-right:-0.25rem !important}.mb-lg-n1,.my-lg-n1{margin-bottom:-0.25rem !important}.ml-lg-n1,.mx-lg-n1{margin-left:-0.25rem !important}.m-lg-n2{margin:-0.5rem !important}.mt-lg-n2,.my-lg-n2{margin-top:-0.5rem !important}.mr-lg-n2,.mx-lg-n2{margin-right:-0.5rem !important}.mb-lg-n2,.my-lg-n2{margin-bottom:-0.5rem !important}.ml-lg-n2,.mx-lg-n2{margin-left:-0.5rem !important}.m-lg-n3{margin:-1rem !important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem !important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem !important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem !important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem !important}.m-lg-n4{margin:-1.5rem !important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem !important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem !important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem !important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem !important}.m-lg-n5{margin:-3rem !important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem !important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem !important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem !important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media (min-width: 1440px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:0.25rem !important}.mt-xl-1,.my-xl-1{margin-top:0.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:0.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:0.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:0.25rem !important}.m-xl-2{margin:0.5rem !important}.mt-xl-2,.my-xl-2{margin-top:0.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:0.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:0.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:0.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:0.25rem !important}.pt-xl-1,.py-xl-1{padding-top:0.25rem !important}.pr-xl-1,.px-xl-1{padding-right:0.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:0.25rem !important}.pl-xl-1,.px-xl-1{padding-left:0.25rem !important}.p-xl-2{padding:0.5rem !important}.pt-xl-2,.py-xl-2{padding-top:0.5rem !important}.pr-xl-2,.px-xl-2{padding-right:0.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:0.5rem !important}.pl-xl-2,.px-xl-2{padding-left:0.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-n1{margin:-0.25rem !important}.mt-xl-n1,.my-xl-n1{margin-top:-0.25rem !important}.mr-xl-n1,.mx-xl-n1{margin-right:-0.25rem !important}.mb-xl-n1,.my-xl-n1{margin-bottom:-0.25rem !important}.ml-xl-n1,.mx-xl-n1{margin-left:-0.25rem !important}.m-xl-n2{margin:-0.5rem !important}.mt-xl-n2,.my-xl-n2{margin-top:-0.5rem !important}.mr-xl-n2,.mx-xl-n2{margin-right:-0.5rem !important}.mb-xl-n2,.my-xl-n2{margin-bottom:-0.5rem !important}.ml-xl-n2,.mx-xl-n2{margin-left:-0.5rem !important}.m-xl-n3{margin:-1rem !important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem !important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem !important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem !important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem !important}.m-xl-n4{margin:-1.5rem !important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem !important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem !important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem !important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem !important}.m-xl-n5{margin:-3rem !important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem !important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem !important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem !important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.text-monospace{font-family:SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !important}.text-justify{text-align:justify !important}.text-wrap{white-space:normal !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media (min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media (min-width: 1024px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media (min-width: 1440px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.font-weight-light{font-weight:300 !important}.font-weight-lighter{font-weight:lighter !important}.font-weight-normal{font-weight:400 !important}.font-weight-bold{font-weight:700 !important}.font-weight-bolder{font-weight:bolder !important}.font-italic{font-style:italic !important}.text-white{color:#fff !important}.text-primary{color:#007bff !important}a.text-primary:hover,a.text-primary:focus{color:#0056b3 !important}.text-secondary{color:#6c757d !important}a.text-secondary:hover,a.text-secondary:focus{color:#494f54 !important}.text-success{color:#28a745 !important}a.text-success:hover,a.text-success:focus{color:#19692c !important}.text-info{color:#17a2b8 !important}a.text-info:hover,a.text-info:focus{color:#0f6674 !important}.text-warning{color:#ffc107 !important}a.text-warning:hover,a.text-warning:focus{color:#ba8b00 !important}.text-danger{color:#dc3545 !important}a.text-danger:hover,a.text-danger:focus{color:#a71d2a !important}.text-light{color:#f8f9fa !important}a.text-light:hover,a.text-light:focus{color:#cbd3da !important}.text-dark{color:#343a40 !important}a.text-dark:hover,a.text-dark:focus{color:#121416 !important}.text-body{color:#212529 !important}.text-muted{color:#6c757d !important}.text-black-50{color:rgba(0, 0, 0, 0.5) !important}.text-white-50{color:rgba(255, 255, 255, 0.5) !important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none !important}.text-break{word-break:break-word !important;overflow-wrap:break-word !important}.text-reset{color:inherit !important}.visible{visibility:visible !important}.invisible{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page {size:a3}body{min-width:1024px !important}.container{min-width:1024px !important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}.table-bordered th,.table-bordered td{border:1px solid #dee2e6 !important}.table-dark{color:inherit}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}";

class HeroExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.properties = `
    {
        "extra_small":{
           "logoUrl": "https://test-economical.dotcmscloud.com/dA/2d4022a9de/tp_SonnetxBoom_notagline_bi.svg",
           "logoAltText": "WealthSimple logo",
           "styles":{
              "backgroundImage":"https://test-economical.dotcmscloud.com/contentAsset/raw-data/922ca9cf-202c-48b7-9630-bfa409e53d23/fileAsset?language_id=1  "}
        },
        "small":{
            "logoUrl": "https://test-economical.dotcmscloud.com/dA/2d4022a9de/tp_SonnetxBoom_notagline_bi.svg",
            "logoAltText": "WealthSimple logo",
           "styles":{
              "backgroundImage":"https://test-economical.dotcmscloud.com/dA/39cf9b8cf9/HERO-P_auto@2x.jpg  "
           }
        },
        "medium":{
            "logoUrl": "https://test-economical.dotcmscloud.com/dA/0bf0bd85b1/hd_SonnetxBoom_notagline_bi.svg",
            "logoAltText": "WealthSimple logo",
           "styles":{
              "backgroundImage":"https://test-economical.dotcmscloud.com/contentAsset/raw-data/ad5e04f1-e82b-450a-ae5f-f10aa767c02e/fileAsset?language_id=1 "
           }
        },
        "large":{
            "logoUrl": "https://test-economical.dotcmscloud.com/dA/0bf0bd85b1/hd_SonnetxBoom_notagline_bi.svg",
            "logoAltText": "WealthSimple logo",
           "styles":{
              "backgroundImage":"https://test-economical.dotcmscloud.com/contentAsset/raw-data/0808390f-92e3-4655-9dae-2a48d900e6f6/fileAsset?language_id=1 "
           }
        },
        "extra_large":{
            "logoUrl": "https://test-economical.dotcmscloud.com/dA/0bf0bd85b1/hd_SonnetxBoom_notagline_bi.svg",
            "logoAltText": "WealthSimple logo",
           "styles":{
              "backgroundImage":"https://test-economical.dotcmscloud.com/contentAsset/raw-data/729e08b0-1ab5-4c3b-8bb9-5d62a4e1e953/fileAsset?language_id=1 "
           }
        }
     }`;
    }
    render() {
        return (h("div", null, h("h1", null, "Hero Component"), h("br", null), h("h2", null, "1. Hero with two button links"), h("snt-hero", { properties: this.properties }, h("div", { slot: "content" }, h("h1", null, "Insurance claims made easy 123"), h("p", null, "Our claims professionals are here to help, 24/7."), h("div", { class: "float-left" }, h("button-link-group", null, h("button-link", { href: "https://www.sonnet.ca/claims/auto", target: "_self", class: "theme-default hydrated" }, "Make an Auto Claim"))), h("div", { class: "float-left" }, h("button-link-group", null, h("button-link", { href: "https://www.sonnet.ca/claims/home", target: "_self", class: "theme-secondary hydrated" }, "Make a Home Claim"))))), h("br", null), h("h2", null, "2. Hero with two action buttons"), h("snt-hero", { properties: this.properties }, h("div", { slot: "content" }, h("h1", null, "Sonnet Insurance has Ontario tenants covered"), h("p", null, "Buy tenant insurance online in 5 minutes."), h("div", { class: "float-left" }, h("snt-action-button", { "style-classes": "cta theme-default", "button-id": "get-a-quote", "action-reference": "Action.openGetQuoteModal", "action-data": "{\"getAQuoteUrl\":\"http:\\\\\\\\localhost:3333\\\\getAQuote.html\",\"languageString\":{\"close\":\"Close\"}}", linkTitle: "Get A Quote" })), h("div", { class: "float-left" }, h("snt-action-button", { "style-classes": "cta theme-secondary", "button-id": "newsletter-signup", "action-reference": "Action.openFormModal", "action-data": "{\"formModalUrl\":\"http:\\\\\\\\localhost:3333\\\\newsletterSignup.html\",\"languageString\":{\"close\":\"Close\"}}", linkTitle: "Newsletter Sign Up" })), h("div", { class: "float-left" }, h("snt-action-button", { "style-classes": "cta theme-secondary", "button-id": "refer-a-friend", "action-reference": "Action.openFormModal", "action-data": "{\"formModalUrl\":\"http:\\\\\\\\localhost:3333\\\\referAFriend.html\",\"languageString\":{\"close\":\"Close\"}}", linkTitle: "Refer a Friend" }))))));
    }
    static get assetsDirs() { return ["asset/images/"]; }
    static get style() { return bootstrapCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "hero-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const iconComponentCss = "";

class IconComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, { class: `icon-font ${this.styleClasses}`, "aria-hidden": "true" }));
    }
    get element() { return getElement(this); }
    static get style() { return iconComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-icon",
        "$members$": {
            "styleClasses": [1, "style-classes"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
IconComponent.TAG_NAME = "snt-icon";

const iconCopyComponentCss = "snt-icon-copy.left .content,snt-icon-copy left.content,.left snt-icon-copy .content{text-align:left}@media (max-width: 767px){snt-icon-copy snt-layout.left-mobile .content,snt-icon-copy snt-layout .left-mobile.content,.left-mobile snt-icon-copy snt-layout .content{text-align:left}}snt-icon-copy.center .content,snt-icon-copy center.content,.center snt-icon-copy .content{text-align:center}@media (max-width: 767px){snt-icon-copy snt-layout.center-mobile .content,snt-icon-copy snt-layout .center-mobile.content,.center-mobile snt-icon-copy snt-layout .content{text-align:center}}snt-icon-copy.right .content,snt-icon-copy right.content,.right snt-icon-copy .content{text-align:right}@media (max-width: 767px){snt-icon-copy snt-layout.right-mobile .content,snt-icon-copy snt-layout .right-mobile.content,.right-mobile snt-icon-copy snt-layout .content{text-align:right}}snt-icon-copy h3{text-align:center;margin-bottom:15px}[viewport=medium] snt-icon-copy h3,snt-icon-copy[viewport=medium] h3{margin-bottom:20px}[viewport=medium] snt-icon-copy .logo,snt-icon-copy[viewport=medium] .logo{height:60px;width:286px}[viewport=medium] snt-icon-copy .logo-image,snt-icon-copy[viewport=medium] .logo-image{max-height:60px;max-width:286px}[viewport=large] snt-icon-copy h3,snt-icon-copy[viewport=large] h3{margin-bottom:25px}[viewport=large] snt-icon-copy .icon,snt-icon-copy[viewport=large] .icon{height:80px;width:80px}[viewport=large] snt-icon-copy .icon-image,snt-icon-copy[viewport=large] .icon-image{height:45px;width:45px}[viewport=large] snt-icon-copy .logo,snt-icon-copy[viewport=large] .logo{height:80px;width:228px}[viewport=large] snt-icon-copy .logo-image,snt-icon-copy[viewport=large] .logo-image{max-height:80px;max-width:228px}[viewport=extra-large] snt-icon-copy h3,snt-icon-copy[viewport=extra-large] h3{margin-bottom:30px}[viewport=extra-large] snt-icon-copy .icon,snt-icon-copy[viewport=extra-large] .icon{height:80px;width:80px}[viewport=extra-large] snt-icon-copy .icon-image,snt-icon-copy[viewport=extra-large] .icon-image{height:45px;width:45px}[viewport=extra-large] snt-icon-copy .logo,snt-icon-copy[viewport=extra-large] .logo{height:80px;width:324px}[viewport=extra-large] snt-icon-copy .logo-image,snt-icon-copy[viewport=extra-large] .logo-image{max-height:80px;max-width:324px}snt-icon-copy.link snt-action-link,snt-icon-copy.link snt-link,snt-icon-copy.link a{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch}snt-icon-copy.link h2{font-size:1.75rem;line-height:2.125rem;text-align:center;margin-bottom:1.875rem}snt-icon-copy.link p{text-align:center}snt-icon-copy.link .icon-copy-panel{border:3px solid transparent;-webkit-box-shadow:0.2px 0.2px 10px #e5e5e5;box-shadow:0.2px 0.2px 10px #e5e5e5;margin:10px;color:initial;width:calc(100% - 22px);outline-offset:3px;outline:1px dashed transparent}snt-icon-copy.link a{background-image:none;border:none;text-decoration:none;outline:none;margin:0;padding:0}snt-icon-copy.link a:active,snt-icon-copy.link a:hover{background-image:none;margin:0;padding:0}snt-icon-copy.link a:active .icon-copy-panel,snt-icon-copy.link a:hover .icon-copy-panel{border:3px solid #147582}snt-icon-copy.link a:focus{outline:none;margin:0;padding:0}snt-icon-copy.link a:focus .icon-copy-panel{outline:1px dashed #323232}snt-icon-copy.link a:before{display:none}snt-icon-copy .icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0px auto 40px;-webkit-box-sizing:border-box;box-sizing:border-box;height:60px;width:60px;border:3px solid #acdde4;background-color:#acdde4;border-radius:150px}.neutral-fill snt-icon-copy .icon,snt-icon-copy .icon.neutral-fill{border:3px solid #acdde4;background-color:#acdde4}.light-fill snt-icon-copy .icon,snt-icon-copy .icon.light-fill{border:3px solid #6ebac5;background-color:#ffffff}.float-fill snt-icon-copy .icon,snt-icon-copy .icon.float-fill{border:3px solid #acdde4;background-color:#acdde4}.primary-fill snt-icon-copy .icon,snt-icon-copy .icon.primary-fill{border:3px solid #acdde4;background-color:#ffffff}.light-stroke snt-icon-copy .icon,snt-icon-copy .icon.light-stroke{border:3px solid #acdde4;background-color:#acdde4}.dark-fill snt-icon-copy .icon,snt-icon-copy .icon.dark-fill{border:3px solid #ffffff;background-color:#147582}snt-icon-copy .icon-image{height:30px;width:30px}snt-icon-copy .icon-copy-panel{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;border:3px solid #e5e5e5;padding:40px 20px}.neutral-fill snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.neutral-fill{color:#323232;background-color:#ffffff;border:3px solid #e5e5e5}.light-fill snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.light-fill{color:#323232;background-color:#d9f0f4;border:none}.dark-fill snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.dark-fill{color:#ffffff;background-color:#147582;border:none}.float-fill snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.float-fill{color:#323232;background-color:#ffffff;border:none}.primary-fill snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.primary-fill{color:#323232;background-color:#6ebac5;border:none}.light-stroke snt-icon-copy .icon-copy-panel,snt-icon-copy .icon-copy-panel.light-stroke{color:#323232;background-color:#ffffff;border:3px solid #acdde4}snt-icon-copy .hidden{display:none}snt-icon-copy .logo{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0px auto 40px;height:60px;width:214px}snt-icon-copy .logo-image{max-height:60px;max-width:214px}";

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var __awaiter$i = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class IconCopyComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.titleString = '';
        this.styleClasses = StringUtils.empty();
        this.logoIsSet = false;
        this.linkId = StringUtils.empty();
    }
    registerViewport(target) {
        return __awaiter$i(this, void 0, void 0, function* () {
            this.parentLayout = target;
        });
    }
    componentDidLoad() {
        this.data.getData().then(value => {
            this.context = new DefaultContext().fromObject(value);
            if (this.logoIsSet) {
                //Set Logo-Copy
                const largeLogoUrl = this.context.getInstance('largeLogoUrl');
                //as a standalone component we currently can only support the one size.
                this.image.setAttribute('src', largeLogoUrl);
                if (StringUtils.isEmpty(largeLogoUrl) && StringUtils.isEmpty(largeLogoUrl)) {
                    this.logo.classList.add('hidden');
                }
            }
            else {
                //Set Icon-Copy
                this.normalizeIconValues();
                const largeIconUrl = this.context.getInstance('largeIconUrl');
                const smallIconUrl = this.context.getInstance('smallIconUrl');
                //as a standalone component we currently can only support the one size.
                this.image.setAttribute('src', largeIconUrl);
                if (StringUtils.isEmpty(largeIconUrl) && StringUtils.isEmpty(smallIconUrl)) {
                    this.icon.classList.add('hidden');
                }
            }
            if (this.parentLayout) {
                ViewportConfigurationService.getInstance().register(this, [Pair.of('snt-layout', this.parentLayout)], this.resize);
            }
        });
    }
    normalizeIconValues() {
        const largeIconUrl = this.context.getInstance('largeIconUrl');
        const smallIconUrl = this.context.getInstance('smallIconUrl');
        if (StringUtils.isEmpty(largeIconUrl) && StringUtils.hasValue(smallIconUrl)) {
            this.context.add('largeIconUrl', smallIconUrl);
        }
        else if (StringUtils.isEmpty(smallIconUrl) && StringUtils.hasValue(largeIconUrl)) {
            this.context.add('smallIconUrl', largeIconUrl);
        }
    }
    resize() {
        if (this.logoIsSet) {
            ViewportConfigurationService.getInstance().process(this, this.context, [Pair.of('logo', this.image)]);
        }
        else {
            ViewportConfigurationService.getInstance().process(this, this.context, [Pair.of('icon', this.image)]);
        }
    }
    render() {
        var content;
        if (this.logoIsSet) {
            content = (h("div", { ref: (el) => this.logo = el, class: "logo" }, h("img", { class: "logo-image", src: "", alt: "", "aria-hidden": "true", ref: (el) => this.image = el })));
        }
        else {
            content = (h("div", { ref: (el) => this.icon = el, class: "icon" }, h("img", { class: "icon-image", src: "", alt: "", "aria-hidden": "true", ref: (el) => this.image = el })));
        }
        const iconCopyPanel = [
            h("div", { class: "icon-copy-panel" }, content, h("h3", null, this.titleString), h("div", { class: WebUtils.generateClasses(["content"], this.styleClasses) }, h("slot", null)))
        ];
        return (h(Host, { class: (this.linkHref || this.linkActionReference) ? "link" : null }, (this.linkActionReference)
            ? h("snt-action-link", { "link-id": this.linkId, actionReference: this.linkActionReference, actionData: this.linkActionData }, iconCopyPanel)
            : (this.linkHref)
                ? h("snt-link", { "link-id": this.linkId, href: this.linkHref, title: this.linkTitle, target: this.linkTarget, rel: this.linkRel }, iconCopyPanel)
                : iconCopyPanel, h("snt-data", { type: "json", src: this.propertiesSrc, data: this.properties, ref: (el) => this.data = el })));
    }
    get el() { return getElement(this); }
    static get style() { return iconCopyComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-icon-copy",
        "$members$": {
            "titleString": [513, "title-string"],
            "styleClasses": [513, "style-classes"],
            "propertiesSrc": [1, "properties-src"],
            "properties": [1],
            "resizeEl": [16],
            "logoIsSet": [4, "logo-is-set"],
            "linkHref": [1, "link-href"],
            "linkTitle": [1, "link-title"],
            "linkTarget": [1, "link-target"],
            "linkRel": [1, "link-rel"],
            "linkActionReference": [1, "link-action-reference"],
            "linkActionData": [1, "link-action-data"],
            "linkId": [1, "link-id"],
            "registerViewport": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["styleClasses", "style-classes"]]
    }; }
}
IconCopyComponent.TAG_NAME = "snt-icon-copy";
__decorate$1([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{smallIconUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{smallIconUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{smallIconUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{largeIconUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{largeIconUrl}}')
            .build())
            .build()
    ]),
    __metadata$1("design:type", HTMLElement)
], IconCopyComponent.prototype, "icon", void 0);
__decorate$1([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{smallLogoUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{smallLogoUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{mediumLogoUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{largeLogoUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('src', '{{extraLargeLogoUrl}}')
            .build())
            .build()
    ]),
    __metadata$1("design:type", HTMLElement)
], IconCopyComponent.prototype, "logo", void 0);

class IconCopyComponent$1 {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.imageSrc = '';
        this.imgAlt = '';
    }
    render() {
        return (h(Host, null, h("div", { class: "image-panel" }, h("snt-image", { "data-src": this.imageSrc, "img-alt": this.imgAlt }))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-image-column",
        "$members$": {
            "imageSrc": [513, "image-src"],
            "imgAlt": [1, "img-alt"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["imageSrc", "image-src"]]
    }; }
}
IconCopyComponent$1.TAG_NAME = "snt-image-column";

class IconCopyExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", null, h("h1", null, "Icon Copy Component"), h("br", null), h("br", null), h("h2", null, "Icon Copy Link"), h("br", null), h("br", null), h("snt-multi-column-mixed", { "column-count": '{"extra-small": 1,"small": 1,"medium": 2,"large": 2,"extra-large": 2}' }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                            "largeIconUrl": "https://t.ly/i2fU",\r\n                            "smallIconUrl": "https://t.ly/i2fU"\r\n                        }', "title-string": "I have a Sonnet account", "link-href": "https://www.sonnet.ca/#option-1" }, h("p", null, "Log in first, then start a chat. This way, we can talk about policy and account specifics."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://t.ly/9hiJ", \r\n                                "smallIconUrl": "https://t.ly/9hiJ"\r\n                            }', "title-string": "I have a general inquiry", "link-action-reference": "Action.logAction", "link-action-data": '{"test": 123}' }, h("p", null, "Ask us your general questions about quoting, insurance and more via chat or email. ")))), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))), h("br", null), h("h2", null, "Single Column"), h("br", null), h("br", null), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))), h("br", null), h("h2", null, "Single Column With Icon"), h("br", null), h("br", null), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/45/000000/user2.png",\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))), h("br", null), h("br", null), h("h2", null, "Single Column With Icon Centered Text"), h("br", null), h("br", null), h("div", { class: "row" }, h("div", { class: "col-sm-12 col-md-6 col-lg-4" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/45/000000/user2.png",\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/434x120?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "style-classes": "center", logoIsSet: true, "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "icon-copy-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
IconCopyExample.TAG_NAME = "icon-copy-example";

const imageComponentCss = "snt-image img{max-width:100%;height:auto;display:block}snt-image .hidden{display:none}snt-image .hiddenOnMobile{display:none}@media (min-width: 768px){snt-image .hiddenOnMobile{display:block}}snt-image[data-width] img{width:100%}@media (min-width: 768px){snt-image[data-width] img{width:var(--blog-img-width, 100%)}}snt-image .center{margin-left:auto;margin-right:auto}snt-image .left{margin-right:auto}snt-image .right{margin-left:auto}";

class ImageComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.emptyString = 'data:,';
        this.dataSrc = '';
        this.srcImage = '';
        this.srcset = '';
        this.imgAlt = '';
        this.styleClasses = StringUtils.empty();
    }
    componentDidLoad() {
        LazyLoadIntersectionObserverManager.getInstance().observe(this.element);
    }
    render() {
        let sourceUrl;
        let dataSource;
        sourceUrl = StringUtils.isEmpty(this.srcImage) ? this.emptyString : this.srcImage;
        dataSource = StringUtils.isEmpty(this.dataSrc) ? this.emptyString : this.dataSrc;
        return (h(Host, null, h("img", { class: WebUtils.generateClasses([
                StringUtils.isEmpty(this.srcImage) && StringUtils.isEmpty(this.dataSrc) ? "hidden" : ""
            ], this.styleClasses), src: sourceUrl, "data-src": dataSource, height: this.height, width: this.width, alt: this.imgAlt, srcset: this.srcset ? this.srcset : '', loading: 'lazy', sizes: this.sizes ? this.sizes : undefined })));
    }
    ;
    get element() { return getElement(this); }
    static get style() { return imageComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-image",
        "$members$": {
            "dataSrc": [1, "data-src"],
            "srcImage": [1, "src-image"],
            "width": [1],
            "height": [1],
            "srcset": [1],
            "imgAlt": [1, "img-alt"],
            "sizes": [1],
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}

class ImageExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("snt-image", { id: "img1", "data-src": "https://www.sonnet.ca/getmedia/836231a8-e675-4f19-94bc-34a88fd9ab2c/10-10-19_travellers-blues-min.jpg.aspx?width=950&height=634&ext=.jpg", "src-image": "https://www.sonnet.ca/getmedia/836231a8-e675-4f19-94bc-34a88fd9ab2c/10-10-19_travellers-blues-min.jpg.aspx?width=950&height=634&ext=.jpg", "img-alt": "TEST", "style-classes": "hiddenOnMobile center", "data-align": "center", "data-width": "50%", class: "hydrated" }));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "image-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const imageIconComponentCss = "snt-image-icon .icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0px auto 0px;-webkit-box-sizing:border-box;box-sizing:border-box;height:60px;width:60px;border:3px solid #acdde4;background-color:#acdde4;border-radius:150px}.neutral-fill snt-image-icon .icon,snt-image-icon .icon.neutral-fill{border:3px solid #acdde4;background-color:#acdde4}.light-fill snt-image-icon .icon,snt-image-icon .icon.light-fill{border:3px solid #6ebac5;background-color:#ffffff}.float-fill snt-image-icon .icon,snt-image-icon .icon.float-fill{border:3px solid #acdde4;background-color:#acdde4}.primary-fill snt-image-icon .icon,snt-image-icon .icon.primary-fill{border:3px solid #acdde4;background-color:#ffffff}.light-stroke snt-image-icon .icon,snt-image-icon .icon.light-stroke{border:3px solid #acdde4;background-color:#acdde4}.dark-fill snt-image-icon .icon,snt-image-icon .icon.dark-fill{border:3px solid #ffffff;background-color:#147582}snt-image-icon .image-icon{height:30px;width:30px}@media (min-width: 768px){snt-image-icon .icon{height:80px;width:80px}snt-image-icon .image-icon{height:45px;width:45px}}";

class ImageIconComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.properties = "";
        this.imgAlt = "";
        this.styleClasses = StringUtils.empty();
    }
    componentDidLoad() {
        LazyLoadIntersectionObserverManager.getInstance().observe(this.element);
        let iconSrc = {};
        if (StringUtils.hasValue(this.properties)) {
            iconSrc = JSON.parse(this.properties);
        }
        this.largeIconUrl = iconSrc.largeIconUrl || iconSrc.smallIconUrl;
        this.smallIconUrl = iconSrc.smallIconUrl || this.largeIconUrl;
        this.image.setAttribute("src", this.smallIconUrl);
        this.element.setAttribute("data-src", this.smallIconUrl);
        this.image.setAttribute("data-srcSet", this.smallIconUrl);
        this.largeSource.setAttribute('srcSet', this.largeIconUrl);
        this.largeSource.setAttribute('data-srcSet', this.largeIconUrl);
        if (StringUtils.isEmpty(this.largeIconUrl) &&
            StringUtils.isEmpty(this.smallIconUrl)) {
            this.icon.classList.add("hidden");
        }
    }
    render() {
        return (h(Host, null, h("snt-layout", null, h("div", { ref: (el) => (this.icon = el), class: "icon" }, h("picture", null, h("source", { ref: (el) => (this.largeSource = el), media: "(min-width: 768px)", srcSet: "" }), h("img", { class: WebUtils.generateClasses(["image-icon"], this.styleClasses), src: "", alt: this.imgAlt, "aria-hidden": "true", ref: (el) => (this.image = el) }))))));
    }
    get element() { return getElement(this); }
    static get style() { return imageIconComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-image-icon",
        "$members$": {
            "properties": [1],
            "imgAlt": [1, "img-alt"],
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}

class ImageIconExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h("h2", null, "Centered Icon"), h("div", null, h("snt-image-icon", { properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "img-alt": "TEST", class: "center" })), h("h2", null, "Dark Fill"), h("div", { class: "dark-fill" }, h("snt-image-icon", { properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "img-alt": "TEST" })), h("h2", null, "Light Fill Icon"), h("div", { class: "light-fill" }, h("snt-image-icon", { properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "img-alt": "TEST" }))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "image-icon-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const layoutComponentCss = "snt-layout{display:block;width:auto;-webkit-box-sizing:border-box;box-sizing:border-box}snt-layout>.spacings{overflow:auto}snt-layout[viewport=extra-large] .spacings{padding:3.75em 8.438em}snt-layout[viewport=large] .spacings{padding:3.75em 4.438em}snt-layout[viewport=medium] .spacings{padding:2.5em 2.313em}snt-layout[viewport=small] .spacings{padding:2.5em 1.875em}snt-layout[viewport=extra-small] .spacings{padding:2.5em 1.875em}snt-layout[padding=none]>.spacings{padding:0}snt-layout[padding=top-only]>.spacings{padding-bottom:0}snt-layout[padding=bottom-only]>.spacings{padding-top:0}snt-layout[padding=remove-sides]>.spacings{padding-left:0;padding-right:0}snt-layout[padding=vertical-only]>.spacings{padding-top:0;padding-bottom:0}.two-column-combined{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.combined-bottom snt-layout>.spacings{padding-bottom:0.813em !important}@media (min-width: 1024px){.combined-bottom snt-layout>.spacings{padding-bottom:0.938em !important}}.combined-top snt-layout>.spacings{padding-top:0.813em !important}@media (min-width: 1024px){.combined-top snt-layout>.spacings{padding-top:0.938em !important}}.no-top snt-layout>.spacings{padding-top:0 !important}.no-bottom snt-layout>.spacings{padding-bottom:0 !important}.no-padding snt-layout>.spacings{padding:0 !important}.no-sides snt-layout>.spacings{padding-left:0 !important;padding-right:0 !important}";

var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
class LayoutComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.viewportChanged = createEvent(this, "viewportChanged", 7);
    }
    onViewportChanged(value) {
        this.viewportChanged.emit({ viewport: value });
    }
    componentWillLoad() {
        this.context = new DefaultContext();
        ViewportConfigurationService.getInstance().register(this, this.getElements(), this.resize);
    }
    resize() {
        ViewportConfigurationService.getInstance().process(this, this.context, this.getElements());
    }
    getElements() {
        return [Pair.of("element", this.element), Pair.of("element", window.document.body)];
    }
    render() {
        return (h("div", { class: "spacings" }, " ", h("slot", null), " "));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "viewport": ["onViewportChanged"]
    }; }
    static get style() { return layoutComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-layout",
        "$members$": {
            "viewport": [513],
            "padding": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["viewport", "viewport"], ["padding", "padding"]]
    }; }
}
__decorate$2([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance().with("viewport", "extra-small").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance().with("viewport", "small").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance().with("viewport", "medium").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance().with("viewport", "large").build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withAttributes(ViewportAttributesBuilder.newInstance().with("viewport", "extra-large").build())
            .build()
    ]),
    __metadata$2("design:type", HTMLElement)
], LayoutComponent.prototype, "element", void 0);

const linkComponentCss = "@charset \"UTF-8\";snt-link a{font-size:inherit;position:relative;text-decoration:none;background-color:transparent;padding-bottom:1px;background-image:-webkit-gradient(linear, left top, left bottom, from(#147582), to(#147582)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(#147582, #147582), linear-gradient(#9e0a9a, #9e0a9a);background-size:100% 1px, 0 1px;background-position:100% 100%, 1px 100%;background-repeat:no-repeat}snt-link a.theme-default{background-color:#6ebac5;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}snt-link a.theme-default:hover,snt-link a.theme-default:focus,snt-link a.theme-default:focus-within{color:#ffffff;background-color:#147582;-webkit-box-shadow:inset 0 0 0 3px #147582;box-shadow:inset 0 0 0 3px #147582}snt-link a.theme-secondary{background-color:transparent;color:#323232;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-link a.theme-secondary:hover,snt-link a.theme-secondary:focus,snt-link a.theme-secondary:focus-within{color:#ffffff;background-color:#323232}snt-link a.theme-secondaryDarkBg{background-color:transparent;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #ffffff;box-shadow:inset 0 0 0 3px #ffffff}snt-link a.theme-secondaryDarkBg:hover,snt-link a.theme-secondaryDarkBg:focus,snt-link a.theme-secondaryDarkBg:focus-within{color:#323232;background-color:#ffffff}snt-link a.theme-primary{background-color:#323232;color:#ffffff;-webkit-box-shadow:inset 0 0 0 3px #323232;box-shadow:inset 0 0 0 3px #323232}snt-link a.theme-primary:hover,snt-link a.theme-primary:focus,snt-link a.theme-primary:focus-within{color:#323232;background-color:transparent}snt-link a.theme-headerNav{background-color:transparent;color:#6ebac5;-webkit-box-shadow:inset 0 0 0 3px #6ebac5;box-shadow:inset 0 0 0 3px #6ebac5}snt-link a.theme-headerNav:hover,snt-link a.theme-headerNav:focus,snt-link a.theme-headerNav:focus-within{color:#323232;background-color:#6ebac5}snt-link a.theme-disabled{background-color:#e5e5e5;color:#7f7f7f;-webkit-box-shadow:inset 0 0 0 3px #e5e5e5;box-shadow:inset 0 0 0 3px #e5e5e5}snt-link a.theme-disabled:hover,snt-link a.theme-disabled:focus,snt-link a.theme-disabled:focus-within{color:#7f7f7f}snt-link a.theme-disabledSecondary{background-color:transparent;color:#b2b2b2;-webkit-box-shadow:inset 0 0 0 3px #b2b2b2;box-shadow:inset 0 0 0 3px #b2b2b2}snt-link a.theme-disabledSecondary:hover,snt-link a.theme-disabledSecondary:focus,snt-link a.theme-disabledSecondary:focus-within{color:#b2b2b2}snt-link a .icon-new-window:before{color:#147582}snt-link a:hover{text-decoration:none;background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(transparent, transparent), linear-gradient(#9e0a9a, #9e0a9a);background-size:0 1px, 100% 1px;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s;-webkit-transition-property:background-size;transition-property:background-size}snt-link a:focus{padding:1px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:-1px;background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(transparent, transparent), linear-gradient(#9e0a9a, #9e0a9a);background-size:0 1px, 100% 1px;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s;-webkit-transition-property:background-size;transition-property:background-size}snt-link a:active{outline:none}snt-link a span.icon-font.icon-new-window{position:relative;right:0}snt-link a{color:#147582}snt-link a:before{background-color:#9e0a9a}snt-link a:focus{outline:1px solid #147582;outline-offset:2px}snt-link a:hover,snt-link a:focus{color:#9e0a9a}snt-link a:hover .icon-new-window:before,snt-link a:focus .icon-new-window:before{color:#9e0a9a}snt-link.light-fill a,.light-fill snt-link a{color:#147582}snt-link.light-fill a:focus,.light-fill snt-link a:focus{outline:1px solid #147582}snt-link.light-fill a:hover,snt-link.light-fill a:focus,.light-fill snt-link a:hover,.light-fill snt-link a:focus{color:#9e0a9a}snt-link.light-fill a:hover,snt-link.light-fill a:focus,.light-fill snt-link a:hover,.light-fill snt-link a:focus{background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(transparent, transparent), linear-gradient(#9e0a9a, #9e0a9a)}snt-link.neutral-fill a,.neutral-fill snt-link a{color:#147582}snt-link.neutral-fill a:focus,.neutral-fill snt-link a:focus{outline:1px solid #147582}snt-link.neutral-fill a:hover,snt-link.neutral-fill a:focus,.neutral-fill snt-link a:hover,.neutral-fill snt-link a:focus{color:#9e0a9a}snt-link.neutral-fill a:hover,snt-link.neutral-fill a:focus,.neutral-fill snt-link a:hover,.neutral-fill snt-link a:focus{background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(transparent, transparent), linear-gradient(#9e0a9a, #9e0a9a)}snt-link.dark-fill a,.dark-fill snt-link a{color:#ffffff}snt-link.dark-fill a:focus,.dark-fill snt-link a:focus{outline:1px solid #ffffff}snt-link.dark-fill a:hover,snt-link.dark-fill a:focus,.dark-fill snt-link a:hover,.dark-fill snt-link a:focus{color:#d9f0f4}snt-link.dark-fill a:hover,snt-link.dark-fill a:focus,.dark-fill snt-link a:hover,.dark-fill snt-link a:focus{background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#d9f0f4), to(#d9f0f4));background-image:linear-gradient(transparent, transparent), linear-gradient(#d9f0f4, #d9f0f4)}snt-link.white-fill a,.white-fill snt-link a{color:#147582}snt-link.white-fill a:focus,.white-fill snt-link a:focus{outline:1px solid #147582}snt-link.white-fill a:hover,snt-link.white-fill a:focus,.white-fill snt-link a:hover,.white-fill snt-link a:focus{color:#9e0a9a}snt-link.white-fill a:hover,snt-link.white-fill a:focus,.white-fill snt-link a:hover,.white-fill snt-link a:focus{background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#9e0a9a), to(#9e0a9a));background-image:linear-gradient(transparent, transparent), linear-gradient(#9e0a9a, #9e0a9a)}snt-link a.theme-link{font-size:0.875em;font-weight:bold;color:#323232}snt-link a.theme-link:hover,snt-link a.theme-link:focus{color:#147582}snt-link a.theme-link:hover:before,snt-link a.theme-link:focus:before{background:#147582}snt-link a.theme-link:focus{outline:1px solid #323232}snt-link a.theme-action{font-family:\"Averta-ExtraBold\";font-weight:500;text-decoration:none;background-image:none}snt-link a.theme-action:before{height:3px;bottom:-3px;background-color:#147582}snt-link a.theme-action:hover,snt-link a.theme-action:focus{text-decoration:none}snt-link a.theme-action:hover:before,snt-link a.theme-action:focus:before{all:unset}snt-link a.theme-action:hover .link-content,snt-link a.theme-action:focus .link-content{background-image:-webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent)), -webkit-gradient(linear, left top, left bottom, from(#147582), to(#147582));background-image:linear-gradient(transparent, transparent), linear-gradient(#147582, #147582);background-size:0 3px, 100% 3px;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s}snt-link a.theme-action:hover .icon-new-window:after,snt-link a.theme-action:focus .icon-new-window:after{color:#147582}snt-link a.theme-action .link-content{padding-bottom:3px;background-image:-webkit-gradient(linear, left top, left bottom, from(#323232), to(#323232)), -webkit-gradient(linear, left top, left bottom, from(#147582), to(#147582));background-image:linear-gradient(#323232, #323232), linear-gradient(#147582, #147582);background-size:100% 3px, 0 3px;background-position:100% 100%, 0 100%;background-repeat:no-repeat}snt-link a.theme-action .icon-new-window:before{all:unset}snt-link a.theme-action .icon-new-window:after{content:\"\";font-size:1.02em !important;right:auto;margin-left:5px;padding-left:5px;color:#323232;display:inline-block}snt-link a.cta{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;padding:13px 21px;font-size:1.125em;width:auto;cursor:pointer;line-height:normal;font-family:\"Averta-ExtraBold\", sans-serif;overflow:visible;outline:none;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;border:none}p snt-link[target=_blank]{padding-right:25px}h1 snt-link a,h2 snt-link a,h3 snt-link a,h4 snt-link a,h5 snt-link a,h6 snt-link a{font-family:\"Averta-ExtraBold\", sans-serif}";

class LinkComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.linkEvent = createEvent(this, "linkEvent", 7);
        this.hiddenTitle = StringUtils.empty();
        this.isExternal = false;
        this.classNames = StringUtils.empty();
    }
    handleKeyDown(keyboardEvent) {
        this.linkEvent.emit(keyboardEvent);
    }
    handleClick(clickEvent) {
        this.linkEvent.emit(clickEvent);
    }
    handleMouseover(clickEvent) {
        this.linkEvent.emit(clickEvent);
    }
    componentWillLoad() {
        this.content = h("slot", null);
        const isExternalLink = AccessibilityUtils.isAccessibilityLinkRequired(this.element, this.href, this.target);
        if (isExternalLink) {
            let title = AccessibilityUtils.getNewWindowTitle();
            let text = AccessibilityUtils.getNewWindowText();
            this.content = [h("span", { class: "link-content" }, this.content),
                h("span", { class: 'icon-font icon-new-window', title: title }, h("span", { class: 'sr-only' }, " ", text))
            ];
            if (this.rel) {
                if (!this.rel.includes('noopener')) {
                    this.rel = this.rel.concat(' noopener ');
                }
            }
            else {
                this.rel = 'noopener';
            }
        }
    }
    render() {
        return [
            h("a", { id: this.linkId, rel: this.rel, href: this.href, target: this.target, download: this.downloadName, "aria-label": this.ariaLabel, class: WebUtils.generateClasses([], this.classNames), "hidden-title": this.hiddenTitle }, this.content)
        ];
    }
    get element() { return getElement(this); }
    static get style() { return linkComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-link",
        "$members$": {
            "linkId": [1, "link-id"],
            "href": [513],
            "target": [513],
            "ariaLabel": [513, "aria-label"],
            "current": [516],
            "downloadName": [513, "download-name"],
            "ariaCurrent": [520, "aria-current"],
            "rel": [513],
            "hiddenTitle": [513, "hidden-title"],
            "isExternal": [4, "is-external"],
            "classNames": [1, "class-names"]
        },
        "$listeners$": [[0, "keydown", "handleKeyDown"], [0, "click", "handleClick"], [1, "mouseover", "handleMouseover"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["target", "target"], ["ariaLabel", "aria-label"], ["current", "current"], ["downloadName", "download-name"], ["ariaCurrent", "aria-current"], ["rel", "rel"], ["hiddenTitle", "hidden-title"]]
    }; }
}
LinkComponent.TAG_NAME = "snt-link";

const linkExampleCss = "link-example table{width:100%}link-example th{padding:5px;width:25%;border:1px solid black}link-example td{width:25%;text-align:left;border:1px solid black}link-example td p{padding:5px}.light-fill link-example td p,link-example td p.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill link-example td p,link-example td p.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill link-example td p,link-example td p.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill link-example td p,link-example td p.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill link-example td p,link-example td p.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}";

class LinkExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("h1", null, "Link Styles"), h("br", null), h("h2", null, "Regular Links (<a> tags)"), h("snt-layout", null, h("table", null, h("tr", null, h("th", null, "White"), h("th", null, "Secondary light"), h("th", null, "Grey 03"), h("th", null, "Primary Accent")), h("tr", null, h("td", null, h("p", { class: "white-fill" }, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags"))), h("td", null, h("p", { class: "light-fill" }, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags"))), h("td", null, h("p", { class: "neutral-fill" }, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags"))), h("td", null, h("p", { class: "dark-fill" }, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags")))))), h("h2", null, "SntLink Links"), h("snt-layout", null, h("table", null, h("tr", null, h("th", null, "White"), h("th", null, "Secondary light"), h("th", null, "Grey 03"), h("th", null, "Primary Accent")), h("tr", null, h("td", null, h("p", { class: "white-fill" }, h("snt-link", { rel: "nofollow", target: "_blank", href: "www.sonnet.ca" }, "Sonnet Link"))), h("td", null, h("p", { class: "light-fill" }, h("snt-link", { rel: "nofollow noopener", target: "_blank", href: "www.sonnet.ca" }, "Sonnet Link"))), h("td", null, h("p", { class: "neutral-fill" }, h("snt-link", { target: "_blank", href: "www.sonnet.ca" }, "Sonnet Link"))), h("td", null, h("p", { class: "dark-fill" }, h("snt-link", { href: "www.sonnet.ca" }, "Sonnet Link")))))), h("h2", null, "H's"), h("snt-layout", null, h("table", null, h("tr", null, h("th", null, "White"), h("th", null, "Secondary light"), h("th", null, "Grey 03"), h("th", null, "Primary Accent")), h("tr", null, h("td", null, h("p", { class: "white-fill" }, h("h3", null, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags")))), h("td", null, h("p", { class: "light-fill" }, h("h3", null, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags")))), h("td", null, h("p", { class: "neutral-fill" }, h("h3", null, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags"), h("br", null), h("snt-link", { target: "_blank", href: "www.sonnet.ca" }, "Regular")))), h("td", null, h("p", { class: "dark-fill" }, h("h3", null, h("a", { href: "www.sonnet.ca" }, "Regular anchor tags"))))))), h("h2", null, "Footer & Breadcrumbs"), h("snt-layout", null, h("table", null, h("tr", null, h("th", null, "Footer Vertical"), h("th", null, "Footer Horizontal"), h("th", null, "Breadcrumb")), h("tr", null, h("td", null, h("snt-footer", null, h("div", { class: "footer-actions" }, h("snt-nav", null, h("snt-nav-item", { href: "?insurance", target: "_self", "link-title": "Insurance" }))))), h("td", null, h("snt-footer", null, h("div", { class: "footer-row" }, h("snt-nav", null, h("snt-nav-item", { href: "?privacy", target: "_self", "link-title": "Privacy" }))))), h("td", null, h("snt-breadcrumb", { trail: '[{"title": "test", "href": "/test" },{ "title": "Current Page", "href": ""}]' }))))), h("h2", null, "Pagination"), h("snt-layout", null, h("table", null, h("tr", null, h("th", null, "Pagination")), h("tr", null, h("td", null, h("snt-pagination", { "total-pages": 2, curr: 1 }))))), h("br", null)));
    }
    static get style() { return linkExampleCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "link-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class CookieUtils {
    static parseDocumentCookie() {
        return document.cookie.split(';').map((cookieStr) => {
            return cookieStr.trim().split('=').map(decodeURIComponent);
        }).reduce((cookieObj, cookieKeyValPair) => {
            try {
                cookieObj[cookieKeyValPair[0]] = JSON.parse(cookieKeyValPair[1]);
            }
            catch (e) {
                cookieObj[cookieKeyValPair[0]] = cookieKeyValPair[1];
            }
            return cookieObj;
        }, {});
    }
    static readCookie(name) {
        const cookieObj = CookieUtils.parseDocumentCookie();
        return cookieObj[name];
    }
    ;
    static deleteCookie(name) {
        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;
    }
}

const loginComponentCss = "snt-login a{text-decoration:none;white-space:nowrap;font-size:1rem;line-height:1.3125rem;background-image:none}snt-login a:focus,snt-login a:hover{background-image:none}";

class LoginComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.authed = "0";
        this.languageJson = StringUtils.empty();
        this.accountLoginUrl = "https://secure.sonnet.ca/#/login";
        this.accountDashboardUrl = "https://secure.sonnet.ca/#/account/dashboard";
        this.languageStrings = {};
    }
    componentWillLoad() {
        try {
            this.languageJson && (this.languageStrings = JSON.parse(this.languageJson));
        }
        catch (e) {
            console.error(e);
        }
    }
    componentDidLoad() {
        const authed = CookieUtils.readCookie(ComponentConstants.AUTH_COOKIE_NAME);
        this.authed = authed || this.authed;
    }
    render() {
        return ((this.authed && parseInt(this.authed) == 1) ?
            h("snt-link", { href: this.accountDashboardUrl }, h("snt-icon", { styleClasses: "icon-icon_nav_LoggedIn_act" }))
            :
                h("snt-link", { href: this.accountLoginUrl }, this.languageStrings["login"] || "Log In"));
    }
    static get style() { return loginComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-login",
        "$members$": {
            "authed": [1],
            "languageJson": [1, "language-json"],
            "accountLoginUrl": [1, "account-login-url"],
            "accountDashboardUrl": [1, "account-dashboard-url"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
LoginComponent.TAG_NAME = "snt-login";

const multiButtonCss = ".sliderSelector{position:relative;display:inline-block;background:#f8f8f8;border:1px solid #767676;border-radius:30px;overflow:hidden;z-index:100;width:auto;display:table}.sliderSelector .toggle-button{position:relative;display:table;table-layout:fixed;z-index:300}.sliderSelector .toggle-button button,.sliderSelector .toggle-button button:focus,.sliderSelector .toggle-button button::-moz-focus-inner{outline:none;border:none}.sliderSelector .toggle-button .button-wrapper{display:table-cell;}.sliderSelector .toggle-button .button-wrapper button{height:45px;line-height:45px;padding:0px 25px;font-size:1.2rem;-webkit-box-shadow:none;box-shadow:none;background:0 0;width:100%;outline:none;border:none;cursor:pointer;text-align:center}.sliderSelector .toggle-button .button-wrapper button:focus{text-decoration:underline;border:1px solid transparent}.sliderSelector .toggle-button .button-wrapper button.active{color:#414141;text-decoration:underline}.sliderSelector .toggle-button.three-options .btn{font-size:14px}.sliderSelector .active-indicator{position:absolute;top:0;bottom:0;border:2px solid #414141;border-radius:30px;background:#fff;-webkit-transition:all 0.3s cubic-bezier(0.47, 0, 0.75, 0.72) 0s;transition:all 0.3s cubic-bezier(0.47, 0, 0.75, 0.72) 0s;z-index:200}.sliderSelector .toggle-button .button-wrapper:first-child:nth-last-child(n+3)~*{padding-right:0}@media (max-width: 768px){.sliderSelector{display:block}}@media (max-width: 480px){.sliderSelector .toggle-button .button-wrapper button{font-size:0.9rem}}";

class MultiButtonComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styles = {};
    }
    componentWillLoad() {
        this.configurations = ItemUtils.generateConfigurationFromItemOptions(this.element);
    }
    componentDidLoad() {
        let firstItemWidth = parseFloat(getComputedStyle(this.element.querySelector('.toggle-button .button-wrapper')).width);
        this.changeStyle(firstItemWidth, 0); //Set active style on the first item
    }
    handleClick(event) {
        // Reset all buttons
        Array.from(this.element.querySelectorAll('.btn')).map(element => {
            element.classList.remove('active');
            element.setAttribute('selected', 'false');
            element.setAttribute('aria-pressed', 'false');
        });
        // Set Active button
        let button = event.target;
        let index = parseFloat(button.getAttribute('button-index'));
        button.setAttribute('selected', 'true');
        button.classList.add('active');
        button.setAttribute('aria-pressed', 'true');
        let computedWidth = parseFloat(getComputedStyle(button).width) - 4; //adjusting for borders
        let bodyLeft = ((button.getBoundingClientRect().left) - (this.element.getBoundingClientRect().left)) - ((index == 0) ? 1 : 2); //adjusting for the first item
        this.changeStyle(computedWidth, bodyLeft);
    }
    render() {
        return (h(Host, { class: "sliderSelector" }, h("div", { class: "toggle-button full-width", role: "group" }, Array.from(this.configurations.values()).map((item, index) => h("div", { class: "button-wrapper", "data-key": index }, h("button", { class: (item['selected'] ? 'active' : '') + ' btn', id: 'button-' + StringUtils.toCamelCase(item['label']), type: "button", disabled: item['disabled'], role: "button", "aria-pressed": "false", value: item['key'], "button-index": index, onClick: e => this.handleClick(e) }, item['label'])))), h("div", { class: "active-indicator", id: "active-indicator", style: this.styles })));
    }
    changeStyle(width, translateX) {
        this.styles = {
            'width': `${width}px`,
            'transform': `translateX(${translateX}px) scaleX(1)`
        };
    }
    get element() { return getElement(this); }
    static get style() { return multiButtonCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-multi-button",
        "$members$": {
            "styles": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const multiColumnMixedComponentCss = "snt-multi-column-mixed{display:block;}snt-multi-column-mixed.demo .row{outline:1px dashed red;outline-offset:2px}snt-multi-column-mixed.demo .column{outline:1px dashed orange}snt-multi-column-mixed .row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch}snt-multi-column-mixed .column.last-row{margin-bottom:0px}snt-multi-column-mixed .d-none{display:none}snt-multi-column-mixed snt-icon-copy{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}snt-multi-column-mixed .column snt-image-column{display:none}snt-multi-column-mixed snt-image img{position:absolute;top:0;height:100%;width:100%;-o-object-fit:cover;object-fit:cover}snt-multi-column-mixed snt-image-column .image-panel{position:relative;width:100%;overflow:hidden}snt-multi-column-mixed snt-action-button{width:100%}snt-multi-column-mixed snt-action-button snt-button{width:100%}snt-multi-column-mixed snt-action-button snt-button button{width:100% !important}@media (min-width: 768px){snt-multi-column-mixed .column snt-image-column{display:none;margin-bottom:0px}snt-multi-column-mixed.with-gutter .row{margin-left:-13px;margin-right:-13px}}@media (min-width: 1024px){snt-multi-column-mixed .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 20px)}snt-multi-column-mixed .column snt-image-column{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}snt-multi-column-mixed.with-gutter .row{margin-left:-15px;margin-right:-15px}}snt-multi-column-mixed.neutral-fill snt-layout,.neutral-fill snt-multi-column-mixed snt-layout{background-color:#ffffff}snt-multi-column-mixed.light-fill snt-layout,.light-fill snt-multi-column-mixed snt-layout{background-color:#ffffff}snt-multi-column-mixed.float-fill snt-layout,.float-fill snt-multi-column-mixed snt-layout{background-color:#f8f8f8}snt-multi-column-mixed.float-fill snt-layout .column,.float-fill snt-multi-column-mixed snt-layout .column{background-color:#ffffff}snt-multi-column-mixed .column{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex:1 0 100%;flex:1 0 100%;max-width:100%;margin-bottom:26px}snt-multi-column-mixed .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 15px);-ms-flex-item-align:center;align-self:center}@media (min-width: 0){snt-multi-column-mixed .column.extra-small-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}snt-multi-column-mixed .column.extra-small-1>*{width:100%}snt-multi-column-mixed .column.extra-small-2{-ms-flex:0 0 calc(100%/2);flex:0 0 calc(100%/2);max-width:calc(100%/2)}snt-multi-column-mixed .column.extra-small-2:nth-child(2n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-small-2:nth-child(2n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-small-3{-ms-flex:0 0 calc(100%/3);flex:0 0 calc(100%/3);max-width:calc(100%/3)}snt-multi-column-mixed .column.extra-small-3:nth-child(3n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-small-3:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-small-4{-ms-flex:0 0 calc(100%/4);flex:0 0 calc(100%/4);max-width:calc(100%/4)}snt-multi-column-mixed .column.extra-small-4:nth-child(4n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-small-4:nth-child(4n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-small-5{-ms-flex:0 0 calc(100%/5);flex:0 0 calc(100%/5);max-width:calc(100%/5)}snt-multi-column-mixed .column.extra-small-5:nth-child(5n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-small-5:nth-child(5n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-small-6{-ms-flex:0 0 calc(100%/6);flex:0 0 calc(100%/6);max-width:calc(100%/6)}snt-multi-column-mixed .column.extra-small-6:nth-child(6n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-small-6:nth-child(6n)>*{-ms-flex-item-align:end;align-self:flex-end}}@media (min-width: 576px){snt-multi-column-mixed .column.small-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}snt-multi-column-mixed .column.small-1>*{width:100%}snt-multi-column-mixed .column.small-2{-ms-flex:0 0 calc(100%/2);flex:0 0 calc(100%/2);max-width:calc(100%/2)}snt-multi-column-mixed .column.small-2:nth-child(2n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.small-2:nth-child(2n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.small-3{-ms-flex:0 0 calc(100%/3);flex:0 0 calc(100%/3);max-width:calc(100%/3)}snt-multi-column-mixed .column.small-3:nth-child(3n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.small-3:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.small-4{-ms-flex:0 0 calc(100%/4);flex:0 0 calc(100%/4);max-width:calc(100%/4)}snt-multi-column-mixed .column.small-4:nth-child(4n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.small-4:nth-child(4n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.small-5{-ms-flex:0 0 calc(100%/5);flex:0 0 calc(100%/5);max-width:calc(100%/5)}snt-multi-column-mixed .column.small-5:nth-child(5n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.small-5:nth-child(5n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.small-6{-ms-flex:0 0 calc(100%/6);flex:0 0 calc(100%/6);max-width:calc(100%/6)}snt-multi-column-mixed .column.small-6:nth-child(6n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.small-6:nth-child(6n)>*{-ms-flex-item-align:end;align-self:flex-end}}@media (min-width: 768px){snt-multi-column-mixed .column.medium-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}snt-multi-column-mixed .column.medium-1>*{width:100%}snt-multi-column-mixed .column.medium-2{-ms-flex:0 0 calc(100%/2);flex:0 0 calc(100%/2);max-width:calc(100%/2)}snt-multi-column-mixed .column.medium-2:nth-child(2n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.medium-2:nth-child(2n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.medium-3{-ms-flex:0 0 calc(100%/3);flex:0 0 calc(100%/3);max-width:calc(100%/3)}snt-multi-column-mixed .column.medium-3:nth-child(3n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.medium-3:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.medium-4{-ms-flex:0 0 calc(100%/4);flex:0 0 calc(100%/4);max-width:calc(100%/4)}snt-multi-column-mixed .column.medium-4:nth-child(4n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.medium-4:nth-child(4n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.medium-5{-ms-flex:0 0 calc(100%/5);flex:0 0 calc(100%/5);max-width:calc(100%/5)}snt-multi-column-mixed .column.medium-5:nth-child(5n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.medium-5:nth-child(5n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.medium-6{-ms-flex:0 0 calc(100%/6);flex:0 0 calc(100%/6);max-width:calc(100%/6)}snt-multi-column-mixed .column.medium-6:nth-child(6n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.medium-6:nth-child(6n)>*{-ms-flex-item-align:end;align-self:flex-end}}@media (min-width: 1024px){snt-multi-column-mixed .column.large-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}snt-multi-column-mixed .column.large-1>*{width:100%}snt-multi-column-mixed .column.large-2{-ms-flex:0 0 calc(100%/2);flex:0 0 calc(100%/2);max-width:calc(100%/2)}snt-multi-column-mixed .column.large-2:nth-child(2n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.large-2:nth-child(2n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.large-3{-ms-flex:0 0 calc(100%/3);flex:0 0 calc(100%/3);max-width:calc(100%/3)}snt-multi-column-mixed .column.large-3:nth-child(3n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.large-3:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.large-4{-ms-flex:0 0 calc(100%/4);flex:0 0 calc(100%/4);max-width:calc(100%/4)}snt-multi-column-mixed .column.large-4:nth-child(4n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.large-4:nth-child(4n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.large-5{-ms-flex:0 0 calc(100%/5);flex:0 0 calc(100%/5);max-width:calc(100%/5)}snt-multi-column-mixed .column.large-5:nth-child(5n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.large-5:nth-child(5n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.large-6{-ms-flex:0 0 calc(100%/6);flex:0 0 calc(100%/6);max-width:calc(100%/6)}snt-multi-column-mixed .column.large-6:nth-child(6n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.large-6:nth-child(6n)>*{-ms-flex-item-align:end;align-self:flex-end}}@media (min-width: 1440px){snt-multi-column-mixed .column.extra-large-1{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}snt-multi-column-mixed .column.extra-large-1>*{width:100%}snt-multi-column-mixed .column.extra-large-2{-ms-flex:0 0 calc(100%/2);flex:0 0 calc(100%/2);max-width:calc(100%/2)}snt-multi-column-mixed .column.extra-large-2:nth-child(2n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-large-2:nth-child(2n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-large-3{-ms-flex:0 0 calc(100%/3);flex:0 0 calc(100%/3);max-width:calc(100%/3)}snt-multi-column-mixed .column.extra-large-3:nth-child(3n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-large-3:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-large-4{-ms-flex:0 0 calc(100%/4);flex:0 0 calc(100%/4);max-width:calc(100%/4)}snt-multi-column-mixed .column.extra-large-4:nth-child(4n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-large-4:nth-child(4n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-large-5{-ms-flex:0 0 calc(100%/5);flex:0 0 calc(100%/5);max-width:calc(100%/5)}snt-multi-column-mixed .column.extra-large-5:nth-child(5n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-large-5:nth-child(5n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-multi-column-mixed .column.extra-large-6{-ms-flex:0 0 calc(100%/6);flex:0 0 calc(100%/6);max-width:calc(100%/6)}snt-multi-column-mixed .column.extra-large-6:nth-child(6n+1)>*{-ms-flex-item-align:start;align-self:flex-start}snt-multi-column-mixed .column.extra-large-6:nth-child(6n)>*{-ms-flex-item-align:end;align-self:flex-end}}@media (min-width: 1024px){snt-multi-column-mixed .column:not(.last-row){margin-bottom:30px}}@media (min-width: 0){snt-multi-column-mixed.with-gutter .column.extra-small-2{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/2) - 0px);flex:0 0 calc(calc(100%/2) - 0px);max-width:calc(calc(100%/2) - 0px)}snt-multi-column-mixed.with-gutter .column.extra-small-3{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/3) - 0px);flex:0 0 calc(calc(100%/3) - 0px);max-width:calc(calc(100%/3) - 0px)}snt-multi-column-mixed.with-gutter .column.extra-small-4{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/4) - 0px);flex:0 0 calc(calc(100%/4) - 0px);max-width:calc(calc(100%/4) - 0px)}snt-multi-column-mixed.with-gutter .column.extra-small-5{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/5) - 0px);flex:0 0 calc(calc(100%/5) - 0px);max-width:calc(calc(100%/5) - 0px)}snt-multi-column-mixed.with-gutter .column.extra-small-6{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/6) - 0px);flex:0 0 calc(calc(100%/6) - 0px);max-width:calc(calc(100%/6) - 0px)}}@media (min-width: 576px){snt-multi-column-mixed.with-gutter .column.small-2{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/2) - 0px);flex:0 0 calc(calc(100%/2) - 0px);max-width:calc(calc(100%/2) - 0px)}snt-multi-column-mixed.with-gutter .column.small-3{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/3) - 0px);flex:0 0 calc(calc(100%/3) - 0px);max-width:calc(calc(100%/3) - 0px)}snt-multi-column-mixed.with-gutter .column.small-4{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/4) - 0px);flex:0 0 calc(calc(100%/4) - 0px);max-width:calc(calc(100%/4) - 0px)}snt-multi-column-mixed.with-gutter .column.small-5{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/5) - 0px);flex:0 0 calc(calc(100%/5) - 0px);max-width:calc(calc(100%/5) - 0px)}snt-multi-column-mixed.with-gutter .column.small-6{margin-left:0px;margin-right:0px;-ms-flex:0 0 calc(calc(100%/6) - 0px);flex:0 0 calc(calc(100%/6) - 0px);max-width:calc(calc(100%/6) - 0px)}}@media (min-width: 768px){snt-multi-column-mixed.with-gutter .column.medium-2{margin-left:13px;margin-right:13px;-ms-flex:0 0 calc(calc(100%/2) - 26px);flex:0 0 calc(calc(100%/2) - 26px);max-width:calc(calc(100%/2) - 26px)}snt-multi-column-mixed.with-gutter .column.medium-3{margin-left:13px;margin-right:13px;-ms-flex:0 0 calc(calc(100%/3) - 26px);flex:0 0 calc(calc(100%/3) - 26px);max-width:calc(calc(100%/3) - 26px)}snt-multi-column-mixed.with-gutter .column.medium-4{margin-left:13px;margin-right:13px;-ms-flex:0 0 calc(calc(100%/4) - 26px);flex:0 0 calc(calc(100%/4) - 26px);max-width:calc(calc(100%/4) - 26px)}snt-multi-column-mixed.with-gutter .column.medium-5{margin-left:13px;margin-right:13px;-ms-flex:0 0 calc(calc(100%/5) - 26px);flex:0 0 calc(calc(100%/5) - 26px);max-width:calc(calc(100%/5) - 26px)}snt-multi-column-mixed.with-gutter .column.medium-6{margin-left:13px;margin-right:13px;-ms-flex:0 0 calc(calc(100%/6) - 26px);flex:0 0 calc(calc(100%/6) - 26px);max-width:calc(calc(100%/6) - 26px)}}@media (min-width: 1024px){snt-multi-column-mixed.with-gutter .column.large-2{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/2) - 30px);flex:0 0 calc(calc(100%/2) - 30px);max-width:calc(calc(100%/2) - 30px)}snt-multi-column-mixed.with-gutter .column.large-3{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/3) - 30px);flex:0 0 calc(calc(100%/3) - 30px);max-width:calc(calc(100%/3) - 30px)}snt-multi-column-mixed.with-gutter .column.large-4{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/4) - 30px);flex:0 0 calc(calc(100%/4) - 30px);max-width:calc(calc(100%/4) - 30px)}snt-multi-column-mixed.with-gutter .column.large-5{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/5) - 30px);flex:0 0 calc(calc(100%/5) - 30px);max-width:calc(calc(100%/5) - 30px)}snt-multi-column-mixed.with-gutter .column.large-6{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/6) - 30px);flex:0 0 calc(calc(100%/6) - 30px);max-width:calc(calc(100%/6) - 30px)}}@media (min-width: 1440px){snt-multi-column-mixed.with-gutter .column.extra-large-2{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/2) - 30px);flex:0 0 calc(calc(100%/2) - 30px);max-width:calc(calc(100%/2) - 30px)}snt-multi-column-mixed.with-gutter .column.extra-large-3{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/3) - 30px);flex:0 0 calc(calc(100%/3) - 30px);max-width:calc(calc(100%/3) - 30px)}snt-multi-column-mixed.with-gutter .column.extra-large-4{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/4) - 30px);flex:0 0 calc(calc(100%/4) - 30px);max-width:calc(calc(100%/4) - 30px)}snt-multi-column-mixed.with-gutter .column.extra-large-5{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/5) - 30px);flex:0 0 calc(calc(100%/5) - 30px);max-width:calc(calc(100%/5) - 30px)}snt-multi-column-mixed.with-gutter .column.extra-large-6{margin-left:15px;margin-right:15px;-ms-flex:0 0 calc(calc(100%/6) - 30px);flex:0 0 calc(calc(100%/6) - 30px);max-width:calc(calc(100%/6) - 30px)}}";

var __awaiter$j = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class MultiColumnComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    componentWillLoad() {
        if (this.columnCount)
            this.columnCountObj = JSON.parse(this.columnCount);
    }
    componentDidLoad() {
        this.registerChildren();
        this.adjustLayout();
    }
    registerChildren() {
        this.flexGrid.childNodes.forEach((childEl) => {
            if (childEl.classList && childEl.classList.contains('column')) {
                childEl.childNodes.forEach((columnChildEl) => {
                    if (columnChildEl.tagName === 'SNT-ICON-COPY') {
                        columnChildEl.registerViewport(this.layoutEl);
                    }
                });
            }
        });
    }
    adjustLayout() {
        return __awaiter$j(this, void 0, void 0, function* () {
            let viewport = this.getViewport();
            Array.from(this.flexGrid.children).forEach((child) => {
                child.setAttribute('viewport', viewport);
            });
            this.toggleImages(viewport);
            yield this.tagLastRow(viewport);
            yield this.setColumns();
        });
    }
    getViewport() {
        const viewportBreakpoints = [
            { breakpoint: ComponentConstants.EXTRA_LARGE.getLeft(), viewport: 'extra-large' },
            { breakpoint: ComponentConstants.LARGE.getLeft(), viewport: 'large' },
            { breakpoint: ComponentConstants.MEDIUM.getLeft(), viewport: 'medium' },
            { breakpoint: ComponentConstants.SMALL.getLeft(), viewport: 'small' },
            { breakpoint: ComponentConstants.EXTRA_SMALL.getLeft(), viewport: 'extra-small' }
        ];
        const currentViewBreakpoint = viewportBreakpoints.find((viewBreakpoint) => window.innerWidth >= viewBreakpoint.breakpoint);
        return currentViewBreakpoint.viewport;
    }
    // TODO: Change into media queries
    toggleImages(viewport) {
        if (viewport == 'medium' || viewport == 'small') {
            this.hostElement.querySelectorAll('.column').forEach((item) => {
                if (item.contains(item.querySelector('snt-image-column'))) {
                    item.classList.add('d-none');
                }
            });
        }
        else {
            this.hostElement.querySelectorAll('.column').forEach((item) => {
                if (item.classList.contains('d-none')) {
                    item.classList.remove('d-none');
                }
            });
        }
    }
    // TODO: Rework this section to prevent repait for performance purposes
    tagLastRow(viewport) {
        return __awaiter$j(this, void 0, void 0, function* () {
            this.hostElement.querySelectorAll('.column').forEach((containerEl) => {
                containerEl.classList.remove('last-row');
            });
            const columnElements = this.hostElement.querySelectorAll('.column:not(.d-none)');
            const numberOfColumnsInLastRow = columnElements.length % this.columnCountObj[viewport] === 0
                ? Math.min(columnElements.length, this.columnCountObj[viewport])
                : columnElements.length % this.columnCountObj[viewport];
            const startingElement = columnElements.length - numberOfColumnsInLastRow;
            for (let index = startingElement; index < columnElements.length; index++) {
                columnElements[index].classList.add('last-row');
            }
        });
    }
    setColumns() {
        return __awaiter$j(this, void 0, void 0, function* () {
            const classList = [];
            for (const [key, value] of Object.entries(this.columnCountObj)) {
                classList.push(`${key}-${value}`);
            }
            this.hostElement.querySelectorAll('.column').forEach((containerEl) => {
                containerEl.classList.add(...classList);
            });
        });
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("snt-layout", { ref: (el) => this.layoutEl = el }, h("div", { class: "row", ref: el => this.flexGrid = el }, h("slot", null)))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return multiColumnMixedComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-multi-column-mixed",
        "$members$": {
            "styleClasses": [513, "style-classes"],
            "columnCount": [1, "column-count"],
            "tagLastRow": [64],
            "setColumns": [64]
        },
        "$listeners$": [[9, "resize", "adjustLayout"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}
MultiColumnComponent.TAG_NAME = "snt-multi-column-mixed";

class MultiColumnExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        const single_column_json = '{"extra-small": 1,"small": 1,"medium": 1,"large": 1,"extra-large": 1}';
        const two_columns_json = '{"extra-small": 1,"small": 1,"medium": 2,"large": 2,"extra-large": 2}';
        const three_columns_json = '{"extra-small": 1,"small": 1,"medium": 3,"large": 3,"extra-large": 3}';
        const four_columns_json = '{"extra-small": 1,"small": 1,"medium": 4,"large": 4,"extra-large": 4}';
        const five_columns_json = '{"extra-small": 1,"small": 1,"medium": 5,"large": 5,"extra-large": 5}';
        const six_columns_json = '{"extra-small": 1,"small": 1,"medium": 6,"large": 6,"extra-large": 6}';
        return (h("div", null, h("h1", null, "Multi Column Mixed Content Component"), h("br", null), h("br", null), h("h2", null, "Use Case 1 - Mixed Content With Images"), h("br", null), h("br", null), h("h3", null, "Example 1 - Two (2) columns per row with image"), h("b", null, two_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": two_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 5" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 8" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 2 - Three (3) columns per row with image"), h("b", null, three_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": three_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 6" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 8" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 9" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 10" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 12" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 3 - Four (4) columns per row"), h("b", null, four_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": four_columns_json }, h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 5" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 7" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 10" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 12" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 13" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 15" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" }))), h("br", null), h("br", null), h("br", null), h("br", null), h("h2", null, "Use Case 2 - Mixed content without Images"), h("br", null), h("br", null), h("h3", null, "Example 1 - One (1) column per row"), h("b", null, single_column_json), h("snt-multi-column-mixed", { class: "demo", "column-count": single_column_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 2 - Two (2) columns per row"), h("b", null, two_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": two_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 3 - Three (3) columns per row"), h("b", null, three_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": three_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 3" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 3" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 4 - Four (4) columns per row"), h("b", null, four_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": four_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 3" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 5" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 6" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 7" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 8" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 5 - Five (5) columns per row"), h("b", null, five_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": five_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 3" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 5" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 6" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 7" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 8" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 9" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 10" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")))), h("br", null), h("br", null), h("h3", null, "Example 6 - Six (6) columns per row"), h("b", null, six_columns_json), h("snt-multi-column-mixed", { class: "demo", "column-count": six_columns_json }, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 1" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 2" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 3" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 4" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 5" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 6" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 7" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 8" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 9" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 10" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 11" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{"largeIconUrl": "https://t.ly/i2fU", "smallIconUrl": "https://t.ly/i2fU"}', "title-string": "Column 12" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."))))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "multi-column-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
MultiColumnExample.TAG_NAME = "multi-column-example";

var NavItemTypeEnum;
(function (NavItemTypeEnum) {
    NavItemTypeEnum["LINK"] = "link";
    NavItemTypeEnum["SUBNAV"] = "subnav";
    NavItemTypeEnum["ACTION_LINK"] = "action-link";
    NavItemTypeEnum["CUSTOM"] = "custom";
})(NavItemTypeEnum || (NavItemTypeEnum = {}));
(function (NavItemTypeEnum) {
    function exists(value) {
        if (value) {
            return (NavItemTypeEnum[value.toUpperCase().trim()] != null);
        }
        throw new Error(`Argument with value ${value} must be a valid string.`);
    }
    NavItemTypeEnum.exists = exists;
    function findByValue(text) {
        if (exists(text)) {
            return NavItemTypeEnum[text.toUpperCase().trim()];
        }
        throw new Error(`Argument text with value ${text} does not exist.`);
    }
    NavItemTypeEnum.findByValue = findByValue;
})(NavItemTypeEnum || (NavItemTypeEnum = {}));

class NavUtils {
    static isCurrentPage(navItem) {
        if (navItem["href"]) {
            return (navItem["href"] == window.location.search);
        }
        return false;
    }
    static identifyType(element) {
        if (element.querySelectorAll(NavItemComponent.TAG_NAME).length > 0) {
            return NavItemTypeEnum.SUBNAV;
        }
        else if (element.href) {
            if (element.href.includes("action:")) {
                return NavItemTypeEnum.ACTION_LINK;
            }
            else {
                return NavItemTypeEnum.LINK;
            }
        }
        else {
            return NavItemTypeEnum.CUSTOM;
        }
    }
}

const navItemComponentCss = "snt-nav-item{position:relative}snt-nav-item .dropdown-toggle{margin-right:0.5rem}snt-nav-item .dropdown-toggle:after{display:none}snt-nav-item .dropdown-menu{top:calc(100% + 1rem);left:-1.875rem;font-family:\"Averta-Regular\", sans-serif;background-color:#323232;border:none;border-radius:0;padding:0.225rem 0 0 0.875rem}@media (min-width: 1024px){snt-nav-item .dropdown-menu{padding:1.5rem 1.875rem}}snt-nav-item .dropdown-menu a{margin-left:15px}@media (min-width: 768px){snt-nav-item .dropdown-menu a{margin-left:initial}}snt-nav-item .dropdown-menu snt-nav-item{line-height:1.3125rem}snt-nav-item .expander{outline:none}snt-nav-item .expander snt-icon{-webkit-transform:rotate(90deg);transform:rotate(90deg);outline:none}";

var __awaiter$k = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class NavItemComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.navItemEvent = createEvent(this, "navItemEvent", 7);
        this.expanded = false;
        this.current = false;
        this.styleClasses = StringUtils.empty();
        this.isExternal = false;
    }
    expand() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.expanded = true;
        });
    }
    collapse() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.expanded = false;
        });
    }
    toggleExpanded() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.expanded = !this.expanded;
        });
    }
    setCurrent() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.current = true;
        });
    }
    unsetCurrent() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.current = false;
        });
    }
    toggleCurrent() {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.current = !this.current;
        });
    }
    watchCurrent() {
        if (this.parent) {
            this.parent.toggleCurrent().then(null);
            if (!(window.innerWidth >= 768)) {
                this.parent.expanded = true;
            }
        }
    }
    watchExpanded() {
        if (this.type == NavItemTypeEnum.SUBNAV) {
            this.navItemEvent.emit();
        }
    }
    registerParent(parent) {
        return __awaiter$k(this, void 0, void 0, function* () {
            this.parent = parent;
        });
    }
    handleMouseOver(_e) {
        if (window.innerWidth >= 768) {
            clearTimeout(this.collapseTimeout);
            if (!this.expanded)
                this.expanded = true;
        }
    }
    handleMouseleave() {
        this.collapseTimeout = setTimeout(() => {
            this.collapse();
        }, 250);
    }
    componentWillLoad() {
        this.type = NavUtils.identifyType(this.element);
    }
    componentDidLoad() {
        this.registerChildren();
    }
    isType(type) {
        return __awaiter$k(this, void 0, void 0, function* () {
            return type == this.type;
        });
    }
    registerChildren() {
        if (this.type == NavItemTypeEnum.SUBNAV) {
            const children = this.element.querySelectorAll(NavItemComponent.TAG_NAME);
            if (children) {
                children.forEach((child) => {
                    child.registerParent(this.element);
                });
            }
        }
    }
    render() {
        const subnavId = `${this.element.id}-subnav`;
        const expanderId = `${this.element.id}-expander`;
        const showClass = (this.expanded) ? "show" : "";
        const navLinkClass = `nav-link ${(this.type == NavItemTypeEnum.SUBNAV) ? "dropdown-toggle" : ""}`;
        const linkAriaLabel = `${(this.type == NavItemTypeEnum.SUBNAV) ? `${this.linkTitle}, tab to the next button to expand the sub-menu` : this.linkTitle}`;
        //const ariaCurrent = `${(this.current) ? "page" : false}`;
        const icon = [
            h("snt-icon", { styleClasses: this.iconClassName })
        ];
        const link = [
            h("snt-link", { href: this.href, target: this.target, class: navLinkClass, current: this.current, "aria-label": linkAriaLabel, "aria-current": true, "hidden-title": this.linkTitle, "is-external": this.isExternal }, this.iconClassName ? icon : "", this.linkTitle)
        ];
        const expander = (h("button", { type: "button", class: "expander", onClick: this.toggleExpanded.bind(this), "aria-expanded": this.expanded.toString(), "aria-haspopup": "true", "aria-label": `${this.linkTitle}`, "aria-owns": subnavId }, h("snt-icon", { styleClasses: (this.expanded) ? "icon-icon_nav_minus_inv" : "icon-icon_nav_plus" })));
        const subnav = [
            h("div", { class: "position-relative" }, [link, expander]),
            h("div", { "aria-label": "1 of 1", role: "menu", class: `dropdown-menu ${showClass}`, id: subnavId, "aria-labelledby": expanderId }, h("slot", null))
        ];
        const actionReference = (this.href) ? this.href.replace("action:", "") : "";
        const actionLink = h("snt-action-link", { "action-reference": actionReference, linkTitle: this.linkTitle, iconClassName: this.iconClassName });
        const custom = [
            h("slot", null)
        ];
        const template = {
            "link": link,
            "action-link": actionLink,
            "subnav": subnav,
            "custom": custom
        };
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses), role: "listitem" }, template[this.type]));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "current": ["watchCurrent"],
        "expanded": ["watchExpanded"]
    }; }
    static get style() { return navItemComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-nav-item",
        "$members$": {
            "href": [513],
            "target": [513],
            "linkTitle": [513, "link-title"],
            "iconClassName": [513, "icon-class-name"],
            "expanded": [516],
            "current": [516],
            "styleClasses": [513, "style-classes"],
            "isExternal": [4, "is-external"],
            "expand": [64],
            "collapse": [64],
            "toggleExpanded": [64],
            "setCurrent": [64],
            "unsetCurrent": [64],
            "toggleCurrent": [64],
            "registerParent": [64],
            "isType": [64]
        },
        "$listeners$": [[1, "mouseover", "handleMouseOver"], [1, "mouseleave", "handleMouseleave"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["target", "target"], ["linkTitle", "link-title"], ["iconClassName", "icon-class-name"], ["expanded", "expanded"], ["current", "current"], ["styleClasses", "style-classes"]]
    }; }
}
NavItemComponent.TAG_NAME = "snt-nav-item";

const navComponentCss = "@charset \"UTF-8\";snt-nav{-ms-flex-align:center;align-items:center}snt-nav[expander=all] snt-nav-item.dropdown .show .expander:after,snt-nav[expander=keyboard] snt-nav-item.dropdown .show .expander:after{content:\"⏶\"}snt-nav[expander=all] .expander,snt-nav[expander=keyboard] .expander{background:transparent;border:0;margin:0;padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;position:absolute;top:50%;-webkit-transform:translateY(-50%) rotate(90deg);transform:translateY(-50%) rotate(90deg);right:0;color:white;display:-ms-flexbox;display:flex;font-size:12px}@media (min-width: 1024px){snt-nav[expander=all] .expander,snt-nav[expander=keyboard] .expander{left:calc(100% + 0.5rem)}}snt-nav[expander=all] .expander:focus,snt-nav[expander=keyboard] .expander:focus{outline:2px solid #b2b2b2}snt-nav[expander=all] .expander{opacity:1}snt-nav[expander=keyboard] snt-nav-item:focus-within:not(:active):not(:hover) .expander{opacity:1}@media (min-width: 1024px){snt-nav[expander=keyboard] snt-nav-item .expander{opacity:0}}snt-nav[separator]>snt-nav-item:last-child{border-right:none}snt-nav.main-nav snt-nav-item{margin:0 0 0.5rem 0;}@media (min-width: 1024px){snt-nav.main-nav snt-nav-item{margin:1.075rem 2.175rem 0 0}}snt-nav.main-nav snt-nav-item a{font-family:Averta-ExtraBold;font-size:1em}snt-nav.main-nav snt-nav-item snt-nav-item{margin:0 0 0.125rem 0}@media (min-width: 1024px){snt-nav.main-nav snt-nav-item snt-nav-item{padding:0;margin:0}}snt-nav.main-nav snt-nav-item snt-nav-item a{font-family:Averta-Regular}snt-nav.secondary-nav{margin-bottom:0.5rem;margin-top:2px}snt-nav.secondary-nav a,snt-nav.secondary-nav button{font-size:0.875rem;line-height:1.25rem}@media (min-width: 768px){snt-nav.actions-nav snt-nav-item{margin:0 0 0 1.5rem}}snt-nav.actions-nav snt-nav-item a{font-family:Averta-ExtraBold}snt-nav.theme-header-nav snt-nav-item{display:block;line-height:1.3125rem}snt-nav.theme-header-nav snt-nav-item .nav-item,snt-nav.theme-header-nav snt-nav-item .nav-link{padding:0;margin:0}snt-nav.theme-header-nav snt-link a{display:inline-block;margin:0;position:relative;text-decoration:none;border-bottom:none}snt-nav.theme-header-nav snt-button:hover snt-icon,snt-nav.theme-header-nav snt-button:hover button{color:#6ebac5}snt-nav.theme-header-nav snt-button snt-icon{margin-right:8px}snt-nav.theme-header-nav snt-link a,snt-nav.theme-header-nav snt-link button,snt-nav.theme-header-nav snt-button:not(.cta) a,snt-nav.theme-header-nav snt-button:not(.cta) button{margin:2px;outline:2px solid transparent;padding:0;white-space:nowrap;}snt-nav.theme-header-nav snt-link a:active,snt-nav.theme-header-nav snt-link a:focus,snt-nav.theme-header-nav snt-link a:hover,snt-nav.theme-header-nav snt-link button:active,snt-nav.theme-header-nav snt-link button:focus,snt-nav.theme-header-nav snt-link button:hover,snt-nav.theme-header-nav snt-button:not(.cta) a:active,snt-nav.theme-header-nav snt-button:not(.cta) a:focus,snt-nav.theme-header-nav snt-button:not(.cta) a:hover,snt-nav.theme-header-nav snt-button:not(.cta) button:active,snt-nav.theme-header-nav snt-button:not(.cta) button:focus,snt-nav.theme-header-nav snt-button:not(.cta) button:hover{color:#6ebac5;font-family:Averta-ExtraBold}snt-nav.theme-header-nav snt-link a:active:before,snt-nav.theme-header-nav snt-link a:focus:before,snt-nav.theme-header-nav snt-link a:hover:before,snt-nav.theme-header-nav snt-link button:active:before,snt-nav.theme-header-nav snt-link button:focus:before,snt-nav.theme-header-nav snt-link button:hover:before,snt-nav.theme-header-nav snt-button:not(.cta) a:active:before,snt-nav.theme-header-nav snt-button:not(.cta) a:focus:before,snt-nav.theme-header-nav snt-button:not(.cta) a:hover:before,snt-nav.theme-header-nav snt-button:not(.cta) button:active:before,snt-nav.theme-header-nav snt-button:not(.cta) button:focus:before,snt-nav.theme-header-nav snt-button:not(.cta) button:hover:before{visibility:hidden}snt-nav.theme-header-nav snt-link a:focus,snt-nav.theme-header-nav snt-link button:focus,snt-nav.theme-header-nav snt-button:not(.cta) a:focus,snt-nav.theme-header-nav snt-button:not(.cta) button:focus{outline:2px solid #b2b2b2;padding:0}snt-nav.theme-header-nav snt-link a:before,snt-nav.theme-header-nav snt-link button:before,snt-nav.theme-header-nav snt-button:not(.cta) a:before,snt-nav.theme-header-nav snt-button:not(.cta) button:before{background-color:#6ebac5;height:2px}snt-nav.theme-header-nav snt-link a:after,snt-nav.theme-header-nav snt-link button:after,snt-nav.theme-header-nav snt-button:not(.cta) a:after,snt-nav.theme-header-nav snt-button:not(.cta) button:after{display:block;font-family:Averta-ExtraBold;content:attr(hidden-title);height:0;overflow:hidden;visibility:hidden;font-size:1.015em}snt-nav.theme-header-nav snt-link[current] a:before,snt-nav.theme-header-nav snt-link[current] button:before,snt-nav.theme-header-nav snt-button:not(.cta)[current] a:before,snt-nav.theme-header-nav snt-button:not(.cta)[current] button:before{width:100%;visibility:visible;-webkit-transform:scaleX(1);transform:scaleX(1)}";

class NavComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    handleNavItemEvent(event) {
        const expanded = event.target.expanded;
        if (expanded) {
            this.collapseSiblingSubnavs(event.target);
        }
    }
    componentDidLoad() {
        this.setActiveNavItem();
    }
    setActiveNavItem() {
        const navItems = this.element.querySelectorAll(NavItemComponent.TAG_NAME);
        if (navItems) {
            navItems.forEach((navItem) => {
                if (navItem.isType(NavItemTypeEnum.ACTION_LINK) && NavUtils.isCurrentPage(navItem)) {
                    navItem.toggleCurrent().then(null); //test
                }
            });
        }
    }
    collapseSiblingSubnavs(currentSubnav) {
        const expandedSubnavs = this.element.querySelectorAll(`${NavItemComponent.TAG_NAME}[expanded]`);
        expandedSubnavs.forEach((expandedSubnav) => {
            if (expandedSubnav != currentSubnav) {
                expandedSubnav.collapse().then(null);
            }
        });
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses(["navbar-nav"], this.styleClasses), role: "list" }, h("slot", null)));
    }
    get element() { return getElement(this); }
    static get style() { return navComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-nav",
        "$members$": {
            "expander": [513],
            "separator": [516],
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": [[0, "navItemEvent", "handleNavItemEvent"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["expander", "expander"], ["separator", "separator"], ["styleClasses", "style-classes"]]
    }; }
}
NavComponent.TAG_NAME = "snt-nav";

const navbarBrandComponentCss = "snt-navbar-brand snt-image img{display:-ms-flexbox;display:flex;max-width:100%;width:5.325rem;height:1rem}@media (min-width: 768px){snt-navbar-brand snt-image img{width:7.5rem;height:1.5rem}}";

class NavbarBrandComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("a", { href: this.href }, h("snt-image", { "img-alt": this.imgAlt, "src-image": this.imgSrc, "data-src": this.imgSrc }))
        ];
    }
    static get style() { return navbarBrandComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-navbar-brand",
        "$members$": {
            "href": [513],
            "imgAlt": [513, "img-alt"],
            "imgSrc": [513, "img-src"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["imgAlt", "img-alt"], ["imgSrc", "img-src"]]
    }; }
}
NavbarBrandComponent.TAG_NAME = "snt-navbar-brand";

const navbarCollapseComponentCss = "snt-navbar-collapse{width:290px}snt-navbar-collapse hr{border-top:1px solid #ffffff;margin:0}snt-navbar-collapse snt-nav{padding:0.825rem 0 0.5rem;border-bottom:1px solid #ffffff}@media (min-width: 1024px){snt-navbar-collapse snt-nav{padding:0;border-bottom:none}}snt-navbar-collapse snt-nav:last-of-type{border-bottom:none}snt-navbar-collapse snt-nav-item{width:100%}@media (min-width: 1024px){snt-navbar-collapse snt-nav-item{width:auto}}snt-navbar-collapse .header{padding:20px 30px 20px 30px}@media (min-width: 1024px){snt-navbar-collapse .header{padding:initial}}snt-navbar-collapse .header snt-icon{font-size:1rem;margin-right:24px}snt-navbar-collapse .header snt-image{width:100%;max-width:85px}snt-navbar-collapse .body{position:relative;padding:0.75rem 2rem 2rem}@media (min-width: 1024px){snt-navbar-collapse .body{padding:0}}snt-navbar-collapse .body snt-button.cta button{width:100%}snt-navbar-collapse .spacer{display:none}@media (min-width: 1024px){snt-navbar-collapse .spacer{display:-ms-flexbox;display:flex;-ms-flex:0 1 4.375rem;flex:0 1 4.375rem;min-width:1rem}}snt-navbar-collapse[shown]{z-index:10000;position:fixed;left:0;top:0;bottom:0;background-color:#323232}@media (min-width: 1024px){snt-navbar-collapse[shown]{position:initial}}";

var __awaiter$l = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class NavbarCollapseComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.navbarToggled = createEvent(this, "navbarToggled", 7);
        this.shown = false;
        this.viewport = null;
        this.logoUrl = null;
        this.inDesktopMode = false;
        this.elementToFocusOn = null;
        this.lastActiveElement = null;
    }
    toggleShown(shown) {
        return __awaiter$l(this, void 0, void 0, function* () {
            this.shown = (typeof (shown) === "boolean") ? shown : !this.shown;
            return Promise.resolve(this.shown);
        });
    }
    onShown(shown) {
        if (shown) {
            this.lastActiveElement = document.activeElement || document.body;
        }
        this.elementToFocusOn = shown ? this.element : this.lastActiveElement;
    }
    onViewport() {
        this.inDesktopMode = (this.viewport == "large" || this.viewport == "extra-large");
    }
    componentWillRender() {
        this.inDesktopMode = (this.viewport == "large" || this.viewport == "extra-large");
    }
    componentDidUpdate() {
        if (this.elementToFocusOn !== null) {
            this.elementToFocusOn.focus();
            this.elementToFocusOn = null;
        }
    }
    render() {
        return (h(Host, { class: `collapse navbar-collapse ${this.shown ? "show" : ""}`, tabindex: this.inDesktopMode ? null : "-1", role: this.inDesktopMode ? null : "dialog", "aria-expanded": this.inDesktopMode ? "false" : this.shown ? "false" : "true" }, h("div", { class: "spacer" }), h("div", { class: "header d-flex d-lg-none align-items-center" }, h("snt-button", { class: "d-inline-flex", onClick: () => this.navbarToggled.emit() }, h("snt-icon", { styleClasses: "iconNavClose" })), h("snt-image", { "data-src": this.logoUrl, width: "100", height: "100" })), h("div", { class: "body" }, h("slot", null))));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "shown": ["onShown"],
        "viewport": ["onViewport"]
    }; }
    static get style() { return navbarCollapseComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-navbar-collapse",
        "$members$": {
            "shown": [516],
            "viewport": [513],
            "logoUrl": [1, "logo-url"],
            "toggleShown": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["shown", "shown"], ["viewport", "viewport"]]
    }; }
}
NavbarCollapseComponent.TAG_NAME = "snt-navbar-collapse";

const navbarComponentCss = "snt-navbar{width:100%}snt-navbar.navbar{margin:0;padding:0;}@media (min-width: 768px){snt-navbar.navbar.navbar-expand-md .nav-link,snt-navbar.navbar.navbar-expand-lg .nav-link{padding-left:0;padding-right:0}}@media (max-width: 1023px){snt-navbar[active] snt-backdrop{display:block}}snt-navbar snt-backdrop{display:none}snt-navbar .actions-nav,snt-navbar .brand-and-toggle{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-flow:row nowrap;flex-flow:row nowrap}@media (min-width: 1024px){snt-navbar .actions-nav,snt-navbar .brand-and-toggle{-ms-flex-flow:column nowrap;flex-flow:column nowrap}}snt-navbar .brand-and-toggle>*:not(:last-child){margin-right:1.25rem}snt-navbar .actions-nav>*:not(:first-child){margin-left:1.25rem}@media (min-width: 1024px){snt-navbar .actions-nav>*:not(:first-child){margin-left:1.625rem}}snt-navbar .main-panel.hidden{visibility:hidden}";

var __awaiter$m = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class NavbarComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    listenNavbarTogglerEvent(_event) {
        this.toggleActive().then(null);
    }
    toggleActive(active) {
        return __awaiter$m(this, void 0, void 0, function* () {
            this.active = (typeof (active) === "boolean") ? active : !this.active;
            return this.active;
        });
    }
    watchActive() {
        if (this.navbarCollapse) {
            this.navbarCollapse.toggleShown(this.active)
                .then(null);
        }
    }
    componentDidLoad() {
        this.navbarCollapse = document.querySelector(`${NavbarCollapseComponent.TAG_NAME}`);
        if (this.navbarCollapse) {
            this.navbarToggle.ariaControls = this.navbarCollapse.id;
        }
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses(["navbar"], this.styleClasses), onSntBackdropTap: () => this.toggleActive() }, h("div", { class: "brand-and-toggle" }, h("snt-navbar-toggle", { ref: (elem) => this.navbarToggle = elem, languageString: this.languageString }), h("slot", { name: "navbar-brand" })), h("slot", { name: "navbar-collapse" }), h("slot", null), h("snt-backdrop", null)));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "active": ["watchActive"]
    }; }
    static get style() { return navbarComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-navbar",
        "$members$": {
            "styleClasses": [1, "style-classes"],
            "active": [516],
            "viewport": [513],
            "languageString": [1, "language-string"],
            "toggleActive": [64]
        },
        "$listeners$": [[0, "navbarToggled", "listenNavbarTogglerEvent"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["active", "active"], ["viewport", "viewport"]]
    }; }
}
NavbarComponent.TAG_NAME = "snt-navbar";

const navbarToggleComponentCss = "snt-navbar-toggle .navbar-toggler{border:none;margin:0;padding:0;display:-ms-flexbox;display:flex}@media (min-width: 768px){snt-navbar-toggle .navbar-toggler{font-size:1.75rem;margin-top:2px}}snt-navbar-toggle .navbar-toggler snt-icon{color:#ffffff}";

var __awaiter$n = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class NavbarToggleComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.navbarToggled = createEvent(this, "navbarToggled", 7);
    }
    toggleCollapsed(collapsed) {
        return __awaiter$n(this, void 0, void 0, function* () {
            this.collapsed = (typeof (collapsed) === "boolean") ? collapsed : !this.collapsed;
            return Promise.resolve(this.collapsed);
        });
    }
    watchCollapsed() {
        this.navbarToggled.emit();
    }
    componentWillLoad() {
        this.languageVariables = LanguageUtils.getVariablesFromString(this.languageString, ["toggleNavigation"]);
    }
    render() {
        return (h("button", { class: "navbar-toggler", "aria-controls": this.ariaControls, "aria-label": this.languageVariables.get("toggleNavigation"), "aria-expanded": this.collapsed ? "false" : "true", onClick: () => this.toggleCollapsed() }, h("snt-icon", { styleClasses: "iconNavBurger" })));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "collapsed": ["watchCollapsed"]
    }; }
    static get style() { return navbarToggleComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-navbar-toggle",
        "$members$": {
            "collapsed": [516],
            "ariaControls": [1, "aria-controls"],
            "languageString": [1, "language-string"],
            "toggleCollapsed": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["collapsed", "collapsed"]]
    }; }
}
NavbarToggleComponent.TAG_NAME = "snt-navbar-toggle";

class PageNotFoundExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("snt-hero", { class: "error-fill" }, h("div", { slot: "content" }, h("h1", null, "Oops! Looks like something went wrong..."), h("p", null, "Let's get you back to finding the right coverage.")))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "page-not-found-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class AnimationUtils {
    static collapseElement(element) {
        // get the height of the element's inner content, regardless of its actual size
        const sectionHeight = element.scrollHeight;
        // temporarily disable all css transitions
        const elementTransition = element.style.transition;
        element.style.transition = '';
        // on the next frame (as soon as the previous style change has taken effect),
        // explicitly set the element's height to its current pixel height, so we
        // aren't transitioning out of 'auto'
        requestAnimationFrame(() => {
            element.style.height = sectionHeight + 'px';
            element.style.transition = elementTransition;
            // on the next frame (as soon as the previous style change has taken effect),
            // have the element transition to height: 0
            requestAnimationFrame(() => {
                element.style.height = 0 + 'px';
                // make element hidden to prevent elements within it being focusable
                element.style.visibility = 'hidden';
            });
        });
    }
    static expandElement(element) {
        // get the height of the element's inner content, regardless of its actual size
        const sectionHeight = element.scrollHeight;
        // make element visible to allow elements within it becoming focusable again
        element.style.visibility = "visible";
        // have the element transition to the height of its inner content
        element.style.height = sectionHeight + 'px';
        // when the next css transition finishes (which should be the one we just triggered)
        element.addEventListener('transitionend', function fn(_evt) {
            element.style.height = "auto";
            // remove this event listener so it only gets triggered once
            element.removeEventListener('transitionend', fn);
            // remove "height" from the element's inline styles, so it can return to its initial value
            //element.style.height = null;
        });
    }
}

const paneComponentCss = "snt-pane{width:100%;display:block}snt-pane[animated]{height:auto;overflow:hidden;-webkit-transition:height 0.3s ease;transition:height 0.3s ease}";

var __awaiter$o = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class PaneComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.collapsed = false;
        this.animated = false;
        this.styleClasses = StringUtils.empty();
    }
    toggleCollapsed(collapsed) {
        return __awaiter$o(this, void 0, void 0, function* () {
            this.collapsed = (typeof (collapsed) === "boolean") ? collapsed : this.collapsed;
            return this.collapsed;
        });
    }
    onCollapsed(collapsed) {
        if (this.animated)
            (collapsed) ? AnimationUtils.collapseElement(this.element) : AnimationUtils.expandElement(this.element);
    }
    listenButtonEvent(_event) {
        this.collapsed = !this.collapsed;
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses), "aria-hidden": this.collapsed ? "true" : "false" }, h("slot", null)));
    }
    get element() { return getElement(this); }
    static get watchers() { return {
        "collapsed": ["onCollapsed"]
    }; }
    static get style() { return paneComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-pane",
        "$members$": {
            "collapsed": [516],
            "animated": [516],
            "styleClasses": [513, "style-classes"],
            "toggleCollapsed": [64]
        },
        "$listeners$": [[0, "close", "listenButtonEvent"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["collapsed", "collapsed"], ["animated", "animated"], ["styleClasses", "style-classes"]]
    }; }
}

var resizeObservers = [];

var hasActiveObservations = function () {
    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });
};

var hasSkippedObservations = function () {
    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });
};

var msg = 'ResizeObserver loop completed with undelivered notifications.';
var deliverResizeLoopError = function () {
    var event;
    if (typeof ErrorEvent === 'function') {
        event = new ErrorEvent('error', {
            message: msg
        });
    }
    else {
        event = document.createEvent('Event');
        event.initEvent('error', false, false);
        event.message = msg;
    }
    window.dispatchEvent(event);
};

var ResizeObserverBoxOptions;
(function (ResizeObserverBoxOptions) {
    ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

var DOMRectReadOnly = (function () {
    function DOMRectReadOnly(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.top = this.y;
        this.left = this.x;
        this.bottom = this.top + this.height;
        this.right = this.left + this.width;
        return Object.freeze(this);
    }
    DOMRectReadOnly.prototype.toJSON = function () {
        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };
    };
    DOMRectReadOnly.fromRect = function (rectangle) {
        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly;
}());

var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };
var isHidden$1 = function (target) {
    if (isSVG(target)) {
        var _a = target.getBBox(), width = _a.width, height = _a.height;
        return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function (obj) {
    var _a, _b;
    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function (target) {
    switch (target.tagName) {
        case 'INPUT':
            if (target.type !== 'image') {
                break;
            }
        case 'VIDEO':
        case 'AUDIO':
        case 'EMBED':
        case 'OBJECT':
        case 'CANVAS':
        case 'IFRAME':
        case 'IMG':
            return true;
    }
    return false;
};

var global$1 = typeof window !== 'undefined' ? window : {};

var cache = new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = (/msie|trident/i).test(global$1.navigator && global$1.navigator.userAgent);
var parseDimension = function (pixel) { return parseFloat(pixel || '0'); };
var size = function (inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) { inlineSize = 0; }
    if (blockSize === void 0) { blockSize = 0; }
    if (switchSizes === void 0) { switchSizes = false; }
    return Object.freeze({
        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,
        blockSize: (switchSizes ? inlineSize : blockSize) || 0
    });
};
var zeroBoxes = Object.freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function (target, forceRecalculation) {
    if (forceRecalculation === void 0) { forceRecalculation = false; }
    if (cache.has(target) && !forceRecalculation) {
        return cache.get(target);
    }
    if (isHidden$1(target)) {
        cache.set(target, zeroBoxes);
        return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === 'border-box';
    var switchSizes = verticalRegexp.test(cs.writingMode || '');
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = Object.freeze({
        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
        contentBoxSize: size(contentWidth, contentHeight, switchSizes),
        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache.set(target, boxes);
    return boxes;
};
var calculateBoxSize = function (target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch (observedBox) {
        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
            return devicePixelContentBoxSize;
        case ResizeObserverBoxOptions.BORDER_BOX:
            return borderBoxSize;
        default:
            return contentBoxSize;
    }
};

var ResizeObserverEntry = (function () {
    function ResizeObserverEntry(target) {
        var boxes = calculateBoxSizes(target);
        this.target = target;
        this.contentRect = boxes.contentRect;
        this.borderBoxSize = [boxes.borderBoxSize];
        this.contentBoxSize = [boxes.contentBoxSize];
        this.devicePixelContentBoxSize = [boxes.devicePixelContentBoxSize];
    }
    return ResizeObserverEntry;
}());

var calculateDepthForNode = function (node) {
    if (isHidden$1(node)) {
        return Infinity;
    }
    var depth = 0;
    var parent = node.parentNode;
    while (parent) {
        depth += 1;
        parent = parent.parentNode;
    }
    return depth;
};

var broadcastActiveObservations = function () {
    var shallowestDepth = Infinity;
    var callbacks = [];
    resizeObservers.forEach(function processObserver(ro) {
        if (ro.activeTargets.length === 0) {
            return;
        }
        var entries = [];
        ro.activeTargets.forEach(function processTarget(ot) {
            var entry = new ResizeObserverEntry(ot.target);
            var targetDepth = calculateDepthForNode(ot.target);
            entries.push(entry);
            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
            if (targetDepth < shallowestDepth) {
                shallowestDepth = targetDepth;
            }
        });
        callbacks.push(function resizeObserverCallback() {
            ro.callback.call(ro.observer, entries, ro.observer);
        });
        ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
        var callback = callbacks_1[_i];
        callback();
    }
    return shallowestDepth;
};

var gatherActiveObservationsAtDepth = function (depth) {
    resizeObservers.forEach(function processObserver(ro) {
        ro.activeTargets.splice(0, ro.activeTargets.length);
        ro.skippedTargets.splice(0, ro.skippedTargets.length);
        ro.observationTargets.forEach(function processTarget(ot) {
            if (ot.isActive()) {
                if (calculateDepthForNode(ot.target) > depth) {
                    ro.activeTargets.push(ot);
                }
                else {
                    ro.skippedTargets.push(ot);
                }
            }
        });
    });
};

var process$2 = function () {
    var depth = 0;
    gatherActiveObservationsAtDepth(depth);
    while (hasActiveObservations()) {
        depth = broadcastActiveObservations();
        gatherActiveObservationsAtDepth(depth);
    }
    if (hasSkippedObservations()) {
        deliverResizeLoopError();
    }
    return depth > 0;
};

var trigger;
var callbacks = [];
var notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };
var queueMicroTask = function (callback) {
    if (!trigger) {
        var toggle_1 = 0;
        var el_1 = document.createTextNode('');
        var config = { characterData: true };
        new MutationObserver(function () { return notify(); }).observe(el_1, config);
        trigger = function () { el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++); };
    }
    callbacks.push(callback);
    trigger();
};

var queueResizeObserver = function (cb) {
    queueMicroTask(function ResizeObserver() {
        requestAnimationFrame(cb);
    });
};

var watching = 0;
var isWatching = function () { return !!watching; };
var CATCH_PERIOD = 250;
var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
var events = [
    'resize',
    'load',
    'transitionend',
    'animationend',
    'animationstart',
    'animationiteration',
    'keyup',
    'keydown',
    'mouseup',
    'mousedown',
    'mouseover',
    'mouseout',
    'blur',
    'focus'
];
var time = function (timeout) {
    if (timeout === void 0) { timeout = 0; }
    return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = (function () {
    function Scheduler() {
        var _this = this;
        this.stopped = true;
        this.listener = function () { return _this.schedule(); };
    }
    Scheduler.prototype.run = function (timeout) {
        var _this = this;
        if (timeout === void 0) { timeout = CATCH_PERIOD; }
        if (scheduled) {
            return;
        }
        scheduled = true;
        var until = time(timeout);
        queueResizeObserver(function () {
            var elementsHaveResized = false;
            try {
                elementsHaveResized = process$2();
            }
            finally {
                scheduled = false;
                timeout = until - time();
                if (!isWatching()) {
                    return;
                }
                if (elementsHaveResized) {
                    _this.run(1000);
                }
                else if (timeout > 0) {
                    _this.run(timeout);
                }
                else {
                    _this.start();
                }
            }
        });
    };
    Scheduler.prototype.schedule = function () {
        this.stop();
        this.run();
    };
    Scheduler.prototype.observe = function () {
        var _this = this;
        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };
        document.body ? cb() : global$1.addEventListener('DOMContentLoaded', cb);
    };
    Scheduler.prototype.start = function () {
        var _this = this;
        if (this.stopped) {
            this.stopped = false;
            this.observer = new MutationObserver(this.listener);
            this.observe();
            events.forEach(function (name) { return global$1.addEventListener(name, _this.listener, true); });
        }
    };
    Scheduler.prototype.stop = function () {
        var _this = this;
        if (!this.stopped) {
            this.observer && this.observer.disconnect();
            events.forEach(function (name) { return global$1.removeEventListener(name, _this.listener, true); });
            this.stopped = true;
        }
    };
    return Scheduler;
}());
var scheduler = new Scheduler();
var updateCount = function (n) {
    !watching && n > 0 && scheduler.start();
    watching += n;
    !watching && scheduler.stop();
};

var skipNotifyOnElement = function (target) {
    return !isSVG(target)
        && !isReplacedElement(target)
        && getComputedStyle(target).display === 'inline';
};
var ResizeObservation = (function () {
    function ResizeObservation(target, observedBox) {
        this.target = target;
        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
        this.lastReportedSize = {
            inlineSize: 0,
            blockSize: 0
        };
    }
    ResizeObservation.prototype.isActive = function () {
        var size = calculateBoxSize(this.target, this.observedBox, true);
        if (skipNotifyOnElement(this.target)) {
            this.lastReportedSize = size;
        }
        if (this.lastReportedSize.inlineSize !== size.inlineSize
            || this.lastReportedSize.blockSize !== size.blockSize) {
            return true;
        }
        return false;
    };
    return ResizeObservation;
}());

var ResizeObserverDetail = (function () {
    function ResizeObserverDetail(resizeObserver, callback) {
        this.activeTargets = [];
        this.skippedTargets = [];
        this.observationTargets = [];
        this.observer = resizeObserver;
        this.callback = callback;
    }
    return ResizeObserverDetail;
}());

var observerMap = new WeakMap();
var getObservationIndex = function (observationTargets, target) {
    for (var i = 0; i < observationTargets.length; i += 1) {
        if (observationTargets[i].target === target) {
            return i;
        }
    }
    return -1;
};
var ResizeObserverController = (function () {
    function ResizeObserverController() {
    }
    ResizeObserverController.connect = function (resizeObserver, callback) {
        var detail = new ResizeObserverDetail(resizeObserver, callback);
        observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController.observe = function (resizeObserver, target, options) {
        var detail = observerMap.get(resizeObserver);
        var firstObservation = detail.observationTargets.length === 0;
        if (getObservationIndex(detail.observationTargets, target) < 0) {
            firstObservation && resizeObservers.push(detail);
            detail.observationTargets.push(new ResizeObservation(target, options && options.box));
            updateCount(1);
            scheduler.schedule();
        }
    };
    ResizeObserverController.unobserve = function (resizeObserver, target) {
        var detail = observerMap.get(resizeObserver);
        var index = getObservationIndex(detail.observationTargets, target);
        var lastObservation = detail.observationTargets.length === 1;
        if (index >= 0) {
            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
            detail.observationTargets.splice(index, 1);
            updateCount(-1);
        }
    };
    ResizeObserverController.disconnect = function (resizeObserver) {
        var _this = this;
        var detail = observerMap.get(resizeObserver);
        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });
        detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController;
}());

var ResizeObserver = (function () {
    function ResizeObserver(callback) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (typeof callback !== 'function') {
            throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
        }
        ResizeObserverController.connect(this, callback);
    }
    ResizeObserver.prototype.observe = function (target, options) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController.observe(this, target, options);
    };
    ResizeObserver.prototype.unobserve = function (target) {
        if (arguments.length === 0) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
        }
        if (!isElement(target)) {
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
        }
        ResizeObserverController.unobserve(this, target);
    };
    ResizeObserver.prototype.disconnect = function () {
        ResizeObserverController.disconnect(this);
    };
    ResizeObserver.toString = function () {
        return 'function ResizeObserver () { [polyfill code] }';
    };
    return ResizeObserver;
}());

class AbstractResizeObserver {
    observe(element, callback) {
        const ResizeObserver$1 = (window[AbstractResizeObserver.RESIZE_OBSERVER_IDENTIFIER_NAME]) || ResizeObserver;
        const observer = new ResizeObserver$1(callback);
        observer.observe(element, { box: 'border-box' });
    }
    unobserve(observer) {
        if ((window[AbstractResizeObserver.RESIZE_OBSERVER_IDENTIFIER_NAME]) && (typeof observer)) {
            observer.disconnect();
        }
    }
}
AbstractResizeObserver.RESIZE_OBSERVER_IDENTIFIER_NAME = "ResizeObserver";

class ViewportObserverManager extends AbstractResizeObserver {
    constructor() { super(); }
    static getInstance() {
        return new ViewportObserverManager();
    }
    observerDoesNotExist(element) {
        console.log(element, "observer does not exist");
    }
}

const panelComponentCss = "snt-panel{display:block;width:100%;min-height:39.063em;background-repeat:no-repeat;background-size:cover}";

class PanelComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        const configEl = this.element.querySelector("snt-data");
        if (configEl) {
            const config = JSON.parse(configEl.innerHTML);
            // Create array from JSON obj keys, cast to number array, sort descending
            const viewportSizes = ((Object.keys(config.viewport)).map(Number)).sort((a, b) => b - a);
            ViewportObserverManager.getInstance().observe(this.element, (entries) => {
                const entry = entries[0];
                for (let viewportSize of viewportSizes) {
                    if (entry.contentRect.width >= viewportSize) {
                        console.log(entry.contentRect.width + " >= " + viewportSize);
                        const style = config.viewport[viewportSize].style;
                        for (let styleKey of (Object.keys(style))) {
                            this.element.style[styleKey] = style[styleKey];
                        }
                        const elClass = config.viewport[viewportSize]["class"];
                        if (elClass) {
                            for (let classVal of elClass) {
                                if (!this.element.classList.contains(classVal)) {
                                    this.element.classList.add(classVal);
                                }
                            }
                        }
                        break;
                    }
                }
            });
        }
    }
    render() {
        return (h(Host, null, h("snt-layout", null, h("slot", null))));
    }
    get element() { return getElement(this); }
    static get style() { return panelComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-panel",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class PanelExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        const jsonData = "{ \"viewport\": { \"1440\": { \"style\": { \"backgroundImage\": \"url('https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-desktop-1x.jpg')\", \"outlineColor\": \"red\" } }, \"768\": { \"style\": { \"backgroundImage\": \"url('https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-tablet-1x.jpg')\", \"outlineColor\": \"orange\" } }, \"0\": { \"style\": { \"backgroundImage\": \"url('https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-mobile-1x.jpg')\", \"outlineColor\": \"yellow\" } } } }";
        return [
            h("snt-panel", null, h("snt-data", { id: "data-component-test", type: "json", "lazy-load": true, src: "https://baconipsum.com/api/?type=meat-and-filler" }, jsonData))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "panel-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
PanelExample.TAG_NAME = "panel-example";

var __awaiter$p = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class RecaptchaExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.captchas = Array();
        this.siteKey = '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI';
    }
    componentDidLoad() {
        return __awaiter$p(this, void 0, void 0, function* () {
            for (let i = 0; i < 6; i++) {
                yield WebUtils.sleep(500);
                this.captchas = [
                    ...this.captchas,
                    h("div", null, h("h3", null, "Recaptcha ", i), h("snt-recaptcha", { sitekey: this.siteKey, language: "en", id: `grecaptcha-${i}` }))
                ];
            }
        });
    }
    render() {
        return (h("div", null, this.captchas));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "recaptcha-example",
        "$members$": {
            "captchas": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
RecaptchaExample.TAG_NAME = "recaptcha-example";

const createProviderConsumer = (defaultState, consumerRender) => {
    let listeners = new Map();
    let currentState = defaultState;
    const updateListener = (fields, instance) => {
        if (Array.isArray(fields)) {
            [...fields].forEach(fieldName => {
                instance[fieldName] = currentState[fieldName];
            });
        }
        else {
            instance[fields] = Object.assign({}, currentState);
        }
    };
    const subscribe = (instance, propList) => {
        if (!listeners.has(instance)) {
            listeners.set(instance, propList);
            updateListener(propList, instance);
        }
        return () => {
            if (listeners.has(instance)) {
                listeners.delete(instance);
            }
        };
    };
    const Provider = ({ state }, children) => {
        currentState = state;
        listeners.forEach(updateListener);
        return children;
    };
    const Consumer = (props, children) => {
        // The casting on subscribe is to allow for crossover through the stencil compiler
        // In the future we should allow for generics in components.
        return consumerRender(subscribe, children[0]);
    };
    const injectProps = (Cstr, fieldList) => {
        const CstrPrototype = Cstr.prototype;
        const cstrConnectedCallback = CstrPrototype.connectedCallback;
        const cstrDisconnectedCallback = CstrPrototype.disconnectedCallback;
        CstrPrototype.connectedCallback = function () {
            subscribe(this, fieldList);
            if (cstrConnectedCallback) {
                return cstrConnectedCallback.call(this);
            }
        };
        CstrPrototype.disconnectedCallback = function () {
            listeners.delete(this);
            if (cstrDisconnectedCallback) {
                cstrDisconnectedCallback.call(this);
            }
        };
    };
    return {
        Provider,
        Consumer,
        injectProps
    };
};

var ActiveRouter = createProviderConsumer({
    historyType: 'browser',
    location: {
        pathname: '',
        query: {},
        key: ''
    },
    titleSuffix: '',
    root: '/',
    routeViewsUpdated: () => { }
}, (subscribe, child) => (h("context-consumer", { subscribe: subscribe, renderer: child })));

// Get the URL for this route link without the root from the router
const getUrl = (url, root) => {
    // Don't allow double slashes
    if (url.charAt(0) == '/' && root.charAt(root.length - 1) == '/') {
        return root.slice(0, root.length - 1) + url;
    }
    return root + url;
};
class Redirect {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() {
        if (this.history && this.root && this.url) {
            return this.history.replace(getUrl(this.url, this.root));
        }
    }
    get el() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "stencil-router-redirect",
        "$members$": {
            "history": [16],
            "root": [1],
            "url": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ActiveRouter.injectProps(Redirect, [
    'history',
    'root'
]);

class ResponsiveImagesExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("br", null), h("br", null), h("h2", null, "Responsive Image Example 1"), h("snt-two-column-feature", { imagePosition: 'left', titleString: "Image on the left", copyText: "Content on the right", imagePath: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", properties: '{\r\n                        "mobileImageUrl":"https://via.placeholder.com/468x60?text=Mobile",\r\n                        "tabletImageUrl":"https://via.placeholder.com/768x430?text=Tablet",\r\n                        "desktopImageUrl":"https://via.placeholder.com/1024x580?text=Desktop",\r\n                        "desktopHdTabletUrl":"https://via.placeholder.com/1440x800?text=Desktop+HD"\r\n                    }' }), h("br", null), h("br", null), h("h2", null, "Responsive Image Example 2"), h("snt-two-column-feature", { imagePosition: 'right', titleString: "Image on the right", copyText: "Content on the left", imagePath: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg", properties: '{\r\n                        "mobileImageUrl":"https://via.placeholder.com/468x60?text=Mobile",\r\n                        "tabletImageUrl":"https://via.placeholder.com/768x430?text=Tablet",\r\n                        "desktopImageUrl":"https://via.placeholder.com/1024x580?text=Desktop",\r\n                        "desktopHdTabletUrl":"https://via.placeholder.com/1440x800?text=Desktop+HD"\r\n                    }' })));
    }
    static get style() { return "snt-data {display: none}"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "responsive-images-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ResponsiveImagesExample.TAG_NAME = "responsive-images-example";

/**
 * TS adaption of https://github.com/pillarjs/path-to-regexp/blob/master/index.js
 */
/**
 * Default configs.
 */
const DEFAULT_DELIMITER = '/';
const DEFAULT_DELIMITERS = './';
/**
 * The main path matching regexp utility.
 */
const PATH_REGEXP = new RegExp([
    // Match escaped characters that would otherwise appear in future matches.
    // This allows the user to escape special characters that won't transform.
    '(\\\\.)',
    // Match Express-style parameters and un-named parameters with a prefix
    // and optional suffixes. Matches appear as:
    //
    // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?"]
    // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined]
    '(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?'
].join('|'), 'g');
/**
 * Parse a string for the raw tokens.
 */
const parse = (str, options) => {
    var tokens = [];
    var key = 0;
    var index = 0;
    var path = '';
    var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;
    var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;
    var pathEscaped = false;
    var res;
    while ((res = PATH_REGEXP.exec(str)) !== null) {
        var m = res[0];
        var escaped = res[1];
        var offset = res.index;
        path += str.slice(index, offset);
        index = offset + m.length;
        // Ignore already escaped sequences.
        if (escaped) {
            path += escaped[1];
            pathEscaped = true;
            continue;
        }
        var prev = '';
        var next = str[index];
        var name = res[2];
        var capture = res[3];
        var group = res[4];
        var modifier = res[5];
        if (!pathEscaped && path.length) {
            var k = path.length - 1;
            if (delimiters.indexOf(path[k]) > -1) {
                prev = path[k];
                path = path.slice(0, k);
            }
        }
        // Push the current path onto the tokens.
        if (path) {
            tokens.push(path);
            path = '';
            pathEscaped = false;
        }
        var partial = prev !== '' && next !== undefined && next !== prev;
        var repeat = modifier === '+' || modifier === '*';
        var optional = modifier === '?' || modifier === '*';
        var delimiter = prev || defaultDelimiter;
        var pattern = capture || group;
        tokens.push({
            name: name || key++,
            prefix: prev,
            delimiter: delimiter,
            optional: optional,
            repeat: repeat,
            partial: partial,
            pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'
        });
    }
    // Push any remaining characters.
    if (path || index < str.length) {
        tokens.push(path + str.substr(index));
    }
    return tokens;
};
/**
 * Escape a regular expression string.
 */
const escapeString = (str) => {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1');
};
/**
 * Escape the capturing group by escaping special characters and meaning.
 */
const escapeGroup = (group) => {
    return group.replace(/([=!:$/()])/g, '\\$1');
};
/**
 * Get the flags for a regexp from the options.
 */
const flags = (options) => {
    return options && options.sensitive ? '' : 'i';
};
/**
 * Pull out keys from a regexp.
 */
const regexpToRegexp = (path, keys) => {
    if (!keys)
        return path;
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) {
        for (var i = 0; i < groups.length; i++) {
            keys.push({
                name: i,
                prefix: null,
                delimiter: null,
                optional: false,
                repeat: false,
                partial: false,
                pattern: null
            });
        }
    }
    return path;
};
/**
 * Transform an array into a regexp.
 */
const arrayToRegexp = (path, keys, options) => {
    var parts = [];
    for (var i = 0; i < path.length; i++) {
        parts.push(pathToRegexp(path[i], keys, options).source);
    }
    return new RegExp('(?:' + parts.join('|') + ')', flags(options));
};
/**
 * Create a path regexp from string input.
 */
const stringToRegexp = (path, keys, options) => {
    return tokensToRegExp(parse(path, options), keys, options);
};
/**
 * Expose a function for taking tokens and returning a RegExp.
 */
const tokensToRegExp = (tokens, keys, options) => {
    options = options || {};
    var strict = options.strict;
    var end = options.end !== false;
    var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);
    var delimiters = options.delimiters || DEFAULT_DELIMITERS;
    var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');
    var route = '';
    var isEndDelimited = false;
    // Iterate over the tokens and create our regexp string.
    for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];
        if (typeof token === 'string') {
            route += escapeString(token);
            isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;
        }
        else {
            var prefix = escapeString(token.prefix || '');
            var capture = token.repeat
                ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'
                : token.pattern;
            if (keys)
                keys.push(token);
            if (token.optional) {
                if (token.partial) {
                    route += prefix + '(' + capture + ')?';
                }
                else {
                    route += '(?:' + prefix + '(' + capture + '))?';
                }
            }
            else {
                route += prefix + '(' + capture + ')';
            }
        }
    }
    if (end) {
        if (!strict)
            route += '(?:' + delimiter + ')?';
        route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';
    }
    else {
        if (!strict)
            route += '(?:' + delimiter + '(?=' + endsWith + '))?';
        if (!isEndDelimited)
            route += '(?=' + delimiter + '|' + endsWith + ')';
    }
    return new RegExp('^' + route, flags(options));
};
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */
const pathToRegexp = (path, keys, options) => {
    if (path instanceof RegExp) {
        return regexpToRegexp(path, keys);
    }
    if (Array.isArray(path)) {
        return arrayToRegexp(path, keys, options);
    }
    return stringToRegexp(path, keys, options);
};

const hasBasename = (path, prefix) => {
    return (new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i')).test(path);
};
const stripBasename = (path, prefix) => {
    return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
};
const stripTrailingSlash = (path) => {
    return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
};
const addLeadingSlash = (path) => {
    return path.charAt(0) === '/' ? path : '/' + path;
};
const stripLeadingSlash = (path) => {
    return path.charAt(0) === '/' ? path.substr(1) : path;
};
const parsePath = (path) => {
    let pathname = path || '/';
    let search = '';
    let hash = '';
    const hashIndex = pathname.indexOf('#');
    if (hashIndex !== -1) {
        hash = pathname.substr(hashIndex);
        pathname = pathname.substr(0, hashIndex);
    }
    const searchIndex = pathname.indexOf('?');
    if (searchIndex !== -1) {
        search = pathname.substr(searchIndex);
        pathname = pathname.substr(0, searchIndex);
    }
    return {
        pathname,
        search: search === '?' ? '' : search,
        hash: hash === '#' ? '' : hash,
        query: {},
        key: ''
    };
};
const createPath = (location) => {
    const { pathname, search, hash } = location;
    let path = pathname || '/';
    if (search && search !== '?') {
        path += (search.charAt(0) === '?' ? search : `?${search}`);
    }
    if (hash && hash !== '#') {
        path += (hash.charAt(0) === '#' ? hash : `#${hash}`);
    }
    return path;
};
const parseQueryString = (query) => {
    if (!query) {
        return {};
    }
    return (/^[?#]/.test(query) ? query.slice(1) : query)
        .split('&')
        .reduce((params, param) => {
        let [key, value] = param.split('=');
        params[key] = value ? decodeURIComponent(value.replace(/\+/g, ' ')) : '';
        return params;
    }, {});
};

const isAbsolute = (pathname) => {
    return pathname.charAt(0) === '/';
};
const createKey = (keyLength) => {
    return Math.random().toString(36).substr(2, keyLength);
};
// About 1.5x faster than the two-arg version of Array#splice()
const spliceOne = (list, index) => {
    for (let i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
        list[i] = list[k];
    }
    list.pop();
};
// This implementation is based heavily on node's url.parse
const resolvePathname = (to, from = '') => {
    let fromParts = from && from.split('/') || [];
    let hasTrailingSlash;
    let up = 0;
    const toParts = to && to.split('/') || [];
    const isToAbs = to && isAbsolute(to);
    const isFromAbs = from && isAbsolute(from);
    const mustEndAbs = isToAbs || isFromAbs;
    if (to && isAbsolute(to)) {
        // to is absolute
        fromParts = toParts;
    }
    else if (toParts.length) {
        // to is relative, drop the filename
        fromParts.pop();
        fromParts = fromParts.concat(toParts);
    }
    if (!fromParts.length) {
        return '/';
    }
    if (fromParts.length) {
        const last = fromParts[fromParts.length - 1];
        hasTrailingSlash = (last === '.' || last === '..' || last === '');
    }
    else {
        hasTrailingSlash = false;
    }
    for (let i = fromParts.length; i >= 0; i--) {
        const part = fromParts[i];
        if (part === '.') {
            spliceOne(fromParts, i);
        }
        else if (part === '..') {
            spliceOne(fromParts, i);
            up++;
        }
        else if (up) {
            spliceOne(fromParts, i);
            up--;
        }
    }
    if (!mustEndAbs) {
        for (; up--; up) {
            fromParts.unshift('..');
        }
    }
    if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) {
        fromParts.unshift('');
    }
    let result = fromParts.join('/');
    if (hasTrailingSlash && result.substr(-1) !== '/') {
        result += '/';
    }
    return result;
};
const valueEqual = (a, b) => {
    if (a === b) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    if (Array.isArray(a)) {
        return Array.isArray(b) && a.length === b.length && a.every((item, index) => {
            return valueEqual(item, b[index]);
        });
    }
    const aType = typeof a;
    const bType = typeof b;
    if (aType !== bType) {
        return false;
    }
    if (aType === 'object') {
        const aValue = a.valueOf();
        const bValue = b.valueOf();
        if (aValue !== a || bValue !== b) {
            return valueEqual(aValue, bValue);
        }
        const aKeys = Object.keys(a);
        const bKeys = Object.keys(b);
        if (aKeys.length !== bKeys.length) {
            return false;
        }
        return aKeys.every((key) => {
            return valueEqual(a[key], b[key]);
        });
    }
    return false;
};
const locationsAreEqual = (a, b) => {
    return a.pathname === b.pathname &&
        a.search === b.search &&
        a.hash === b.hash &&
        a.key === b.key &&
        valueEqual(a.state, b.state);
};
const createLocation = (path, state, key, currentLocation) => {
    let location;
    if (typeof path === 'string') {
        // Two-arg form: push(path, state)
        location = parsePath(path);
        if (state !== undefined) {
            location.state = state;
        }
    }
    else {
        // One-arg form: push(location)
        location = Object.assign({ pathname: '' }, path);
        if (location.search && location.search.charAt(0) !== '?') {
            location.search = '?' + location.search;
        }
        if (location.hash && location.hash.charAt(0) !== '#') {
            location.hash = '#' + location.hash;
        }
        if (state !== undefined && location.state === undefined) {
            location.state = state;
        }
    }
    try {
        location.pathname = decodeURI(location.pathname);
    }
    catch (e) {
        if (e instanceof URIError) {
            throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' +
                'This is likely caused by an invalid percent-encoding.');
        }
        else {
            throw e;
        }
    }
    location.key = key;
    if (currentLocation) {
        // Resolve incomplete/relative pathname relative to current location.
        if (!location.pathname) {
            location.pathname = currentLocation.pathname;
        }
        else if (location.pathname.charAt(0) !== '/') {
            location.pathname = resolvePathname(location.pathname, currentLocation.pathname);
        }
    }
    else {
        // When there is no prior location and pathname is empty, set it to /
        if (!location.pathname) {
            location.pathname = '/';
        }
    }
    location.query = parseQueryString(location.search || '');
    return location;
};

let cacheCount = 0;
const patternCache = {};
const cacheLimit = 10000;
// Memoized function for creating the path match regex
const compilePath = (pattern, options) => {
    const cacheKey = `${options.end}${options.strict}`;
    const cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
    const cachePattern = JSON.stringify(pattern);
    if (cache[cachePattern]) {
        return cache[cachePattern];
    }
    const keys = [];
    const re = pathToRegexp(pattern, keys, options);
    const compiledPattern = { re, keys };
    if (cacheCount < cacheLimit) {
        cache[cachePattern] = compiledPattern;
        cacheCount += 1;
    }
    return compiledPattern;
};
/**
 * Public API for matching a URL pathname to a path pattern.
 */
const matchPath = (pathname, options = {}) => {
    if (typeof options === 'string') {
        options = { path: options };
    }
    const { path = '/', exact = false, strict = false } = options;
    const { re, keys } = compilePath(path, { end: exact, strict });
    const match = re.exec(pathname);
    if (!match) {
        return null;
    }
    const [url, ...values] = match;
    const isExact = pathname === url;
    if (exact && !isExact) {
        return null;
    }
    return {
        path,
        url: path === '/' && url === '' ? '/' : url,
        isExact,
        params: keys.reduce((memo, key, index) => {
            memo[key.name] = values[index];
            return memo;
        }, {})
    };
};
const matchesAreEqual = (a, b) => {
    if (a == null && b == null) {
        return true;
    }
    if (b == null) {
        return false;
    }
    return a && b &&
        a.path === b.path &&
        a.url === b.url &&
        valueEqual(a.params, b.params);
};

const routeCss = "stencil-route.inactive{display:none}";

/**
  * @name Route
  * @module ionic
  * @description
 */
class Route {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.group = null;
        this.match = null;
        this.componentProps = {};
        this.exact = false;
        this.scrollOnNextRender = false;
        this.previousMatch = null;
    }
    // Identify if the current route is a match.
    computeMatch(newLocation) {
        const isGrouped = this.group != null || (this.el.parentElement != null && this.el.parentElement.tagName.toLowerCase() === 'stencil-route-switch');
        if (!newLocation || isGrouped) {
            return;
        }
        this.previousMatch = this.match;
        return this.match = matchPath(newLocation.pathname, {
            path: this.url,
            exact: this.exact,
            strict: true
        });
    }
    async loadCompleted() {
        let routeViewOptions = {};
        if (this.history && this.history.location.hash) {
            routeViewOptions = {
                scrollToId: this.history.location.hash.substr(1)
            };
        }
        else if (this.scrollTopOffset) {
            routeViewOptions = {
                scrollTopOffset: this.scrollTopOffset
            };
        }
        // After all children have completed then tell switch
        // the provided callback will get executed after this route is in view
        if (typeof this.componentUpdated === 'function') {
            this.componentUpdated(routeViewOptions);
            // If this is an independent route and it matches then routes have updated.
            // If the only change to location is a hash change then do not scroll.
        }
        else if (this.match && !matchesAreEqual(this.match, this.previousMatch) && this.routeViewsUpdated) {
            this.routeViewsUpdated(routeViewOptions);
        }
    }
    async componentDidUpdate() {
        await this.loadCompleted();
    }
    async componentDidLoad() {
        await this.loadCompleted();
    }
    render() {
        // If there is no activeRouter then do not render
        // Check if this route is in the matching URL (for example, a parent route)
        if (!this.match || !this.history) {
            return null;
        }
        // component props defined in route
        // the history api
        // current match data including params
        const childProps = Object.assign({}, this.componentProps, { history: this.history, match: this.match });
        // If there is a routerRender defined then use
        // that and pass the component and component props with it.
        if (this.routeRender) {
            return this.routeRender(Object.assign({}, childProps, { component: this.component }));
        }
        if (this.component) {
            const ChildComponent = this.component;
            return (h(ChildComponent, Object.assign({}, childProps)));
        }
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "location": ["computeMatch"]
    }; }
    static get style() { return routeCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "stencil-route",
        "$members$": {
            "group": [513],
            "componentUpdated": [16],
            "match": [1040],
            "url": [1],
            "component": [1],
            "componentProps": [16],
            "exact": [4],
            "routeRender": [16],
            "scrollTopOffset": [2, "scroll-top-offset"],
            "routeViewsUpdated": [16],
            "location": [16],
            "history": [16],
            "historyType": [1, "history-type"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["group", "group"]]
    }; }
}
ActiveRouter.injectProps(Route, [
    'location',
    'history',
    'historyType',
    'routeViewsUpdated'
]);

const getConfirmation = (win, message, callback) => (callback(win.confirm(message)));
const isModifiedEvent = (ev) => (ev.metaKey || ev.altKey || ev.ctrlKey || ev.shiftKey);
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */
const supportsHistory = (win) => {
    const ua = win.navigator.userAgent;
    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
        ua.indexOf('Mobile Safari') !== -1 &&
        ua.indexOf('Chrome') === -1 &&
        ua.indexOf('Windows Phone') === -1) {
        return false;
    }
    return win.history && 'pushState' in win.history;
};
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */
const supportsPopStateOnHashChange = (nav) => (nav.userAgent.indexOf('Trident') === -1);
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */
const supportsGoWithoutReloadUsingHash = (nav) => (nav.userAgent.indexOf('Firefox') === -1);
const isExtraneousPopstateEvent = (nav, event) => (event.state === undefined &&
    nav.userAgent.indexOf('CriOS') === -1);
const storageAvailable = (win, type) => {
    const storage = win[type];
    const x = '__storage_test__';
    try {
        storage.setItem(x, x);
        storage.removeItem(x);
        return true;
    }
    catch (e) {
        return e instanceof DOMException && (
        // everything except Firefox
        e.code === 22 ||
            // Firefox
            e.code === 1014 ||
            // test name field too, because code might not be present
            // everything except Firefox
            e.name === 'QuotaExceededError' ||
            // Firefox
            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
            // acknowledge QuotaExceededError only if there's something already stored
            storage.length !== 0;
    }
};

const getUrl$1 = (url, root) => {
    // Don't allow double slashes
    if (url.charAt(0) == '/' && root.charAt(root.length - 1) == '/') {
        return root.slice(0, root.length - 1) + url;
    }
    return root + url;
};
/**
  * @name Route
  * @module ionic
  * @description
 */
class RouteLink {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.unsubscribe = () => { return; };
        this.activeClass = 'link-active';
        this.exact = false;
        this.strict = true;
        /**
          *  Custom tag to use instead of an anchor
          */
        this.custom = 'a';
        this.match = null;
    }
    componentWillLoad() {
        this.computeMatch();
    }
    // Identify if the current route is a match.
    computeMatch() {
        if (this.location) {
            this.match = matchPath(this.location.pathname, {
                path: this.urlMatch || this.url,
                exact: this.exact,
                strict: this.strict
            });
        }
    }
    handleClick(e) {
        if (isModifiedEvent(e) || !this.history || !this.url || !this.root) {
            return;
        }
        e.preventDefault();
        return this.history.push(getUrl$1(this.url, this.root));
    }
    // Get the URL for this route link without the root from the router
    render() {
        let anchorAttributes = {
            class: {
                [this.activeClass]: this.match !== null,
            },
            onClick: this.handleClick.bind(this)
        };
        if (this.anchorClass) {
            anchorAttributes.class[this.anchorClass] = true;
        }
        if (this.custom === 'a') {
            anchorAttributes = Object.assign({}, anchorAttributes, { href: this.url, title: this.anchorTitle, role: this.anchorRole, tabindex: this.anchorTabIndex, 'aria-haspopup': this.ariaHaspopup, id: this.anchorId, 'aria-posinset': this.ariaPosinset, 'aria-setsize': this.ariaSetsize, 'aria-label': this.ariaLabel });
        }
        return (h(this.custom, Object.assign({}, anchorAttributes), h("slot", null)));
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "location": ["computeMatch"]
    }; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "stencil-route-link",
        "$members$": {
            "url": [1],
            "urlMatch": [1, "url-match"],
            "activeClass": [1, "active-class"],
            "exact": [4],
            "strict": [4],
            "custom": [1],
            "anchorClass": [1, "anchor-class"],
            "anchorRole": [1, "anchor-role"],
            "anchorTitle": [1, "anchor-title"],
            "anchorTabIndex": [1, "anchor-tab-index"],
            "anchorId": [1, "anchor-id"],
            "history": [16],
            "location": [16],
            "root": [1],
            "ariaHaspopup": [1, "aria-haspopup"],
            "ariaPosinset": [1, "aria-posinset"],
            "ariaSetsize": [2, "aria-setsize"],
            "ariaLabel": [1, "aria-label"],
            "match": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ActiveRouter.injectProps(RouteLink, [
    'history',
    'location',
    'root'
]);

const getUniqueId = () => {
    return ((Math.random() * 10e16).toString().match(/.{4}/g) || []).join('-');
};
const getMatch = (pathname, url, exact) => {
    return matchPath(pathname, {
        path: url,
        exact: exact,
        strict: true
    });
};
const isHTMLStencilRouteElement = (elm) => {
    return elm.tagName === 'STENCIL-ROUTE';
};
class RouteSwitch {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.group = getUniqueId();
        this.subscribers = [];
        this.queue = getContext(this, "queue");
    }
    componentWillLoad() {
        if (this.location != null) {
            this.regenerateSubscribers(this.location);
        }
    }
    async regenerateSubscribers(newLocation) {
        if (newLocation == null) {
            return;
        }
        let newActiveIndex = -1;
        this.subscribers = Array.prototype.slice.call(this.el.children)
            .filter(isHTMLStencilRouteElement)
            .map((childElement, index) => {
            const match = getMatch(newLocation.pathname, childElement.url, childElement.exact);
            if (match && newActiveIndex === -1) {
                newActiveIndex = index;
            }
            return {
                el: childElement,
                match: match
            };
        });
        if (newActiveIndex === -1) {
            return;
        }
        // Check if this actually changes which child is active
        // then just pass the new match down if the active route isn't changing.
        if (this.activeIndex === newActiveIndex) {
            this.subscribers[newActiveIndex].el.match = this.subscribers[newActiveIndex].match;
            return;
        }
        this.activeIndex = newActiveIndex;
        // Set all props on the new active route then wait until it says that it
        // is completed
        const activeChild = this.subscribers[this.activeIndex];
        if (this.scrollTopOffset) {
            activeChild.el.scrollTopOffset = this.scrollTopOffset;
        }
        activeChild.el.group = this.group;
        activeChild.el.match = activeChild.match;
        activeChild.el.componentUpdated = (routeViewUpdatedOptions) => {
            // After the new active route has completed then update visibility of routes
            this.queue.write(() => {
                this.subscribers.forEach((child, index) => {
                    child.el.componentUpdated = undefined;
                    if (index === this.activeIndex) {
                        return child.el.style.display = '';
                    }
                    if (this.scrollTopOffset) {
                        child.el.scrollTopOffset = this.scrollTopOffset;
                    }
                    child.el.group = this.group;
                    child.el.match = null;
                    child.el.style.display = 'none';
                });
            });
            if (this.routeViewsUpdated) {
                this.routeViewsUpdated(Object.assign({ scrollTopOffset: this.scrollTopOffset }, routeViewUpdatedOptions));
            }
        };
    }
    render() {
        return (h("slot", null));
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "location": ["regenerateSubscribers"]
    }; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "stencil-route-switch",
        "$members$": {
            "group": [513],
            "scrollTopOffset": [2, "scroll-top-offset"],
            "location": [16],
            "routeViewsUpdated": [16]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["group", "group"]]
    }; }
}
ActiveRouter.injectProps(RouteSwitch, [
    'location',
    'routeViewsUpdated'
]);

/**
  * Updates the document title when found.
  *
  * @name RouteTitle
  * @description
 */
class RouteTitle {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.titleSuffix = '';
        this.pageTitle = '';
    }
    updateDocumentTitle() {
        const el = this.el;
        if (el.ownerDocument) {
            el.ownerDocument.title = `${this.pageTitle}${this.titleSuffix || ''}`;
        }
    }
    componentWillLoad() {
        this.updateDocumentTitle();
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "pageTitle": ["updateDocumentTitle"]
    }; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "stencil-route-title",
        "$members$": {
            "titleSuffix": [1, "title-suffix"],
            "pageTitle": [1, "page-title"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ActiveRouter.injectProps(RouteTitle, [
    'titleSuffix',
]);

const warning = (value, ...args) => {
    if (!value) {
        console.warn(...args);
    }
};

// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript
const createTransitionManager = () => {
    let prompt;
    let listeners = [];
    const setPrompt = (nextPrompt) => {
        warning(prompt == null, 'A history supports only one prompt at a time');
        prompt = nextPrompt;
        return () => {
            if (prompt === nextPrompt) {
                prompt = null;
            }
        };
    };
    const confirmTransitionTo = (location, action, getUserConfirmation, callback) => {
        // TODO: If another transition starts while we're still confirming
        // the previous one, we may end up in a weird state. Figure out the
        // best way to handle this.
        if (prompt != null) {
            const result = typeof prompt === 'function' ? prompt(location, action) : prompt;
            if (typeof result === 'string') {
                if (typeof getUserConfirmation === 'function') {
                    getUserConfirmation(result, callback);
                }
                else {
                    warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');
                    callback(true);
                }
            }
            else {
                // Return false from a transition hook to cancel the transition.
                callback(result !== false);
            }
        }
        else {
            callback(true);
        }
    };
    const appendListener = (fn) => {
        let isActive = true;
        const listener = (...args) => {
            if (isActive) {
                fn(...args);
            }
        };
        listeners.push(listener);
        return () => {
            isActive = false;
            listeners = listeners.filter(item => item !== listener);
        };
    };
    const notifyListeners = (...args) => {
        listeners.forEach(listener => listener(...args));
    };
    return {
        setPrompt,
        confirmTransitionTo,
        appendListener,
        notifyListeners
    };
};

const createScrollHistory = (win, applicationScrollKey = 'scrollPositions') => {
    let scrollPositions = new Map();
    const set = (key, value) => {
        scrollPositions.set(key, value);
        if (storageAvailable(win, 'sessionStorage')) {
            const arrayData = [];
            scrollPositions.forEach((value, key) => {
                arrayData.push([key, value]);
            });
            win.sessionStorage.setItem('scrollPositions', JSON.stringify(arrayData));
        }
    };
    const get = (key) => {
        return scrollPositions.get(key);
    };
    const has = (key) => {
        return scrollPositions.has(key);
    };
    const capture = (key) => {
        set(key, [win.scrollX, win.scrollY]);
    };
    if (storageAvailable(win, 'sessionStorage')) {
        const scrollData = win.sessionStorage.getItem(applicationScrollKey);
        scrollPositions = scrollData ?
            new Map(JSON.parse(scrollData)) :
            scrollPositions;
    }
    if ('scrollRestoration' in win.history) {
        history.scrollRestoration = 'manual';
    }
    return {
        set,
        get,
        has,
        capture
    };
};

// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript
const PopStateEvent = 'popstate';
const HashChangeEvent = 'hashchange';
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */
const createBrowserHistory = (win, props = {}) => {
    let forceNextPop = false;
    const globalHistory = win.history;
    const globalLocation = win.location;
    const globalNavigator = win.navigator;
    const canUseHistory = supportsHistory(win);
    const needsHashChangeListener = !supportsPopStateOnHashChange(globalNavigator);
    const scrollHistory = createScrollHistory(win);
    const forceRefresh = (props.forceRefresh != null) ? props.forceRefresh : false;
    const getUserConfirmation = (props.getUserConfirmation != null) ? props.getUserConfirmation : getConfirmation;
    const keyLength = (props.keyLength != null) ? props.keyLength : 6;
    const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
    const getHistoryState = () => {
        try {
            return win.history.state || {};
        }
        catch (e) {
            // IE 11 sometimes throws when accessing window.history.state
            // See https://github.com/ReactTraining/history/pull/289
            return {};
        }
    };
    const getDOMLocation = (historyState) => {
        historyState = historyState || {};
        const { key, state } = historyState;
        const { pathname, search, hash } = globalLocation;
        let path = pathname + search + hash;
        warning((!basename || hasBasename(path, basename)), 'You are attempting to use a basename on a page whose URL path does not begin ' +
            'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
        if (basename) {
            path = stripBasename(path, basename);
        }
        return createLocation(path, state, key || createKey(keyLength));
    };
    const transitionManager = createTransitionManager();
    const setState = (nextState) => {
        // Capture location for the view before changing history.
        scrollHistory.capture(history.location.key);
        Object.assign(history, nextState);
        // Set scroll position based on its previous storage value
        history.location.scrollPosition = scrollHistory.get(history.location.key);
        history.length = globalHistory.length;
        transitionManager.notifyListeners(history.location, history.action);
    };
    const handlePopState = (event) => {
        // Ignore extraneous popstate events in WebKit.
        if (!isExtraneousPopstateEvent(globalNavigator, event)) {
            handlePop(getDOMLocation(event.state));
        }
    };
    const handleHashChange = () => {
        handlePop(getDOMLocation(getHistoryState()));
    };
    const handlePop = (location) => {
        if (forceNextPop) {
            forceNextPop = false;
            setState();
        }
        else {
            const action = 'POP';
            transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
                if (ok) {
                    setState({ action, location });
                }
                else {
                    revertPop(location);
                }
            });
        }
    };
    const revertPop = (fromLocation) => {
        const toLocation = history.location;
        // TODO: We could probably make this more reliable by
        // keeping a list of keys we've seen in sessionStorage.
        // Instead, we just default to 0 for keys we don't know.
        let toIndex = allKeys.indexOf(toLocation.key);
        let fromIndex = allKeys.indexOf(fromLocation.key);
        if (toIndex === -1) {
            toIndex = 0;
        }
        if (fromIndex === -1) {
            fromIndex = 0;
        }
        const delta = toIndex - fromIndex;
        if (delta) {
            forceNextPop = true;
            go(delta);
        }
    };
    const initialLocation = getDOMLocation(getHistoryState());
    let allKeys = [initialLocation.key];
    let listenerCount = 0;
    let isBlocked = false;
    // Public interface
    const createHref = (location) => {
        return basename + createPath(location);
    };
    const push = (path, state) => {
        warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' +
            'argument is a location-like object that already has state; it is ignored');
        const action = 'PUSH';
        const location = createLocation(path, state, createKey(keyLength), history.location);
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
            if (!ok) {
                return;
            }
            const href = createHref(location);
            const { key, state } = location;
            if (canUseHistory) {
                globalHistory.pushState({ key, state }, '', href);
                if (forceRefresh) {
                    globalLocation.href = href;
                }
                else {
                    const prevIndex = allKeys.indexOf(history.location.key);
                    const nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
                    nextKeys.push(location.key);
                    allKeys = nextKeys;
                    setState({ action, location });
                }
            }
            else {
                warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
                globalLocation.href = href;
            }
        });
    };
    const replace = (path, state) => {
        warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' +
            'argument is a location-like object that already has state; it is ignored');
        const action = 'REPLACE';
        const location = createLocation(path, state, createKey(keyLength), history.location);
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
            if (!ok) {
                return;
            }
            const href = createHref(location);
            const { key, state } = location;
            if (canUseHistory) {
                globalHistory.replaceState({ key, state }, '', href);
                if (forceRefresh) {
                    globalLocation.replace(href);
                }
                else {
                    const prevIndex = allKeys.indexOf(history.location.key);
                    if (prevIndex !== -1) {
                        allKeys[prevIndex] = location.key;
                    }
                    setState({ action, location });
                }
            }
            else {
                warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
                globalLocation.replace(href);
            }
        });
    };
    const go = (n) => {
        globalHistory.go(n);
    };
    const goBack = () => go(-1);
    const goForward = () => go(1);
    const checkDOMListeners = (delta) => {
        listenerCount += delta;
        if (listenerCount === 1) {
            win.addEventListener(PopStateEvent, handlePopState);
            if (needsHashChangeListener) {
                win.addEventListener(HashChangeEvent, handleHashChange);
            }
        }
        else if (listenerCount === 0) {
            win.removeEventListener(PopStateEvent, handlePopState);
            if (needsHashChangeListener) {
                win.removeEventListener(HashChangeEvent, handleHashChange);
            }
        }
    };
    const block = (prompt = '') => {
        const unblock = transitionManager.setPrompt(prompt);
        if (!isBlocked) {
            checkDOMListeners(1);
            isBlocked = true;
        }
        return () => {
            if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(-1);
            }
            return unblock();
        };
    };
    const listen = (listener) => {
        const unlisten = transitionManager.appendListener(listener);
        checkDOMListeners(1);
        return () => {
            checkDOMListeners(-1);
            unlisten();
        };
    };
    const history = {
        length: globalHistory.length,
        action: 'POP',
        location: initialLocation,
        createHref,
        push,
        replace,
        go,
        goBack,
        goForward,
        block,
        listen,
        win: win
    };
    return history;
};

// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript
const HashChangeEvent$1 = 'hashchange';
const HashPathCoders = {
    hashbang: {
        encodePath: (path) => path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path),
        decodePath: (path) => path.charAt(0) === '!' ? path.substr(1) : path
    },
    noslash: {
        encodePath: stripLeadingSlash,
        decodePath: addLeadingSlash
    },
    slash: {
        encodePath: addLeadingSlash,
        decodePath: addLeadingSlash
    }
};
const createHashHistory = (win, props = {}) => {
    let forceNextPop = false;
    let ignorePath = null;
    let listenerCount = 0;
    let isBlocked = false;
    const globalLocation = win.location;
    const globalHistory = win.history;
    const canGoWithoutReload = supportsGoWithoutReloadUsingHash(win.navigator);
    const keyLength = (props.keyLength != null) ? props.keyLength : 6;
    const { getUserConfirmation = getConfirmation, hashType = 'slash' } = props;
    const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
    const { encodePath, decodePath } = HashPathCoders[hashType];
    const getHashPath = () => {
        // We can't use window.location.hash here because it's not
        // consistent across browsers - Firefox will pre-decode it!
        const href = globalLocation.href;
        const hashIndex = href.indexOf('#');
        return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
    };
    const pushHashPath = (path) => (globalLocation.hash = path);
    const replaceHashPath = (path) => {
        const hashIndex = globalLocation.href.indexOf('#');
        globalLocation.replace(globalLocation.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
    };
    const getDOMLocation = () => {
        let path = decodePath(getHashPath());
        warning((!basename || hasBasename(path, basename)), 'You are attempting to use a basename on a page whose URL path does not begin ' +
            'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
        if (basename) {
            path = stripBasename(path, basename);
        }
        return createLocation(path, undefined, createKey(keyLength));
    };
    const transitionManager = createTransitionManager();
    const setState = (nextState) => {
        Object.assign(history, nextState);
        history.length = globalHistory.length;
        transitionManager.notifyListeners(history.location, history.action);
    };
    const handleHashChange = () => {
        const path = getHashPath();
        const encodedPath = encodePath(path);
        if (path !== encodedPath) {
            // Ensure we always have a properly-encoded hash.
            replaceHashPath(encodedPath);
        }
        else {
            const location = getDOMLocation();
            const prevLocation = history.location;
            if (!forceNextPop && locationsAreEqual(prevLocation, location)) {
                return; // A hashchange doesn't always == location change.
            }
            if (ignorePath === createPath(location)) {
                return; // Ignore this change; we already setState in push/replace.
            }
            ignorePath = null;
            handlePop(location);
        }
    };
    const handlePop = (location) => {
        if (forceNextPop) {
            forceNextPop = false;
            setState();
        }
        else {
            const action = 'POP';
            transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
                if (ok) {
                    setState({ action, location });
                }
                else {
                    revertPop(location);
                }
            });
        }
    };
    const revertPop = (fromLocation) => {
        const toLocation = history.location;
        // TODO: We could probably make this more reliable by
        // keeping a list of paths we've seen in sessionStorage.
        // Instead, we just default to 0 for paths we don't know.
        let toIndex = allPaths.lastIndexOf(createPath(toLocation));
        let fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
        if (toIndex === -1) {
            toIndex = 0;
        }
        if (fromIndex === -1) {
            fromIndex = 0;
        }
        const delta = toIndex - fromIndex;
        if (delta) {
            forceNextPop = true;
            go(delta);
        }
    };
    // Ensure the hash is encoded properly before doing anything else.
    const path = getHashPath();
    const encodedPath = encodePath(path);
    if (path !== encodedPath) {
        replaceHashPath(encodedPath);
    }
    const initialLocation = getDOMLocation();
    let allPaths = [createPath(initialLocation)];
    // Public interface
    const createHref = (location) => ('#' + encodePath(basename + createPath(location)));
    const push = (path, state) => {
        warning(state === undefined, 'Hash history cannot push state; it is ignored');
        const action = 'PUSH';
        const location = createLocation(path, undefined, createKey(keyLength), history.location);
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
            if (!ok) {
                return;
            }
            const path = createPath(location);
            const encodedPath = encodePath(basename + path);
            const hashChanged = getHashPath() !== encodedPath;
            if (hashChanged) {
                // We cannot tell if a hashchange was caused by a PUSH, so we'd
                // rather setState here and ignore the hashchange. The caveat here
                // is that other hash histories in the page will consider it a POP.
                ignorePath = path;
                pushHashPath(encodedPath);
                const prevIndex = allPaths.lastIndexOf(createPath(history.location));
                const nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
                nextPaths.push(path);
                allPaths = nextPaths;
                setState({ action, location });
            }
            else {
                warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
                setState();
            }
        });
    };
    const replace = (path, state) => {
        warning(state === undefined, 'Hash history cannot replace state; it is ignored');
        const action = 'REPLACE';
        const location = createLocation(path, undefined, createKey(keyLength), history.location);
        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {
            if (!ok) {
                return;
            }
            const path = createPath(location);
            const encodedPath = encodePath(basename + path);
            const hashChanged = getHashPath() !== encodedPath;
            if (hashChanged) {
                // We cannot tell if a hashchange was caused by a REPLACE, so we'd
                // rather setState here and ignore the hashchange. The caveat here
                // is that other hash histories in the page will consider it a POP.
                ignorePath = path;
                replaceHashPath(encodedPath);
            }
            const prevIndex = allPaths.indexOf(createPath(history.location));
            if (prevIndex !== -1) {
                allPaths[prevIndex] = path;
            }
            setState({ action, location });
        });
    };
    const go = (n) => {
        warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
        globalHistory.go(n);
    };
    const goBack = () => go(-1);
    const goForward = () => go(1);
    const checkDOMListeners = (win, delta) => {
        listenerCount += delta;
        if (listenerCount === 1) {
            win.addEventListener(HashChangeEvent$1, handleHashChange);
        }
        else if (listenerCount === 0) {
            win.removeEventListener(HashChangeEvent$1, handleHashChange);
        }
    };
    const block = (prompt = '') => {
        const unblock = transitionManager.setPrompt(prompt);
        if (!isBlocked) {
            checkDOMListeners(win, 1);
            isBlocked = true;
        }
        return () => {
            if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(win, -1);
            }
            return unblock();
        };
    };
    const listen = (listener) => {
        const unlisten = transitionManager.appendListener(listener);
        checkDOMListeners(win, 1);
        return () => {
            checkDOMListeners(win, -1);
            unlisten();
        };
    };
    const history = {
        length: globalHistory.length,
        action: 'POP',
        location: initialLocation,
        createHref,
        push,
        replace,
        go,
        goBack,
        goForward,
        block,
        listen,
        win: win
    };
    return history;
};

const getLocation = (location, root) => {
    // Remove the root URL if found at beginning of string
    const pathname = location.pathname.indexOf(root) == 0 ?
        '/' + location.pathname.slice(root.length) :
        location.pathname;
    return Object.assign({}, location, { pathname });
};
const HISTORIES = {
    'browser': createBrowserHistory,
    'hash': createHashHistory
};
/**
  * @name Router
  * @module ionic
  * @description
 */
class Router {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.root = '/';
        this.historyType = 'browser';
        // A suffix to append to the page title whenever
        // it's updated through RouteTitle
        this.titleSuffix = '';
        this.routeViewsUpdated = (options = {}) => {
            if (this.history && options.scrollToId && this.historyType === 'browser') {
                const elm = this.history.win.document.getElementById(options.scrollToId);
                if (elm) {
                    return elm.scrollIntoView();
                }
            }
            this.scrollTo(options.scrollTopOffset || this.scrollTopOffset);
        };
        this.isServer = getContext(this, "isServer");
        this.queue = getContext(this, "queue");
    }
    componentWillLoad() {
        this.history = HISTORIES[this.historyType](this.el.ownerDocument.defaultView);
        this.history.listen((location) => {
            location = getLocation(location, this.root);
            this.location = location;
        });
        this.location = getLocation(this.history.location, this.root);
    }
    scrollTo(scrollToLocation) {
        const history = this.history;
        if (scrollToLocation == null || this.isServer || !history) {
            return;
        }
        if (history.action === 'POP' && Array.isArray(history.location.scrollPosition)) {
            return this.queue.write(() => {
                if (history && history.location && Array.isArray(history.location.scrollPosition)) {
                    history.win.scrollTo(history.location.scrollPosition[0], history.location.scrollPosition[1]);
                }
            });
        }
        // okay, the frame has passed. Go ahead and render now
        return this.queue.write(() => {
            history.win.scrollTo(0, scrollToLocation);
        });
    }
    render() {
        if (!this.location || !this.history) {
            return;
        }
        const state = {
            historyType: this.historyType,
            location: this.location,
            titleSuffix: this.titleSuffix,
            root: this.root,
            history: this.history,
            routeViewsUpdated: this.routeViewsUpdated
        };
        return (h(ActiveRouter.Provider, { state: state }, h("slot", null)));
    }
    get el() { return getElement(this); }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "stencil-router",
        "$members$": {
            "root": [1],
            "historyType": [1, "history-type"],
            "titleSuffix": [1, "title-suffix"],
            "scrollTopOffset": [2, "scroll-top-offset"],
            "location": [32],
            "history": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const searchComboboxComponentCss = "snt-search-combobox{display:block;position:relative;background-color:#ffffff;width:100%;background-color:transparent}snt-search-combobox input{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:2.525rem;font-size:0.875rem;line-height:1.25rem}snt-search-combobox input::-webkit-search-cancel-button{position:relative;right:11px;-webkit-filter:brightness(0.6) contrast(1.03) grayscale(1);filter:brightness(0.6) contrast(1.03) grayscale(1)}snt-search-combobox snt-button button{display:none;position:absolute;right:0.5rem;top:0;bottom:0;margin:auto;font-size:1.125rem;line-height:1.125rem;color:#323232}snt-search-combobox snt-layout .spacings{overflow:unset}snt-search-combobox .search-container{position:relative}snt-search-combobox :focus{outline:none}snt-search-combobox snt-button{display:none}snt-search-combobox snt-icon{margin:0 0.625rem 0 1.25rem}snt-search-combobox input{border:none;border-radius:0;background-color:transparent}snt-search-combobox ul{list-style:none;margin:0;padding:0}snt-search-combobox ul li a{text-decoration:none;color:#323232;font-size:14px;line-height:23px}snt-search-combobox .search-input-area{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;background-color:#ffffff;-webkit-box-sizing:border-box;box-sizing:border-box;border:1px solid #b2b2b2;border-radius:25px}snt-search-combobox .search-input-area:hover{border-color:#147582}snt-search-combobox .search-results-area{z-index:10;display:none;color:#323232;position:absolute;left:0;right:0;top:100%;width:100%;padding:0.625rem;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:left;border:1px solid transparent;border-top:none;border-bottom-left-radius:25px;border-bottom-right-radius:25px;background-color:white;height:400px;overflow-y:scroll}@media (min-width: 768px){snt-search-combobox .search-results-area{height:auto;overflow-y:auto}}snt-search-combobox .search-results-area:before{position:absolute;content:\" \";height:1px;margin-right:auto;margin-left:auto;top:0;left:0;right:0;width:calc(100% - 2rem);background-color:#147582}snt-search-combobox .result{padding:0.3125rem 0.625rem;font-size:14px;line-height:23px;border-bottom:1px solid #e5e5e5}snt-search-combobox .result:last-child{border-bottom:none}snt-search-combobox.search-combobox-has-focus snt-backdrop{display:block;background-color:rgba(51, 51, 51, 0.75);z-index:5}snt-search-combobox.search-combobox-has-focus .search-input-area{border:3px solid #147582;margin:-2px}snt-search-combobox .result{cursor:default}snt-search-combobox .result:hover,snt-search-combobox .result.result-is-focused{background-color:#f8f8f8}snt-search-combobox .result b{pointer-events:none}snt-search-combobox .result:active{background-color:#147582}snt-search-combobox .result:active a{color:white}snt-search-combobox.theme-default .search-input-area{background-color:#ffffff;border:1px solid #b2b2b2}snt-search-combobox.theme-default .search-input-area:hover{border-color:#147582}snt-search-combobox.theme-default.search-combobox-has-focus .search-input-area{border:3px solid #147582}snt-search-combobox.theme-neutral .search-input-area{background-color:#ffffff;border:1px solid #e5e5e5}snt-search-combobox.theme-neutral .search-input-area:hover{border-color:#6ebac5}snt-search-combobox.theme-neutral.search-combobox-has-focus .search-input-area{border:3px solid #6ebac5}snt-search-combobox.search-combobox-is-expanded.theme-neutral .search-input-area,snt-search-combobox.search-combobox-is-expanded.theme-default .search-input-area{border:1px solid transparent;border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom:none;pointer-events:all;z-index:10;position:relative;margin:0px}snt-search-combobox.search-combobox-is-expanded.theme-neutral .search-results-area,snt-search-combobox.search-combobox-is-expanded.theme-default .search-results-area{display:block}@media screen and (device-aspect-ratio: 375/667){input[type=search]{font-size:14px}}";

var __awaiter$q = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class SearchComboboxComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sntInput = createEvent(this, "sntInput", 7);
        this.sntFocus = createEvent(this, "sntFocus", 7);
        this.sntBlur = createEvent(this, "sntBlur", 7);
        this.sntSearchSubmitted = createEvent(this, "sntSearchSubmitted", 7);
        /**
         * State Variables
         */
        this.focused = false;
        this.expanded = false;
        /**
         * Public Properties API
         */
        this.autoComplete = false;
        this.ariaLabelledby = StringUtils.empty();
        this.ariaLabel = StringUtils.empty();
        this.languageJson = StringUtils.empty();
        this.languageString = StringUtils.empty();
        this.searchFunctionRef = StringUtils.empty();
        this.value = '';
        /**
         * Prop Lifecycle Events
         */
        this.activeIndex = -1;
    }
    activeIndexChange(activeIndex) {
        if (this.autoComplete && activeIndex != -1) {
            this.value = this.SearchSuggestion[this.activeIndex].title;
        }
    }
    /**
     * Component Lifecycle Events
     */
    componentWillLoad() {
        if (StringUtils.isEmpty(this.hostElement.id)) {
            throw new Error(`${SearchComboboxComponent.TAG_NAME} must have a valid id.`);
        }
        if (this.searchFunctionRef) {
            ReflectionUtils.getObjectReference(this.searchFunctionRef, window).then((searchFunction) => {
                this.searchFunction = searchFunction;
            });
        }
        this.languageVariables = LanguageUtils.getVariablesFromString(this.languageString, ["search"]);
        this.initKeyboardEventProcessor();
    }
    /**
     * Listeners
     */
    onClick(evt) {
        this.focused = this.expanded = false;
        evt.target.focus();
    }
    /**
     * Public Methods API
     */
    setFocus() {
        return __awaiter$q(this, void 0, void 0, function* () {
            if (this.input) {
                this.input.focus();
            }
            return Promise.resolve();
        });
    }
    getInputElement() {
        return __awaiter$q(this, void 0, void 0, function* () {
            return Promise.resolve(this.input);
        });
    }
    setSearchSuggestions(suggestions) {
        return __awaiter$q(this, void 0, void 0, function* () {
            if (suggestions) {
                this.SearchSuggestion = suggestions;
                this.expanded = this.SearchSuggestion.length > 0;
            }
        });
    }
    /**
     * Local Methods
     */
    onFocus() {
        this.focused = true;
        this.sntFocus.emit();
        this.updateSearchSuggestions();
    }
    onInput(evt) {
        const input = evt.target;
        if (input) {
            this.value = input.value;
            this.userInput = input.value;
        }
        this.updateSearchSuggestions();
        this.sntInput.emit(evt);
    }
    onBlur() {
        if (!this.expanded) {
            this.focused = false;
        }
    }
    onListboxClick(evt) {
        if (evt.target) {
            if (evt.target.nodeName == "LI") {
                this.activeIndex = evt.target.dataset.index;
                this.selectItem();
                this.focused = false;
            }
        }
    }
    selectItem() {
        if (this.activeIndex !== -1) {
            this.value = this.SearchSuggestion[this.activeIndex].title;
            this.expanded = false;
        }
    }
    clear() {
        this.expanded = false;
        this.value = StringUtils.empty();
    }
    dismiss() {
        this.focused = this.expanded = false;
    }
    updateSearchSuggestions() {
        return __awaiter$q(this, void 0, void 0, function* () {
            if (this.searchFunction) {
                this.SearchSuggestion = yield this.searchFunction(this.input.value, LanguageUtils.isFrench() ? LanguageUtils.LANGUAGE_ID.fr : LanguageUtils.LANGUAGE_ID.en, 10);
                this.expanded = this.SearchSuggestion.length > 0;
            }
        });
    }
    initKeyboardEventProcessor() {
        this.keyboardEventProcessor = KeyboardEventProcessorBuilder.newInstance()
            .withKey(Keyboard.ARROW_UP, () => this.setNextActiveIndex(NavigationDirectionEnum.BACKWARDS))
            .withKey(Keyboard.ARROW_DOWN, () => this.setNextActiveIndex(NavigationDirectionEnum.FORWARDS))
            .withKey(Keyboard.HOME, () => this.setNextActiveIndex(NavigationDirectionEnum.FIRST))
            .withKey(Keyboard.END, () => this.setNextActiveIndex(NavigationDirectionEnum.LAST))
            .withKey(Keyboard.ENTER, () => this.submit())
            .withKey(Keyboard.ESCAPE, () => this.clear())
            .withKey(Keyboard.TAB, () => this.dismiss())
            .build();
    }
    processKeyboardEvent(evt) {
        this.keyboardEventProcessor.process(evt);
    }
    setNextActiveIndex(direction) {
        if (direction == NavigationDirectionEnum.BACKWARDS) {
            if (this.activeIndex <= 0) {
                this.activeIndex = -1;
                this.restoreUserInput();
            }
            else {
                this.activeIndex -= 1;
            }
        }
        else if (direction == NavigationDirectionEnum.FORWARDS) {
            if (this.activeIndex >= this.SearchSuggestion.length - 1) {
                this.activeIndex = -1;
                this.restoreUserInput();
            }
            else {
                this.activeIndex += 1;
            }
        }
        else if (direction == NavigationDirectionEnum.FIRST) {
            this.activeIndex = 0;
        }
        else if (direction == NavigationDirectionEnum.LAST) {
            this.activeIndex = this.SearchSuggestion.length - 1;
        }
    }
    highlightPattern(text, pattern) {
        const splitText = text.split(pattern);
        if (splitText.length <= 1) {
            return text;
        }
        const matches = text.match(pattern);
        return splitText.reduce((arr, element, index) => (matches[index] ? [
            ...arr,
            element,
            h("b", null, matches[index]),
        ] : [...arr, element]), []);
    }
    ;
    submit() {
        this.selectItem();
        if (this.activeIndex != -1) {
            window.location.href = this.SearchSuggestion[this.activeIndex].url;
        }
        else {
            this.sntSearchSubmitted.emit({ keywords: this.value });
            this.expanded = false;
        }
    }
    restoreUserInput() {
        this.value = this.userInput;
    }
    render() {
        const comboboxId = this.hostElement.id ? `${this.hostElement.id}-combobox` : null;
        const textboxId = this.hostElement.id ? `${this.hostElement.id}-textbox` : null;
        const listboxId = this.hostElement.id ? `${this.hostElement.id}-listbox` : null;
        const resultItemPrefix = "result-item-";
        return (h(Host, { class: {
                'search-combobox-has-focus': this.focused,
                'search-combobox-is-expanded': this.expanded
            } }, h("snt-layout", { padding: this.padding }, h("div", { class: "search-container" }, h("div", { role: "combobox", id: comboboxId, "aria-haspopup": "listbox", "aria-owns": listboxId, "aria-expanded": this.expanded.toString(), class: "search-input-area" }, h("snt-icon", { styleClasses: "iconNavSearch" }), StringUtils.notEmpty(this.ariaLabelledby) ?
            h("label", { htmlFor: textboxId, id: this.ariaLabelledby, class: "sr-only" }, this.languageVariables.get("search")) : null, h("input", { type: "search", id: textboxId, role: "textbox", "aria-labelledby": this.ariaLabelledby || null, "aria-autocomplete": "both", "aria-controls": listboxId, "aria-activedescendant": this.activeIndex >= 0 ? resultItemPrefix + this.activeIndex : null, onInput: this.onInput.bind(this), onFocus: this.onFocus.bind(this), onBlur: this.onBlur.bind(this), onKeyDown: this.processKeyboardEvent.bind(this), placeholder: this.languageVariables.get("search"), ref: elem => (this.input = elem), value: this.value, autoComplete: "off" })), h("ul", { id: listboxId, role: "listbox", class: "search-results-area", onClick: this.onListboxClick.bind(this) }, (this.focused && this.SearchSuggestion && this.SearchSuggestion.length > 0) ?
            this.SearchSuggestion.map((SearchSuggestionItem, index) => h("li", { role: "option", "aria-selected": index == this.activeIndex, "aria-label": this.languageVariables.get("link to") + SearchSuggestionItem.title, id: resultItemPrefix + index, class: {
                    'result': true,
                    'result-is-focused': index == this.activeIndex
                }, "data-index": index }, h("a", { href: SearchSuggestionItem.url }, this.highlightPattern(SearchSuggestionItem.title, new RegExp(this.input.value, 'ig')))))
            : null)), this.focused && this.expanded ? h("snt-backdrop", null) : null)));
    }
    get hostElement() { return getElement(this); }
    static get watchers() { return {
        "activeIndex": ["activeIndexChange"]
    }; }
    static get style() { return searchComboboxComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-combobox",
        "$members$": {
            "autoComplete": [4, "auto-complete"],
            "ariaLabelledby": [1, "aria-labelledby"],
            "ariaLabel": [1, "aria-label"],
            "languageJson": [1, "language-json"],
            "languageString": [1, "language-string"],
            "searchFunctionRef": [1, "search-function-ref"],
            "value": [1025],
            "padding": [513],
            "activeIndex": [2, "active-index"],
            "focused": [32],
            "expanded": [32],
            "SearchSuggestion": [32],
            "setFocus": [64],
            "getInputElement": [64],
            "setSearchSuggestions": [64]
        },
        "$listeners$": [[32, "sntBackdropTap", "onClick"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["padding", "padding"]]
    }; }
}
SearchComboboxComponent.TAG_NAME = "snt-search-combobox";

class SearchComboboxExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    static getSearchSuggestions(keywords) {
        if (keywords && keywords !== '') {
            return [{
                    title: 'What is my name',
                    question: 'What is my name?',
                    answer: 'Peter Parker',
                    faqUrl: 'www.yahoo.com'
                },
                {
                    title: 'Who is Batman',
                    question: 'Who is Batman?',
                    answer: 'Bruce Wayne',
                    faqUrl: 'www.google.com'
                }];
        }
        else {
            return [];
        }
    }
    render() {
        const languageString1 = `{\"search\":\"Rechercher\"}`;
        return (h("div", null, h("a", { href: "javascript:void(0);", title: "Focusable Element 1" }, "Focusable Element 1"), h("br", null), h("br", null), h("h4", { id: "search-example-1-label" }, "Sonnet recherche"), h("snt-search-combobox", { id: "search-example-1", class: "theme-default", "search-function-ref": "SearchComboboxExample.getSearchSuggestions", "aria-labelledby": "search-example-1-label", "auto-complete": true, "language-string": languageString1, "submit-url": "https://test-economical.dotcmscloud.com/FAQs/results?foo=123", "search-para-name": "es" }), h("br", null), h("a", { href: "javascript:void(0);", title: "Focusable Element 2" }, "Focusable Element 2")));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "search-combobox-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
window.SearchComboboxExample = SearchComboboxExample;

const searchResultComponentCss = "snt-search-result .search-result-wrapper{margin-bottom:26px}snt-search-result .search-result-wrapper .description{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;visibility:visible}@media (min-width: 768px){snt-search-result .search-result-wrapper .description{-webkit-line-clamp:1}}snt-search-result .link-content{display:inline;font-size:0.875rem;line-height:21px;margin:0;font-family:\"Averta-ExtraBold\", sans-serif !important;font-weight:500 !important}@media (min-width: 768px){snt-search-result .search-result-wrapper{margin-bottom:30px}}snt-search-result snt-link{display:block;margin-bottom:5px}@media (min-width: 1024px){snt-search-result .link-content{font-size:1rem}}@media (min-width: 1440px){snt-search-result .link-content{font-size:1.313rem;line-height:26px}}";

class SearchResultComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.descriptionText = StringUtils.empty();
    }
    componentWillRender() {
        var elem = document.createElement('p');
        elem.innerHTML = this.searchResult.description;
        this.descriptionText = elem.innerText || "";
    }
    render() {
        const categoryLabel = StringUtils.hasValue(this.searchResult.category) ?
            h("p", null, this.searchResult.category) : null;
        const descriptionText = StringUtils.hasValue(this.searchResult.description) ?
            h("p", { class: "description", innerHTML: this.descriptionText }) : null;
        return (h("div", { class: "search-result-wrapper" }, categoryLabel, h("snt-link", { "class-names": "theme-link theme-action", href: this.searchResult.url }, h("div", { class: "link-content", innerHTML: this.searchResult.title })), descriptionText));
    }
    static get style() { return searchResultComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-result",
        "$members$": {
            "searchResult": [16]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const searchResultListComponentCss = "snt-search-result-list .search-result-list-wrapper snt-layout .spacings{padding:2.5em 1.875em}@media (min-width: 768px){snt-search-result-list .search-result-list-wrapper snt-layout .spacings{padding:2.5em 2.313em}}@media (min-width: 1024px){snt-search-result-list .search-result-list-wrapper snt-layout .spacings{padding:3.75em 4.438em}}@media (min-width: 1440px){snt-search-result-list .search-result-list-wrapper snt-layout .spacings{padding:3.75em 8.438em}}snt-search-result-list .separator snt-search-result .search-result-wrapper{padding-bottom:26px}@media (min-width: 1024px){snt-search-result-list .separator snt-search-result .search-result-wrapper{padding-bottom:30px}}snt-search-result-list .separator snt-search-result:not(:last-child) .search-result-wrapper{border-bottom:1px solid #e5e5e5}snt-search-result-list .separator snt-search-result:last-child .search-result-wrapper{padding-bottom:0px;margin-bottom:0px}snt-search-result-list .separator snt-search-result:last-child .description{margin-bottom:0px}snt-search-result-list snt-search-result:last-child snt-search-result .search-result-wrapper{padding-bottom:0px}snt-search-result-list snt-search-result:last-child snt-search-result .description{margin-bottom:0px}";

class SearchResultListComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.searchResultList = [];
        this.searchResultListJson = StringUtils.empty();
        this.noResultMsg = "No results found";
        this.separator = false;
    }
    render() {
        var content;
        if (StringUtils.hasValue(this.searchResultListJson) && this.searchResultListJson != "[]") {
            this.searchResultList = JSON.parse(this.searchResultListJson);
            content = (h("div", { class: `search-result-list-wrapper ${this.separator ? 'separator' : ''}`, "aria-live": "polite" }, h("snt-layout", null, this.searchResultList.map(faq => (h("snt-search-result", { searchResult: faq }))))));
        }
        else {
            content = (h("snt-layout", null, h("h4", null, this.noResultMsg)));
        }
        return (content);
    }
    static get style() { return searchResultListComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-result-list",
        "$members$": {
            "searchResultListJson": [513, "search-result-list-json"],
            "noResultMsg": [513, "no-result-msg"],
            "separator": [4]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["searchResultListJson", "search-result-list-json"], ["noResultMsg", "no-result-msg"]]
    }; }
}

class SearchResultsExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        var searchResultListJSON = `[
            {\"title\":\"Question 1?\",\"description\":\"We ask you a few key questions to access public information about the place you’re renting along with personal information you provide to determine your rate. The information we use includes:<ul><li>Where your rental is located</li><li>Home structure, age, type of heating, etc.</li></ul>Using this information and a whole lot of math and statistics, you get the most competitive price – savings included. The whole process takes just 5 minutes and the price you’re quoted is final. Buy online right away or save your quote and lock in your price for 45 days or until the coverage start date (whichever is sooner).\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 2?\",\"description\":\"This is answer 2\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 3?\",\"description\":\"This is answer 3\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 4?\",\"description\":\"This is answer 4\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 5?\",\"description\":\"This is answer 5\",\"url\":\"https:\/\/www.sonnet.ca\"}
        ]`;
        var searchResultCategoryListJSON = `[
            {\"category\":\"Home Insurance\",\"title\":\"Home Insurance Questions\",\"description\":\"This is the description for home insurance\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"category\":\"Auto Insurance\",\"title\":\"Auto Insurance Questions\",\"description\":\"This is the description for auto insurance\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"category\":\"Auto Insurance\",\"title\":\"No Description\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"category\":\"Auto Insurance\",\"title\":\"Auto Insurance Questions\",\"description\":\"This is the description for auto insurance\",\"url\":\"https:\/\/www.sonnet.ca\"}
        ]`;
        return [
            h("h3", null, "'Search results' with JSON string"),
            h("snt-search-result-list", { searchResultListJson: searchResultListJSON }),
            h("h3", null, "'Search results' with categories and separator"),
            h("snt-search-result-list", { separator: true, searchResultListJson: searchResultCategoryListJSON }),
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "search-results-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class UrlUtils {
    static updateQueryStringParameter(url, key, value) {
        if (!url)
            url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"), hash;
        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];
                return url;
            }
            else
                return url;
        }
    }
    ;
}

const searchTypeaheadComponentCss = "snt-search-typeahead{position:relative;width:100%;max-width:47rem}snt-search-typeahead snt-search-combox .search-input-area{border-color:#e5e5e5}";

var __awaiter$r = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class SearchTypeaheadComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.baseHref = StringUtils.empty();
        this.searchHref = this.baseHref;
        this.languageStrings = {};
        this.languageJson = StringUtils.empty();
    }
    handleSearchButtonClick(evt) {
        if (evt.target == this.searchSntButton) {
            window.location.href = this.searchHref;
        }
    }
    onKeyDown() {
        window.location.href = this.searchHref;
    }
    onInput() {
        return __awaiter$r(this, void 0, void 0, function* () {
            const input = yield this.searchComboBox.getInputElement();
            this.searchHref = UrlUtils.updateQueryStringParameter(this.baseHref, 'es', encodeURIComponent(input.value));
        });
    }
    componentWillLoad() {
        try {
            this.languageJson && (this.languageStrings = JSON.parse(this.languageJson));
        }
        catch (e) {
            console.error(e);
        }
        this.baseHref = this.languageStrings["searchUrl"];
    }
    render() {
        return (h("div", { class: "search-input-area" }, h("snt-search-combobox", { ref: elem => (this.searchComboBox = elem), id: this.searchComboboxId, class: "theme-neutral", "auto-complete": true, padding: "none", onSntInput: () => __awaiter$r(this, void 0, void 0, function* () { yield this.onInput(); }), onSntSearchSubmitted: this.onKeyDown.bind(this), "language-string": this.languageJson, "search-para-name": "es" })));
    }
    static get style() { return searchTypeaheadComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-search-typeahead",
        "$members$": {
            "languageJson": [513, "language-json"],
            "searchComboboxId": [1, "search-combobox-id"]
        },
        "$listeners$": [[0, "sntButtonClick", "handleSearchButtonClick"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["languageJson", "language-json"]]
    }; }
}
SearchTypeaheadComponent.TAG_NAME = "snt-search-typeahead";

const shoppingCartComponentCss = "snt-shopping-cart snt-link{display:-ms-flexbox;display:flex}snt-shopping-cart snt-link a{position:relative;font-size:1.5rem;display:-ms-flexbox;display:flex;position:relative;text-decoration:none;margin:0 0.5rem 0.25rem}snt-shopping-cart .item-counter{position:absolute;top:-15%;right:-40%;height:14px;width:14px;border:1px solid #323232;background-color:#6ebac5;border-radius:50%;color:#323232;font-size:10px;line-height:14px;text-align:center;vertical-align:center}";

class ShoppingCartComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.cartValue = "0";
    }
    componentDidLoad() {
        const cartValue = CookieUtils.readCookie(ComponentConstants.CART_COOKIE_NAME);
        this.cartValue = cartValue || this.cartValue;
    }
    render() {
        if (this.cartValue && parseInt(this.cartValue) > 0) {
            return (h("snt-link", { href: ShoppingCartComponent.SHOPPING_CART_URL }, h("snt-icon", { styleClasses: "iconNavCartEmpty" }), h("span", { class: "item-counter" }, this.cartValue)));
        }
    }
    static get style() { return shoppingCartComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-shopping-cart",
        "$members$": {
            "cartValue": [1, "cart-value"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ShoppingCartComponent.TAG_NAME = "snt-shopping-cart";
ShoppingCartComponent.SHOPPING_CART_URL = "https://secure.sonnet.ca/#/shopping_cart";

const skiptomainComponentCss = "snt-skip-to-main snt-link{position:absolute;top:0;left:0;z-index:100}";

class SkipToMainComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() {
        if (!this.mainContentId) {
            this.mainContentId = '#maincontent';
        }
        if (!this.mainContentId.startsWith('#')) {
            this.mainContentId = '#' + this.mainContentId;
        }
        if (!this.ariaLabel) {
            if (this.linkText) {
                this.ariaLabel = this.linkText;
            }
        }
    }
    render() {
        return [
            h("snt-link", { ariaLabel: this.ariaLabel, classNames: SkipToMainComponent.srClasses, href: this.mainContentId }, h("span", null, this.linkText ? this.linkText : h("slot", null)))
        ];
    }
    static get style() { return skiptomainComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-skip-to-main",
        "$members$": {
            "mainContentId": [513, "main-content-id"],
            "linkText": [513, "link-text"],
            "ariaLabel": [513, "aria-label"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["mainContentId", "main-content-id"], ["linkText", "link-text"], ["ariaLabel", "aria-label"]]
    }; }
}
SkipToMainComponent.TAG_NAME = 'snt-skip-to-main';
SkipToMainComponent.srClasses = 'sr-only sr-only-focusable';

class SkipToMainExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("snt-skip-to-main", { "main-content-id": '#main-content' }, "Skip to main content"), " ", h("br", null), h("br", null), h("br", null), h("br", null), h("button", { id: 'main-content' }, "this is main content!")));
    }
    static get style() { return "#main-content:focus{outline:1px solid red;}"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "skiptomain-example",
        "$members$": {
            "mainContentId": [513, "main-content-id"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["mainContentId", "main-content-id"]]
    }; }
}
SkipToMainExample.TAG_NAME = 'skiptomain-example';

const blogFeatureArticlesComponentCss = "snt-blog-feature-articles{display:block;width:100%;}snt-blog-feature-articles snt-layout[viewport=extra-small]>div.spacings{overflow-x:scroll;overflow-y:hidden;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scroll-behavior:smooth;display:-ms-flexbox;display:flex;}snt-blog-feature-articles snt-layout[viewport=extra-small]>div.spacings:after{content:\"\";padding:calc(1.875em / 2)}snt-blog-feature-articles snt-layout[viewport=extra-small]>div.spacings>*{scroll-snap-align:center;-ms-flex:0 0 calc(100% - 2em);flex:0 0 calc(100% - 2em);margin:0 1em}snt-blog-feature-articles snt-layout[viewport=extra-small]>div.spacings>*:first-child{-ms-flex:0 0 calc(100% - 1em);flex:0 0 calc(100% - 1em);margin:0 1em 0 0}snt-blog-feature-articles snt-layout[viewport=extra-small]>div.spacings>*:last-child{-ms-flex:0 0 calc(100% - 1em);flex:0 0 calc(100% - 1em);margin:0 0 0 1em}snt-blog-feature-articles snt-layout[viewport=small]>div.spacings{overflow-x:scroll;overflow-y:hidden;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scroll-behavior:smooth;display:-ms-flexbox;display:flex;}snt-blog-feature-articles snt-layout[viewport=small]>div.spacings:after{content:\"\";padding:calc(1.875em / 2)}snt-blog-feature-articles snt-layout[viewport=small]>div.spacings>*{scroll-snap-align:center;-ms-flex:0 0 calc(100% - 2em);flex:0 0 calc(100% - 2em);margin:0 1em}snt-blog-feature-articles snt-layout[viewport=small]>div.spacings>*:first-child{-ms-flex:0 0 calc(100% - 1em);flex:0 0 calc(100% - 1em);margin:0 1em 0 0}snt-blog-feature-articles snt-layout[viewport=small]>div.spacings>*:last-child{-ms-flex:0 0 calc(100% - 1em);flex:0 0 calc(100% - 1em);margin:0 0 0 1em}snt-blog-feature-articles snt-layout[viewport=medium]>div{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(2, 1fr);-webkit-column-gap:1.87rem;-moz-column-gap:1.87rem;column-gap:1.87rem;row-gap:1.875rem}snt-blog-feature-articles snt-layout[viewport=medium]>div>*:first-child{grid-column:1;grid-row:1/3}snt-blog-feature-articles snt-layout[viewport=large]>div{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(2, 1fr);-webkit-column-gap:1.87rem;-moz-column-gap:1.87rem;column-gap:1.87rem;row-gap:1.875rem}snt-blog-feature-articles snt-layout[viewport=large]>div>*:first-child{grid-column:1;grid-row:1/3}snt-blog-feature-articles snt-layout[viewport=extra-large]>div{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(2, 1fr);-webkit-column-gap:1.87rem;-moz-column-gap:1.87rem;column-gap:1.87rem;row-gap:1.875rem}snt-blog-feature-articles snt-layout[viewport=extra-large]>div>*:first-child{grid-column:1;grid-row:1/3}";

class SntBlogFeaturedArticles {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h("snt-layout", null, h("slot", null))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return blogFeatureArticlesComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-blog-feature-articles",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const blogInfoComponentCss = "snt-blog-info #blog-info-bar{max-width:1440px;border:0;-ms-flex-direction:column;flex-direction:column}snt-blog-info .social-icons{display:none;text-align:center}snt-blog-info .social-icons div{display:inline-block;zoom:1;*display:inline;vertical-align:middle;border-right:0;padding:0 20px}snt-blog-info .social-icons div:first-child{padding-left:0px}snt-blog-info .social-icons div:last-child{border-right:0;padding-right:0}snt-blog-info .social-icons div a{display:block;font-size:1em;margin:0 5px;text-decoration:none}snt-blog-info .social-icons div a i{-webkit-transition:all 0.25s ease-in;-moz-transition:all 0.25s ease-in;-o-transition:all 0.25s ease-in;-ms-transition:all 0.25s ease-in;transition:all 0.25s ease-in}snt-blog-info .schedule-info{display:-ms-flexbox;display:flex;min-width:100%;border:0;margin-bottom:25px}snt-blog-info .schedule-info .icons-container,snt-blog-info .schedule-info .social-icons div a i,snt-blog-info .social-icons div a .schedule-info i{display:none}snt-blog-info .schedule-info p{font-size:1em}snt-blog-info .left-info{font-size:0.875em}snt-blog-info .icons-container,snt-blog-info .social-icons div a i{color:#323232;font-size:1.5625em;display:inline-block;background-repeat:no-repeat;background-size:contain;padding-right:5px}snt-blog-info .iconLinkedin:before,snt-blog-info .iconFacebookPlain:before,snt-blog-info .iconTwitter:before,snt-blog-info .iconMail:before{color:#323232}snt-blog-info a:hover .iconLinkedin:before,snt-blog-info a:hover .iconFacebookPlain:before,snt-blog-info a:hover .iconTwitter:before,snt-blog-info a:hover .iconMail:before{color:#147582}snt-blog-info .read-time-info{padding-left:0;width:100%;display:none}snt-blog-info .read-time-info p{font-size:1em}@media (min-width: 768px){snt-blog-info .left-info{-ms-flex:0 1 auto;flex:0 1 auto;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}snt-blog-info .schedule-info{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:0;min-width:auto}snt-blog-info .schedule-info .icons-container,snt-blog-info .schedule-info .social-icons div a i,snt-blog-info .social-icons div a .schedule-info i{display:block;padding-right:20px;font-size:2.142em}snt-blog-info .read-time-info{display:none}snt-blog-info #blog-info-bar{border-top:1px solid #323232;border-bottom:1px solid #323232;-ms-flex-direction:row;flex-direction:row;height:70px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}snt-blog-info .social-icons{-ms-flex:3;flex:3;-ms-flex-pack:end;justify-content:flex-end;display:-ms-flexbox;display:flex}snt-blog-info .social-icons div{border-right:1px solid #e5e5e5}}@media (min-width: 1024px){snt-blog-info .schedule-info{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-width:200px;text-align:left;border-right:1px solid #e5e5e5}snt-blog-info .schedule-info i.icon-calendar{display:block;padding-right:20px}snt-blog-info .read-time-info{padding-left:30px;width:50%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}snt-blog-info .read-time-info .icons-container,snt-blog-info .read-time-info .social-icons div a i,snt-blog-info .social-icons div a .read-time-info i{font-size:2.142em;padding-right:20px}snt-blog-info .social-icons div{padding:0 15px}snt-blog-info .social-icons div a i{width:25px;height:25px}}";

class SntBlogInfo {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() {
        if (StringUtils.hasValue(this.accessibilityText)) {
            this.ariaTextJson = JSON.parse(this.accessibilityText);
        }
    }
    render() {
        return (h("snt-layout", null, h("div", { id: "blog-info-bar" }, h("div", { class: "left-info" }, h("div", { class: "schedule-info" }, h("span", { class: "icons-container icon-font iconCalendar" }), h("p", null, this.publishedTime)), h("div", { class: "read-time-info" }, h("span", { class: "icons-container icon-font iconClock" }), h("p", null, this.timeToRead))), h("div", { class: "social-icons" }, h("div", null, h("a", { href: `http://www.linkedin.com/shareArticle?mini=true&url=${this.blogLink}&title=${this.titleText}`, "aria-label": this.ariaTextJson.linkedIn }, h("i", { class: "icon-font iconLinkedin" }))), h("div", null, h("a", { href: `https://www.facebook.com/sharer/sharer.php?u=${this.blogLink}`, "aria-label": this.ariaTextJson.facebook }, h("i", { class: "icon-font iconFacebookPlain" }))), h("div", null, h("a", { href: `https://twitter.com/intent/tweet?url=${this.blogLink}&text=${this.titleText}`, "aria-label": this.ariaTextJson.twitter }, h("i", { class: "icon-font iconTwitter" }))), h("div", null, h("a", { href: `mailto:?subject=${this.titleText}&body=${this.blogLink}`, "aria-label": this.ariaTextJson.email }, h("i", { class: "icon-font iconMail" })))))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return blogInfoComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-blog-info",
        "$members$": {
            "titleText": [1, "title-text"],
            "blogLink": [1, "blog-link"],
            "publishedTime": [1, "published-time"],
            "timeToRead": [1, "time-to-read"],
            "accessibilityText": [1, "accessibility-text"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
SntBlogInfo.TAG_NAME = "snt-blog-info";

const blogResultsComponentCss = "snt-blog-results snt-multi-column-mixed snt-image img{position:unset;top:unset}snt-blog-results snt-multi-column-mixed.first-row .column.last-row{margin-bottom:20px}snt-blog-results snt-multi-column-mixed.result-rows .spacings{padding-top:10px}";

var __awaiter$s = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class SntBlogResultsComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.blogResults = [];
        this.blogResultsString = StringUtils.empty();
    }
    componentWillRender() {
        this.blogResults = JSON.parse(this.blogResultsString);
    }
    componentDidRender() {
        return __awaiter$s(this, void 0, void 0, function* () {
            let viewport;
            const firstRowEl = document.querySelector('snt-multi-column-mixed[class*="first-row"]');
            if (firstRowEl) {
                viewport = firstRowEl
                    .querySelector("snt-layout")
                    .getAttribute("viewport");
                yield firstRowEl.tagLastRow(viewport);
                yield firstRowEl.setColumns();
                const resultRowsEl = document.querySelector('snt-multi-column-mixed[class*="result-rows"]');
                if (resultRowsEl) {
                    yield resultRowsEl.setColumns();
                    yield resultRowsEl.tagLastRow(viewport);
                }
            }
        });
    }
    render() {
        return (h(Host, null, this.renderFirstRow(), this.blogResults.length > 2 ? this.renderRows() : null));
    }
    renderFirstRow() {
        const firstRowJson = '{"extra-small": 1,"small": 1,"medium": 2,"large": 2,"extra-large": 2}';
        return (h("snt-multi-column-mixed", { class: "first-row no-bottom with-gutter", "column-count": firstRowJson }, this.blogResults.slice(0, 2).map((blog) => {
            return (h("div", { class: "column" }, h("snt-blog", { imgSrc: blog.imageSource, titleText: blog.titleText, tagText: blog.tagText, timeToRead: blog.timeToRead, blogLink: blog.blogLink })));
        })));
    }
    renderRows() {
        const resultRowJson = '{"extra-small": 1,"small": 1,"medium": 2,"large": 3,"extra-large": 3}';
        return (h("snt-multi-column-mixed", { class: "result-rows with-gutter", "column-count": resultRowJson, "aria-live": "polite" }, this.blogResults
            .slice(2, this.blogResults.length)
            .map((blog) => {
            return (h("div", { class: "column" }, h("snt-blog", { imgSrc: blog.imageSource, titleText: blog.titleText, tagText: blog.tagText, timeToRead: blog.timeToRead, blogLink: blog.blogLink })));
        })));
    }
    get hostElement() { return getElement(this); }
    static get style() { return blogResultsComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-blog-results",
        "$members$": {
            "blogResultsString": [513, "blog-results-string"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["blogResultsString", "blog-results-string"]]
    }; }
}

const sntTabsCss = "snt-tabs .title{color:#323232;position:relative;text-decoration:none;cursor:pointer;background-color:transparent;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}snt-tabs .title:after{content:attr(data-text);content:attr(data-text)/\"\";height:0;visibility:hidden;overflow:hidden;speak:never;speak:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;font-family:\"Averta-Regular\", sans-serif}snt-tabs .title:before{content:\"\";position:absolute;width:100%;height:2px;bottom:-1px;left:0;background-color:#147582;visibility:hidden;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s}snt-tabs .title:hover{color:#147582;font-family:\"Averta-ExtraBold\", sans-serif;text-decoration:none}snt-tabs .title[aria-selected=true]{text-decoration:none}snt-tabs .title[aria-selected=true]:before{background-color:#147582;visibility:visible;-webkit-transform:scaleX(1);transform:scaleX(1)}snt-tabs .title:focus{z-index:1;outline:2px solid #147582;outline-offset:5px}snt-tabs .panel:focus{outline:1px solid #323232}snt-tabs .panel[aria-hidden=true]{display:none}.tab-wrapper{background-color:#f5f5f5;display:block;width:100%;clear:both;float:right}.tab-wrapper .tab-header{width:92%;display:-ms-flexbox;display:flex;text-align:center;padding:15px 4%;padding-bottom:0}.tab-wrapper .tab-header .tab-item{-ms-flex-positive:1;flex-grow:1;position:relative;border-right:1px solid #323232}.tab-wrapper .tab-header .tab-item:last-child{border-right:0}.panel-wrapper{padding:0}";

class SntTabs {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.findFirstSelectedTab = () => {
            let selectedIdx;
            for (const [i, tab] of this.tabs.entries()) {
                tab.setAttribute('role', 'tab');
                if (tab.classList.contains('selected')) {
                    tab.classList.remove('selected');
                    selectedIdx = i;
                }
            }
            return selectedIdx;
        };
        this.selectTab = (idx = null) => {
            for (let i = 0, tab; (tab = this.tabs[i]); i = i + 1) {
                const select = i === idx;
                tab.setAttribute('tabindex', select ? 0 : -1);
                tab.setAttribute('aria-selected', select);
                this.panels[i].setAttribute('aria-hidden', !select);
            }
        };
        this.tabTitleClick = e => {
            if (e.target.classList.contains('title')) {
                this.selected = this.tabs.indexOf(e.target);
                e.target.focus();
            }
        };
        this.tabKeyDown = e => {
            let idx;
            switch (e.code) {
                case 'ArrowUp':
                case 'ArrowLeft':
                    e.preventDefault();
                    idx = this.selected - 1;
                    idx = idx < 0 ? this.tabs.length - 1 : idx;
                    this.tabs[idx].click();
                    break;
                case 'ArrowDown':
                case 'ArrowRight':
                    e.preventDefault();
                    idx = this.selected + 1;
                    this.tabs[idx % this.tabs.length].click();
                    break;
            }
        };
    }
    onSelectedChange(index) {
        this.selectTab(index);
    }
    componentDidLoad() {
        this.el.setAttribute('role', 'tablist');
        const tabItems = Array.from(this.el.querySelectorAll('.title'));
        const panelsSlot = Array.from(this.el.querySelectorAll('.panel'));
        this.tabs = tabItems;
        this.panels = panelsSlot;
        this.selected = this.findFirstSelectedTab();
        tabItems.forEach(item => {
            item.addEventListener('click', event => {
                event.preventDefault();
                this.tabTitleClick(event);
            });
            item.addEventListener('keydown', e => { this.tabKeyDown(e); });
            item.setAttribute('id', item.id);
            item.setAttribute('aria-controls', item.id + '-tab');
            for (const [index, panel] of this.panels.entries()) {
                panel.setAttribute('role', 'tabpanel');
                panel.setAttribute('aria-labelledby', item.textContent);
                panel.setAttribute('id', item.id + '-tab' + index);
            }
        });
    }
    componentDidUnload() {
        const tabItems = Array.from(this.el.querySelectorAll('.title'));
        tabItems.forEach(item => {
            item.removeEventListener('click', e => { this.tabTitleClick(e); });
        });
        tabItems.forEach(item => {
            item.removeEventListener('click', e => { this.tabKeyDown(e); });
        });
    }
    render() {
        return [
            h("snt-layout", { padding: "remove-sides" }, h("div", { class: "tab-wrapper" }, h("slot", null)))
        ];
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "selected": ["onSelectedChange"]
    }; }
    static get style() { return sntTabsCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-tabs",
        "$members$": {
            "selected": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sntVerticalTabsCss = "snt-vertical-tabs{display:-ms-flexbox;display:flex}.light-fill snt-vertical-tabs,snt-vertical-tabs.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-vertical-tabs,snt-vertical-tabs.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-vertical-tabs,snt-vertical-tabs.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-vertical-tabs,snt-vertical-tabs.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-vertical-tabs,snt-vertical-tabs.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}@media (max-width: 1023px){snt-vertical-tabs>snt-layout>.spacings{padding:0 !important}}snt-vertical-tabs .vertical-tab-items{list-style:none;text-align:left;padding-left:30px;margin-bottom:0;width:100%}snt-vertical-tabs .title{color:#323232;position:relative;text-decoration:none;cursor:pointer;background-color:transparent;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}snt-vertical-tabs .title:after{content:attr(data-text);content:attr(data-text)/\"\";height:0;visibility:hidden;overflow:hidden;speak:never;speak:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;font-family:\"Averta-Regular\", sans-serif}snt-vertical-tabs .title:before{content:\"\";position:absolute;width:100%;height:2px;bottom:-1px;left:0;background-color:#147582;visibility:hidden;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left;-webkit-transition:all 0.25s ease-in-out 0s;transition:all 0.25s ease-in-out 0s}snt-vertical-tabs .title:hover{color:#147582;font-family:\"Averta-ExtraBold\", sans-serif;text-decoration:none}snt-vertical-tabs .title[aria-selected=true]{text-decoration:none}snt-vertical-tabs .title[aria-selected=true]:before{background-color:#147582;visibility:visible;-webkit-transform:scaleX(1);transform:scaleX(1)}snt-vertical-tabs .title:focus{z-index:1;outline:2px solid #147582;outline-offset:5px}snt-vertical-tabs .panel{visibility:visible;width:100%;margin-right:-100%}snt-vertical-tabs .panel:focus{outline:1px solid #323232}snt-vertical-tabs .panel[aria-hidden=true]{visibility:hidden}snt-vertical-tabs .tab-wrapper{background-color:#ffffff;border-top:5px solid #147582;border-bottom:5px solid #147582;display:-ms-flexbox;display:flex;-ms-flex:1 0 auto;flex:1 0 auto;width:100%;clear:both;float:right;-ms-flex-direction:column;flex-direction:column}@media (min-width: 768px){snt-vertical-tabs .tab-wrapper{-ms-flex-direction:row;flex-direction:row}}snt-vertical-tabs .tab-wrapper .tab-header{width:100%;display:-ms-flexbox;display:flex;margin-bottom:0px;text-align:center;padding-right:0px;border-right:0;padding-top:26px;border-bottom:2px solid #f2f2f2}@media (min-width: 768px){snt-vertical-tabs .tab-wrapper .tab-header{width:270px;margin-top:40px;margin-bottom:40px;padding-top:0px;padding-right:15px;float:left;border-right:2px solid #f2f2f2;border-bottom:0}}snt-vertical-tabs .tab-wrapper .tab-header .tab-item{-ms-flex-positive:1;flex-grow:1;margin-bottom:20px;position:relative}snt-vertical-tabs .panel-wrapper{width:100%;padding:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (min-width: 768px){snt-vertical-tabs .panel-wrapper{width:75%}}@media (min-width: 576px){snt-vertical-tabs .panel-wrapper snt-ad .spacings{padding:0 !important}}snt-vertical-tabs .panel-wrapper .ad-panel{border:0 !important;padding:0;background:transparent !important;text-align:center}@media (min-width: 768px){snt-vertical-tabs .panel-wrapper .ad-panel{padding:40px 60px;text-align:left}}snt-vertical-tabs .panel-wrapper .ad-panel .icon{margin:0 auto;margin-bottom:40px;display:-ms-flexbox;display:flex;text-align:center}@media (min-width: 768px){snt-vertical-tabs .panel-wrapper .ad-panel .icon{padding:0;margin-bottom:0px;display:-ms-inline-flexbox;display:inline-flex}}snt-vertical-tabs .panel-wrapper .ad-panel h3{display:inline-block;margin-left:0px;margin-bottom:0px}@media (min-width: 768px){snt-vertical-tabs .panel-wrapper .ad-panel h3{margin-left:20px}}snt-vertical-tabs .panel-wrapper .ad-panel .content{margin-top:0px;margin-bottom:30px}@media (min-width: 768px){snt-vertical-tabs .panel-wrapper .ad-panel .content{margin-top:-10px}}snt-vertical-tabs .active-tab:after{border:solid transparent;content:\" \";height:0;width:0;position:absolute;right:5%;top:100%;pointer-events:none;border-color:rgba(136, 183, 213, 0);border-right-color:#147582;border-width:10px;margin-top:-20px}@media (min-width: 768px){snt-vertical-tabs .active-tab:after{right:0%}}@media (max-width: 576px){.combined-top snt-ad>snt-layout>.spacings{padding-top:40px !important}}";

class SntVerticalTabs {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.activeTabClass = 'active-tab';
        this.findFirstSelectedTab = () => {
            let selectedIdx;
            for (const [i, tab] of this.tabs.entries()) {
                tab.setAttribute('role', 'tab');
                if (i == 0) {
                    tab.setAttribute('tabindex', '0');
                }
                else {
                    tab.setAttribute('tabindex', '-1');
                }
                if (tab.classList.contains('selected')) {
                    tab.classList.remove('selected');
                    selectedIdx = i;
                }
            }
            return selectedIdx;
        };
        this.selectTab = (idx = null) => {
            for (let i = 0, tab; (tab = this.tabs[i]); i = i + 1) {
                const select = i === idx;
                tab.setAttribute('tabindex', select ? -1 : i + 1);
                tab.setAttribute('aria-selected', select);
                this.panels[i].setAttribute('aria-hidden', !select);
            }
        };
        this.tabTitleClick = e => {
            if (e.target.classList.contains('title')) {
                this.selected = this.tabs.indexOf(e.target);
                e.target.focus();
                //Set active states on paragraph tag
                const findAllParagraphs = this.el.querySelectorAll('p');
                findAllParagraphs.forEach(p => {
                    if (p.classList.contains(this.activeTabClass))
                        p.classList.remove(this.activeTabClass);
                });
                e.target.parentElement.classList.add(this.activeTabClass);
            }
        };
        this.tabKeyDown = e => {
            let idx = 0;
            switch (e.code) {
                case 'ArrowUp':
                case 'ArrowLeft':
                    e.preventDefault();
                    idx = this.selected - 1;
                    idx = idx < 0 ? this.tabs.length - 1 : idx;
                    this.tabs[idx].click();
                    this.tabs.forEach((e, i) => {
                        e.setAttribute('tabindex', '-1');
                        (i == idx) ? e.setAttribute('tabindex', '0') : false;
                    });
                    break;
                case 'ArrowDown':
                case 'ArrowRight':
                    e.preventDefault();
                    (this.selected != undefined) ? idx = this.selected + 1 : idx = 1;
                    if (isNaN(idx)) {
                        this.tabs[1].click();
                    }
                    else {
                        if (idx == this.tabs.length)
                            this.tabs[0].click();
                        if (idx < this.tabs.length)
                            this.tabs[idx].click();
                    }
                    this.tabs.forEach((e, i) => {
                        e.setAttribute('tabindex', '-1');
                        (i == idx) ? e.setAttribute('tabindex', '0') : false;
                    });
                    break;
                case 'Enter':
                    e.preventDefault();
                    e.target.click();
                    break;
            }
        };
    }
    onSelectedChange(index) {
        this.selectTab(index);
    }
    componentDidLoad() {
        function createVerticalMenu(title, id) {
            let li = document.createElement('li');
            li.classList.add('tab-item');
            li.setAttribute('role', 'tablist');
            li.innerHTML = `<p><a class="title" tabindex="-1" id=${id} data-text=${title}>${title}</a></p>`;
            return li;
        }
        if (this.el.querySelectorAll('snt-data').length > 0) {
            const verticalElement = this.el.querySelector('.vertical-tab-items');
            this.el.querySelectorAll('snt-data').forEach(function (el) {
                let { link } = JSON.parse(el.data);
                try {
                    verticalElement.appendChild(createVerticalMenu(link.title, link.id));
                }
                catch (e) {
                    console.log(e);
                }
            });
        }
        this.el.querySelectorAll('.panel-wrapper section')[0].setAttribute('aria-hidden', 'false');
        this.el.setAttribute('role', 'tablist');
        const tabItems = Array.from(this.el.querySelectorAll('.title'));
        const panelsSlot = Array.from(this.el.querySelectorAll('.panel'));
        this.tabs = tabItems;
        this.panels = panelsSlot;
        this.selected = this.findFirstSelectedTab();
        tabItems.forEach((item, i) => {
            item.addEventListener('click', event => {
                event.preventDefault();
                this.tabTitleClick(event);
            });
            item.addEventListener('keydown', e => { this.tabKeyDown(e); });
            item.setAttribute('id', item.id);
            item.setAttribute('aria-controls', item.id + '-tab');
            //adding active class to the first tab
            if (i === 0) {
                item.parentElement.classList.add(this.activeTabClass);
                item.setAttribute('aria-selected', 'true');
            }
            for (const [index, panel] of this.panels.entries()) {
                panel.setAttribute('role', 'tabpanel');
                panel.setAttribute('id', 'tab-' + index);
            }
        });
    }
    componentDidUnload() {
        const tabItems = Array.from(this.el.querySelectorAll('.title'));
        tabItems.forEach(item => {
            item.removeEventListener('click', e => { this.tabTitleClick(e); });
        });
        tabItems.forEach(item => {
            item.removeEventListener('click', e => { this.tabKeyDown(e); });
        });
    }
    render() {
        return [
            h("snt-layout", null, h("div", { class: "tab-wrapper" }, h("div", { class: "tab-header" }, h("ul", { class: "vertical-tab-items" })), h("slot", null)))
        ];
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "selected": ["onSelectedChange"]
    }; }
    static get style() { return sntVerticalTabsCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-vertical-tabs",
        "$members$": {
            "selected": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const sourceLinkComponentCss = "@charset \"UTF-8\";snt-source-link{display:inline-block}snt-source-link a{height:25px;font-size:14px;color:#323232;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border:1px solid #323232;border-radius:22px;padding:10px;position:relative;text-decoration:none}snt-source-link a .icon-new-window:after{content:\"\";font-size:1.02em !important;padding-left:5px;color:#323232;display:inline-block;position:relative}snt-source-link a .icon-new-window:before{content:\"\"}snt-source-link a:hover{color:#147582;border-color:#147582;-webkit-box-shadow:0 0 0 2px #147582;box-shadow:0 0 0 2px #147582}snt-source-link a:hover .icon-new-window:after{color:#147582}snt-source-link a:focus{outline:none}snt-source-link a:focus:after{content:\"\";display:block;position:absolute;top:-7px;bottom:-7px;left:-7px;right:-7px;border-radius:30px;border:1px solid #323232}snt-source-link .link-content{max-width:249px;display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}snt-source-link .full-content{max-width:265px;display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}";

class SourceLinkComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        let content;
        let title = AccessibilityUtils.getNewWindowTitle();
        let text = AccessibilityUtils.getNewWindowText();
        if (this.target === "_blank") {
            content = [
                h("span", { class: "link-content" }, h("slot", null)),
                h("span", { class: "icon-font icon-new-window", title: title }, h("span", { class: "sr-only" }, " ", text))
            ];
        }
        else {
            content = (h("span", { class: "full-content" }, h("slot", null)));
        }
        return (h("a", { href: this.href, target: this.target, "aria-label": this.ariaLabel }, content));
    }
    static get style() { return sourceLinkComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-source-link",
        "$members$": {
            "href": [513],
            "target": [513],
            "ariaLabel": [513, "aria-label"],
            "rel": [513]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["href", "href"], ["target", "target"], ["ariaLabel", "aria-label"], ["rel", "rel"]]
    }; }
}
SourceLinkComponent.TAG_NAME = "snt-source-link";

const sourceListComponentCss = "snt-source-list span.expand-icon{display:inline-block;height:16px;width:16px;position:relative;top:1px;margin-right:10px}snt-source-list button{position:relative;font-size:14px;font-family:inherit;border:0;padding:0;background-color:inherit}snt-source-list button:hover{text-decoration:underline;color:#147582}snt-source-list button:focus::after{-webkit-box-sizing:border-box;box-sizing:border-box;border:1px dashed #323232;content:\"\";right:100%;width:calc(100% + 10px);height:calc(100% + 4px);left:-5px;top:-2px;position:absolute}snt-source-list button:focus{outline:none;text-decoration:underline;color:#147582}snt-source-list .close{display:none}snt-source-list .open{display:block}snt-source-list .source-panel{padding-left:26px}snt-source-list snt-source-link:nth-child(n+1){margin-top:15px;margin-right:15px}";

class SourceListComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.RETURN = 13;
    }
    handleKeydown(event) {
        switch (event.keyCode) {
            case this.RETURN:
                this.toggleExpand();
                event.stopPropagation();
                event.preventDefault();
                break;
        }
    }
    toggleExpand() {
        if (this.buttonEl.getAttribute('aria-expanded') === 'true') {
            this.buttonEl.setAttribute('aria-expanded', 'false');
        }
        else {
            this.buttonEl.setAttribute('aria-expanded', 'true');
        }
        this.buttonEl.classList.toggle('expanded');
        this.toggleContent();
    }
    toggleContent() {
        this.panelEl.classList.toggle('open');
        this.panelEl.classList.toggle('close');
        this.iconEl.classList.toggle('icon-icon_legalAccordion_plus');
        this.iconEl.classList.toggle('icon-icon_legalAccordion_minus');
    }
    render() {
        return (h("snt-layout", null, h("button", { ref: (el) => (this.buttonEl = el), onKeyDown: this.handleKeydown.bind(this), onClick: this.toggleExpand.bind(this), "aria-expanded": "false", "aria-controls": this.panelId }, h("span", { ref: (el) => (this.iconEl = el), class: "expand-icon icon-font icon-icon_legalAccordion_plus" }), this.sourceHeading), h("div", { class: "source-panel close", ref: (el) => (this.panelEl = el), id: this.panelId }, h("slot", null))));
    }
    static get style() { return sourceListComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-source-list",
        "$members$": {
            "panelId": [1, "panel-id"],
            "sourceHeading": [1, "source-heading"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
SourceListComponent.TAG_NAME = "snt-source-list";

class SourceListExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("h1", null, "Source List"),
            h("snt-source-list", { "source-heading": "Interested in this articles sources?", "panel-id": "sources" }, h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://yahoo.com" }, "This is my second source that is much longer"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { href: "https://google.com" }, "This is my link"), h("snt-source-link", { target: "_blank", href: "https://google.com" }, "This is external"), h("snt-source-link", { target: "_blank", href: "https://yahoo.com" }, "This is my second source that is much longer"))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "source-list-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class StencilRouterPrompt {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.when = true;
        this.message = '';
    }
    enable(message) {
        if (this.unblock) {
            this.unblock();
        }
        if (this.history) {
            this.unblock = this.history.block(message);
        }
    }
    disable() {
        if (this.unblock) {
            this.unblock();
            this.unblock = undefined;
        }
    }
    componentWillLoad() {
        if (this.when) {
            this.enable(this.message);
        }
    }
    updateMessage(newMessage, prevMessage) {
        if (this.when) {
            if (!this.when || prevMessage !== newMessage) {
                this.enable(this.message);
            }
        }
        else {
            this.disable();
        }
    }
    componentDidUnload() {
        this.disable();
    }
    render() {
        return null;
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "message": ["updateMessage"],
        "when": ["updateMessage"]
    }; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "stencil-router-prompt",
        "$members$": {
            "when": [4],
            "message": [1],
            "history": [16],
            "unblock": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ActiveRouter.injectProps(StencilRouterPrompt, [
    'history',
]);

class TestimonialExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("h1", null, "Group Components"), h("br", null), h("testimonials-group", { class: "neutral-fill", "group-id": "group-carousel", "group-headline": "Testimonial" }, h("testimonial-quote", { "container-id": "test1", from: "Sameer S. from Toronto, Ontario" }, "We switched to Sonnet last year after 20 years of loyalty to another insurance company\u2026 it\u2019s so easy to make changes to our policy and someone is always at the ready to answer any of our questions. Great job Sonnet!"), h("testimonial-quote", { "container-id": "test2", from: "Sameer S. from Toronto, Ontario" }, "Second We switched to Sonnet last year after 20 years of loyalty to another insurance company\u2026 it\u2019s so easy to make changes to our policy and someone is always at the ready to answer any of our questions. Great job Sonnet!"), h("testimonial-quote", { "container-id": "test3", from: "Sameer S. from Toronto, Ontario" }, "Third Testimonials"), h("testimonial-quote", { "container-id": "test4", from: "Sameer S. from Toronto, Ontario" }, "Fourth Testimonials")), h("br", null), h("br", null), h("h1", null, "Single Component"), h("br", null), h("testimonials-group", { class: "neutral-fill", "group-id": "group-carousel", "group-headline": "Testimonial" }, h("testimonial-quote", { "container-id": "test4", from: "Sameer S. from Toronto, Ontario" }, "Fourth Testimonials"))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "testimonial-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TestimonialExample.TAG_NAME = "testimonial-example";

const testimonialsComponentCss = "testimonial-quote{color:#323232;background-color:#f8f8f8;}testimonial-quote.carousel{width:100%;display:-ms-flexbox;display:flex;position:relative}testimonial-quote .carousel-item{height:-webkit-max-content;height:-moz-max-content;height:max-content;min-height:100%}testimonial-quote .carousel-item .carousel-caption{left:0;right:0;position:relative}@media (max-width: 480px){testimonial-quote .carousel-item .carousel-caption{padding-bottom:0}}testimonial-quote .carousel-item blockquote,testimonial-quote .carousel-item p2{text-align:left;display:-ms-flexbox;display:flex}testimonial-quote .carousel-caption{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:208px}@media (min-width: 768px){testimonial-quote .carousel-caption{height:161px}}@media (min-width: 1024px){testimonial-quote .carousel-caption{height:136px}}@media (min-width: 1440px){testimonial-quote .carousel-caption{height:176px}}.light-fill testimonial-quote,testimonial-quote.light-fill{color:#323232;background-color:#d9f0f4}.neutral-fill testimonial-quote,testimonial-quote.neutral-fill{color:#323232;background-color:#f8f8f8}.dark-fill testimonial-quote,testimonial-quote.dark-fill{color:#ffffff;background-color:#147582}.white-fill testimonial-quote,testimonial-quote.white-fill{color:#323232;background-color:#ffffff}testimonials-group{display:block;color:#323232;background-color:#f8f8f8;}.light-fill testimonials-group,testimonials-group.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill testimonials-group,testimonials-group.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill testimonials-group,testimonials-group.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill testimonials-group,testimonials-group.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill testimonials-group,testimonials-group.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}.light-fill testimonials-group .carousel-control-next,.light-fill testimonials-group .carousel-control-prev,testimonials-group.light-fill .carousel-control-next,testimonials-group.light-fill .carousel-control-prev{border-color:#323232}.light-fill testimonials-group .carousel-control-prev-icon,.light-fill testimonials-group .carousel-control-next-icon,testimonials-group.light-fill .carousel-control-prev-icon,testimonials-group.light-fill .carousel-control-next-icon{fill:#323232}.light-fill testimonials-group .carousel-indicators li,testimonials-group.light-fill .carousel-indicators li{border-color:#323232}.light-fill testimonials-group .carousel-indicators .active,testimonials-group.light-fill .carousel-indicators .active{background-color:#323232}.light-fill testimonials-group i.arrows,testimonials-group.light-fill i.arrows{border-color:#323232}.neutral-fill testimonials-group .carousel-control-next,.neutral-fill testimonials-group .carousel-control-prev,testimonials-group.neutral-fill .carousel-control-next,testimonials-group.neutral-fill .carousel-control-prev{border-color:#323232}.neutral-fill testimonials-group .carousel-control-prev-icon,.neutral-fill testimonials-group .carousel-control-next-icon,testimonials-group.neutral-fill .carousel-control-prev-icon,testimonials-group.neutral-fill .carousel-control-next-icon{fill:#323232}.neutral-fill testimonials-group .carousel-indicators li,testimonials-group.neutral-fill .carousel-indicators li{border-color:#323232}.neutral-fill testimonials-group .carousel-indicators .active,testimonials-group.neutral-fill .carousel-indicators .active{background-color:#323232}.neutral-fill testimonials-group i.arrows,testimonials-group.neutral-fill i.arrows{border-color:#323232}.dark-fill testimonials-group .carousel-control-next,.dark-fill testimonials-group .carousel-control-prev,testimonials-group.dark-fill .carousel-control-next,testimonials-group.dark-fill .carousel-control-prev{border-color:#ffffff}.dark-fill testimonials-group .carousel-control-prev-icon,.dark-fill testimonials-group .carousel-control-next-icon,testimonials-group.dark-fill .carousel-control-prev-icon,testimonials-group.dark-fill .carousel-control-next-icon{fill:#ffffff}.dark-fill testimonials-group .carousel-indicators li,testimonials-group.dark-fill .carousel-indicators li{border-color:#ffffff}.dark-fill testimonials-group .carousel-indicators .active,testimonials-group.dark-fill .carousel-indicators .active{background-color:#ffffff}.dark-fill testimonials-group i.arrows,testimonials-group.dark-fill i.arrows{border-color:#ffffff}.white-fill testimonials-group .carousel-control-next,.white-fill testimonials-group .carousel-control-prev,testimonials-group.white-fill .carousel-control-next,testimonials-group.white-fill .carousel-control-prev{border-color:#323232}.white-fill testimonials-group .carousel-control-prev-icon,.white-fill testimonials-group .carousel-control-next-icon,testimonials-group.white-fill .carousel-control-prev-icon,testimonials-group.white-fill .carousel-control-next-icon{fill:#ffffff}.white-fill testimonials-group .carousel-indicators li,testimonials-group.white-fill .carousel-indicators li{border-color:#323232}.white-fill testimonials-group .carousel-indicators .active,testimonials-group.white-fill .carousel-indicators .active{background-color:#ffffff}.white-fill testimonials-group i.arrows,testimonials-group.white-fill i.arrows{border-color:#323232}testimonials-group .testimonial-controls{position:relative;height:60px;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}@media (max-width: 480px){testimonials-group .testimonial-controls{-ms-flex-pack:center;justify-content:center;height:30px}}testimonials-group .carousel-control-next,testimonials-group .carousel-control-prev{z-index:9;width:45px;height:45px;opacity:1;position:relative;border:3px solid;border-radius:50%;cursor:pointer;border-color:#323232}@media (max-width: 480px){testimonials-group .carousel-control-next,testimonials-group .carousel-control-prev{display:none}}testimonials-group .carousel-control-prev-icon,testimonials-group .carousel-control-next-icon{fill:#323232;background:none}testimonials-group .carousel-control-prev-icon{-webkit-transform:translate(3px, 2px);transform:translate(3px, 2px)}testimonials-group .carousel-control-next-icon{-webkit-transform:translate(-2px, 2px) rotateY(360deg);transform:translate(-2px, 2px) rotateY(360deg)}@media (min-width: 1024px){testimonials-group .carousel-control-prev-icon{-webkit-transform:translate(3px, 0px);transform:translate(3px, 0px)}testimonials-group .carousel-control-next-icon{-webkit-transform:translate(-2px, 0px) rotateY(360deg);transform:translate(-2px, 0px) rotateY(360deg)}}testimonials-group .carousel-indicators{position:relative;margin-right:1%;margin-left:1%;bottom:-20px;z-index:1}testimonials-group .carousel-indicators .active{background-color:#323232}testimonials-group .carousel-indicators li{width:6px;height:6px;cursor:pointer;border:3px solid;border-color:#323232;background:transparent;border-radius:50%;opacity:1;margin-left:7px;margin-right:7px}testimonials-group .full_container{width:100%}testimonials-group i.arrows{border-color:#323232;border-style:solid;border-width:0 3px 3px 0;display:inline-block;padding:6px}testimonials-group .left{transform:rotate(135deg);-webkit-transform:rotate(135deg)}testimonials-group .right{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}@media (max-width: 480px){testimonials-group{}}testimonials-group .carousel-slider-wrap{overflow-x:hidden}testimonials-group .carousel-inner{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;--carouselCount:1;min-width:100%;width:calc(var(--carouselCount) * 100%)}testimonials-group .carousel-inner .carousel-item{min-width:100%;width:calc(100% / var(--carouselCount));pointer-events:none;-webkit-transform-origin:0%;transform-origin:0%;-webkit-transition:0.6s all cubic-bezier(0.6, 0, 0.35, 1);transition:0.6s all cubic-bezier(0.6, 0, 0.35, 1)}h2.testimonial-title{margin-bottom:30px}@media (max-width: 480px){h2.testimonial-title{margin-bottom:15px}}";

class TestimonialsComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        if (this.element.querySelector('blockquote').innerHTML.length < 0) {
            throw new Error('Cannot have an empty testimonial');
        }
    }
    componentWillLoad() {
        (this.element.parentElement.classList.contains('carousel-inner'))
            ? this.single = false
            : this.single = true;
    }
    render() {
        if (this.single) {
            return (h(Host, { id: this.containerId, class: "carousel slide", "data-ride": "carousel" }, h("div", { class: "container" }, h("h2", { class: "testimonial-title" }, this.headline), h("div", { class: "carousel-inner" }, h("div", { class: "carousel-item active" }, h("div", { class: "carousel-caption " }, h("div", { class: "carousel-quote" }, h("blockquote", null, h("slot", null)), h("p2", null, this.from))))))));
        }
        else {
            return (h(Host, { class: "carousel-item", id: this.containerId }, h("div", { class: "carousel-caption" }, h("div", { class: "carousel-quote" }, h("blockquote", null, h("slot", null)), h("p2", null, this.from)))));
        }
    }
    get element() { return getElement(this); }
    static get style() { return testimonialsComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "testimonial-quote",
        "$members$": {
            "containerId": [1, "container-id"],
            "fill": [1],
            "from": [1],
            "headline": [1],
            "single": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TestimonialsComponent.TAG_NAME = "testimonial-quote";

const testimonialsComponentCss$1 = "testimonial-quote{color:#323232;background-color:#f8f8f8;}testimonial-quote.carousel{width:100%;display:-ms-flexbox;display:flex;position:relative}testimonial-quote .carousel-item{height:-webkit-max-content;height:-moz-max-content;height:max-content;min-height:100%}testimonial-quote .carousel-item .carousel-caption{left:0;right:0;position:relative}@media (max-width: 480px){testimonial-quote .carousel-item .carousel-caption{padding-bottom:0}}testimonial-quote .carousel-item blockquote,testimonial-quote .carousel-item p2{text-align:left;display:-ms-flexbox;display:flex}testimonial-quote .carousel-caption{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:208px}@media (min-width: 768px){testimonial-quote .carousel-caption{height:161px}}@media (min-width: 1024px){testimonial-quote .carousel-caption{height:136px}}@media (min-width: 1440px){testimonial-quote .carousel-caption{height:176px}}.light-fill testimonial-quote,testimonial-quote.light-fill{color:#323232;background-color:#d9f0f4}.neutral-fill testimonial-quote,testimonial-quote.neutral-fill{color:#323232;background-color:#f8f8f8}.dark-fill testimonial-quote,testimonial-quote.dark-fill{color:#ffffff;background-color:#147582}.white-fill testimonial-quote,testimonial-quote.white-fill{color:#323232;background-color:#ffffff}testimonials-group{display:block;color:#323232;background-color:#f8f8f8;}.light-fill testimonials-group,testimonials-group.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill testimonials-group,testimonials-group.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill testimonials-group,testimonials-group.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill testimonials-group,testimonials-group.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill testimonials-group,testimonials-group.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}.light-fill testimonials-group .carousel-control-next,.light-fill testimonials-group .carousel-control-prev,testimonials-group.light-fill .carousel-control-next,testimonials-group.light-fill .carousel-control-prev{border-color:#323232}.light-fill testimonials-group .carousel-control-prev-icon,.light-fill testimonials-group .carousel-control-next-icon,testimonials-group.light-fill .carousel-control-prev-icon,testimonials-group.light-fill .carousel-control-next-icon{fill:#323232}.light-fill testimonials-group .carousel-indicators li,testimonials-group.light-fill .carousel-indicators li{border-color:#323232}.light-fill testimonials-group .carousel-indicators .active,testimonials-group.light-fill .carousel-indicators .active{background-color:#323232}.light-fill testimonials-group i.arrows,testimonials-group.light-fill i.arrows{border-color:#323232}.neutral-fill testimonials-group .carousel-control-next,.neutral-fill testimonials-group .carousel-control-prev,testimonials-group.neutral-fill .carousel-control-next,testimonials-group.neutral-fill .carousel-control-prev{border-color:#323232}.neutral-fill testimonials-group .carousel-control-prev-icon,.neutral-fill testimonials-group .carousel-control-next-icon,testimonials-group.neutral-fill .carousel-control-prev-icon,testimonials-group.neutral-fill .carousel-control-next-icon{fill:#323232}.neutral-fill testimonials-group .carousel-indicators li,testimonials-group.neutral-fill .carousel-indicators li{border-color:#323232}.neutral-fill testimonials-group .carousel-indicators .active,testimonials-group.neutral-fill .carousel-indicators .active{background-color:#323232}.neutral-fill testimonials-group i.arrows,testimonials-group.neutral-fill i.arrows{border-color:#323232}.dark-fill testimonials-group .carousel-control-next,.dark-fill testimonials-group .carousel-control-prev,testimonials-group.dark-fill .carousel-control-next,testimonials-group.dark-fill .carousel-control-prev{border-color:#ffffff}.dark-fill testimonials-group .carousel-control-prev-icon,.dark-fill testimonials-group .carousel-control-next-icon,testimonials-group.dark-fill .carousel-control-prev-icon,testimonials-group.dark-fill .carousel-control-next-icon{fill:#ffffff}.dark-fill testimonials-group .carousel-indicators li,testimonials-group.dark-fill .carousel-indicators li{border-color:#ffffff}.dark-fill testimonials-group .carousel-indicators .active,testimonials-group.dark-fill .carousel-indicators .active{background-color:#ffffff}.dark-fill testimonials-group i.arrows,testimonials-group.dark-fill i.arrows{border-color:#ffffff}.white-fill testimonials-group .carousel-control-next,.white-fill testimonials-group .carousel-control-prev,testimonials-group.white-fill .carousel-control-next,testimonials-group.white-fill .carousel-control-prev{border-color:#323232}.white-fill testimonials-group .carousel-control-prev-icon,.white-fill testimonials-group .carousel-control-next-icon,testimonials-group.white-fill .carousel-control-prev-icon,testimonials-group.white-fill .carousel-control-next-icon{fill:#ffffff}.white-fill testimonials-group .carousel-indicators li,testimonials-group.white-fill .carousel-indicators li{border-color:#323232}.white-fill testimonials-group .carousel-indicators .active,testimonials-group.white-fill .carousel-indicators .active{background-color:#ffffff}.white-fill testimonials-group i.arrows,testimonials-group.white-fill i.arrows{border-color:#323232}testimonials-group .testimonial-controls{position:relative;height:60px;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}@media (max-width: 480px){testimonials-group .testimonial-controls{-ms-flex-pack:center;justify-content:center;height:30px}}testimonials-group .carousel-control-next,testimonials-group .carousel-control-prev{z-index:9;width:45px;height:45px;opacity:1;position:relative;border:3px solid;border-radius:50%;cursor:pointer;border-color:#323232}@media (max-width: 480px){testimonials-group .carousel-control-next,testimonials-group .carousel-control-prev{display:none}}testimonials-group .carousel-control-prev-icon,testimonials-group .carousel-control-next-icon{fill:#323232;background:none}testimonials-group .carousel-control-prev-icon{-webkit-transform:translate(3px, 2px);transform:translate(3px, 2px)}testimonials-group .carousel-control-next-icon{-webkit-transform:translate(-2px, 2px) rotateY(360deg);transform:translate(-2px, 2px) rotateY(360deg)}@media (min-width: 1024px){testimonials-group .carousel-control-prev-icon{-webkit-transform:translate(3px, 0px);transform:translate(3px, 0px)}testimonials-group .carousel-control-next-icon{-webkit-transform:translate(-2px, 0px) rotateY(360deg);transform:translate(-2px, 0px) rotateY(360deg)}}testimonials-group .carousel-indicators{position:relative;margin-right:1%;margin-left:1%;bottom:-20px;z-index:1}testimonials-group .carousel-indicators .active{background-color:#323232}testimonials-group .carousel-indicators li{width:6px;height:6px;cursor:pointer;border:3px solid;border-color:#323232;background:transparent;border-radius:50%;opacity:1;margin-left:7px;margin-right:7px}testimonials-group .full_container{width:100%}testimonials-group i.arrows{border-color:#323232;border-style:solid;border-width:0 3px 3px 0;display:inline-block;padding:6px}testimonials-group .left{transform:rotate(135deg);-webkit-transform:rotate(135deg)}testimonials-group .right{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}@media (max-width: 480px){testimonials-group{}}testimonials-group .carousel-slider-wrap{overflow-x:hidden}testimonials-group .carousel-inner{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;--carouselCount:1;min-width:100%;width:calc(var(--carouselCount) * 100%)}testimonials-group .carousel-inner .carousel-item{min-width:100%;width:calc(100% / var(--carouselCount));pointer-events:none;-webkit-transform-origin:0%;transform-origin:0%;-webkit-transition:0.6s all cubic-bezier(0.6, 0, 0.35, 1);transition:0.6s all cubic-bezier(0.6, 0, 0.35, 1)}h2.testimonial-title{margin-bottom:30px}@media (max-width: 480px){h2.testimonial-title{margin-bottom:15px}}";

var __awaiter$t = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const TOGGLE_CLASSES = {
    active: 'active',
    show: 'show',
    inactive: 'inactive',
    timing: 600
};
class TestimonialsGroupComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.showSlide = createEvent(this, "showSlide", 7);
        this.hideSlide = createEvent(this, "hideSlide", 7);
        this.selected = 0;
        this.slideSelector = '.carousel-item';
        this.indicatorSelector = '[data-slide-to]';
        this.prevSelector = '[data-slide="prev"]';
        this.nextSelector = '[data-slide="next"]';
        this.cycleType = 'hover';
        this.ride = false;
        this.wrap = true;
        this.listeners = {};
        this.currentSlide = 0;
        this.x0 = null; //intial click/touch position on testimonial
    }
    unify(e) { return e.changedTouches ? e.changedTouches[0] : e; }
    ;
    lock(e) {
        this.x0 = this.unify(e).clientX;
    }
    ;
    move(e) {
        if (this.x0 || this.x0 === 0) {
            let dx = this.unify(e).clientX - this.x0, s = Math.sign(dx);
            if ((this.currentSlide > 0 || s < 0) && (this.currentSlide < this.slideElements.length - 1 || s > 0)) {
                this.currentSlide -= s;
                if (s == -1) {
                    this.onShow(this.currentSlide);
                }
                else if (s == 1) {
                    this.onShow(this.currentSlide);
                }
            }
            this.x0 = null;
        }
    }
    ;
    componentDidLoad() {
        this._carouselContainer = this.element.querySelector('.carousel-inner');
        this._carouselContainer.addEventListener('mousedown', this.lock.bind(this), false);
        this._carouselContainer.addEventListener('touchstart', this.lock.bind(this), false);
        this._carouselContainer.addEventListener('mouseup', this.move.bind(this), false);
        this._carouselContainer.addEventListener('touchend', this.move.bind(this), false);
        this.element.querySelector('.carousel-item').classList.add('active');
        this.currentSlide = this.selected || 0;
        this.getSlideElements();
        this.getIndicatorElements();
        this.getPrevNextButtons();
        if (this.currentSlide > 0) {
            this.onShow(this.selected);
        }
    }
    componentDidUnload() {
        if (this.slideElements && this.slideElements.length) {
            this.slideElements.forEach((element, i) => {
                element.removeEventListener('click', this.listeners[i]);
            });
        }
        if (this.prevElement && this.prevListener) {
            this.prevElement.removeEventListener('click', this.prevListener);
        }
        if (this.nextElement && this.nextListener) {
            this.nextElement.removeEventListener('click', this.nextListener);
        }
    }
    getPrevNextButtons() {
        this.prevElement = this.element.querySelector(this.prevSelector);
        this.nextElement = this.element.querySelector(this.nextSelector);
        if (this.prevElement) {
            this.prevListener = this.addClickHandler(this.prevElement, () => this.prev());
        }
        if (this.nextElement) {
            this.nextListener = this.addClickHandler(this.nextElement, () => this.next());
        }
    }
    getSlideElements() {
        this.slideElements = this.element.querySelectorAll(this.slideSelector);
    }
    getIndicatorElements() {
        this.indicatorElements = this.element.querySelectorAll(this.indicatorSelector);
        this.indicatorElements.forEach((element, i) => {
            this.indicatorClickHandler(element, i);
        });
    }
    addClickHandler(element, fn = this.next) {
        if (!element)
            return;
        let eventHandler = () => {
            if (fn) {
                fn();
            }
        };
        element.addEventListener('click', eventHandler);
        return eventHandler;
    }
    indicatorClickHandler(element, index) {
        if (!element)
            return;
        let eventHandler = () => {
            this.onShow(index);
        };
        element.addEventListener('click', eventHandler);
        this.listeners[index] = eventHandler;
    }
    addActiveClass(element) {
        setTimeout(() => { element.classList.add(TOGGLE_CLASSES.active); }, TOGGLE_CLASSES.timing);
        {
            element.classList.remove(TOGGLE_CLASSES.inactive);
        }
    }
    removeActiveClass(elements = this.slideElements) {
        elements.forEach(item => {
            setTimeout(() => { item.classList.remove(TOGGLE_CLASSES.active); }, TOGGLE_CLASSES.timing);
        });
    }
    onShow(index = 0) {
        return __awaiter$t(this, void 0, void 0, function* () {
            this.removeActiveClass();
            if (this.indicatorElements && this.indicatorElements.length) {
                this.removeActiveClass(this.indicatorElements);
                this.addActiveClass(this.indicatorElements[index]);
            }
            this.indicatorClickHandler(this.slideElements[index], index);
            this.addActiveClass(this.slideElements[index]);
            this.currentSlide = index;
            this.showSlide.emit({
                current: this.currentSlide,
                element: this.slideElements[index]
            });
        });
    }
    onHide(index = 0) {
        return __awaiter$t(this, void 0, void 0, function* () {
            this.removeActiveClass();
            if (this.indicatorElements && this.indicatorElements.length) {
                this.removeActiveClass(this.indicatorElements);
            }
            this.hideSlide.emit({
                current: this.currentSlide,
                element: this.slideElements[index]
            });
            this.currentSlide = 0;
        });
    }
    next() {
        return __awaiter$t(this, void 0, void 0, function* () {
            if (this.slideElements && this.slideElements.length - 1 <= this.currentSlide) {
                this.onShow(0);
            }
            else {
                this.onShow(this.currentSlide + 1);
            }
        });
    }
    prev() {
        return __awaiter$t(this, void 0, void 0, function* () {
            if (this.currentSlide <= 0) ;
            else {
                this.onShow(this.currentSlide - 1);
            }
        });
    }
    render() {
        let testimonials = Array.from(this.element.querySelectorAll(TestimonialsComponent.TAG_NAME));
        return (h(Host, { id: this.groupId, class: "carousel slide", "data-ride": "carousel" }, h("div", { class: "full_container" }, h("snt-layout", null, h("h2", { class: "testimonial-title" }, this.groupHeadline), h("div", { class: "carousel-slider-wrap" }, h("div", { class: "carousel-inner" }, h("slot", null))), h("div", { class: "testimonial-controls " + (testimonials.length > 1 ? '' : 'd-none') }, h("a", { class: "carousel-control-prev", href: "javascript:void(0);", role: "button", "data-slide": "prev" }, h("span", { class: "carousel-control-prev-icon", "aria-hidden": "true" }, h("i", { class: "arrows left" })), h("span", { class: "sr-only" }, "Previous")), h("ol", { class: "carousel-indicators" }, testimonials.map((_elem, index) => h("li", { "data-target": "#" + this.groupId, "data-slide-to": index, class: (index == 0) ? 'active' : '' }))), h("a", { class: "carousel-control-next", href: "javascript:void(0);", role: "button", "data-slide": "next" }, h("span", { class: "carousel-control-next-icon", "aria-hidden": "true" }, h("i", { class: "arrows right" })), h("span", { class: "sr-only" }, "Next")))))));
    }
    get element() { return getElement(this); }
    static get style() { return testimonialsComponentCss$1; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "testimonials-group",
        "$members$": {
            "groupId": [1, "group-id"],
            "groupHeadline": [1, "group-headline"],
            "selected": [2],
            "slideSelector": [1, "slide-selector"],
            "indicatorSelector": [1, "indicator-selector"],
            "prevSelector": [1, "prev-selector"],
            "nextSelector": [1, "next-selector"],
            "cycleType": [8, "cycle-type"],
            "ride": [4],
            "wrap": [4],
            "onShow": [64],
            "onHide": [64],
            "next": [64],
            "prev": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const threeColumnComponentCss = "snt-three-column .flex-row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}snt-three-column .column{display:-ms-flexbox;display:flex;-ms-flex:0 0 100%;flex:0 0 100%;-ms-flex-pack:center;justify-content:center}@media (max-width: 767px){snt-three-column .column:not(:first-child){margin-top:26px}}snt-three-column .column>*{display:-ms-flexbox;display:flex;width:100%}snt-three-column snt-layout[viewport=medium] .column{margin-top:0px;-ms-flex:0 0 50%;flex:0 0 50%}snt-three-column snt-layout[viewport=medium] .column:nth-child(odd){-ms-flex-pack:start;justify-content:flex-start}snt-three-column snt-layout[viewport=medium] .column:nth-child(even){-ms-flex-pack:end;justify-content:flex-end}snt-three-column snt-layout[viewport=medium] .column:nth-child(n+3){margin-top:26px}snt-three-column snt-layout[viewport=medium] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 13px)}snt-three-column snt-layout[viewport=medium] .column>*:first-child{display:-ms-flexbox;display:flex;width:calc(100% - 13px)}snt-three-column snt-layout[viewport=large] .column{margin-top:0px;-ms-flex:0 0 33.3%;flex:0 0 33.3%}snt-three-column snt-layout[viewport=large] .column:first-child{-ms-flex-pack:start;justify-content:flex-start}snt-three-column snt-layout[viewport=large] .column:last-child{-ms-flex-pack:end;justify-content:flex-end}snt-three-column snt-layout[viewport=large] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 20px)}snt-three-column snt-layout[viewport=extra-large] .column{margin-top:0px;-ms-flex:0 0 33.3%;flex:0 0 33.3%}snt-three-column snt-layout[viewport=extra-large] .column:first-child{-ms-flex-pack:start;justify-content:flex-start}snt-three-column snt-layout[viewport=extra-large] .column:last-child{-ms-flex-pack:end;justify-content:flex-end}snt-three-column snt-layout[viewport=extra-large] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 20px)}snt-three-column.neutral-fill snt-layout,.neutral-fill snt-three-column snt-layout{background-color:#ffffff}snt-three-column.light-fill snt-layout,.light-fill snt-three-column snt-layout{background-color:#ffffff}snt-three-column.float-fill snt-layout,.float-fill snt-three-column snt-layout{background-color:#f8f8f8}snt-three-column slot{display:-ms-flexbox;display:flex}snt-three-column .flex-row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}snt-three-column .column{display:-ms-flexbox;display:flex;-ms-flex:0 0 100%;flex:0 0 100%;-ms-flex-pack:center;justify-content:center}snt-three-column .column:not(:first-child){margin-top:26px}snt-three-column .column>*{display:-ms-flexbox;display:flex;width:100%}";

class ThreeColumnComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    onResize(event) {
        const viewport = event.detail.viewport;
        this.leftColumn.setAttribute('viewport', viewport);
        this.centerColumn.setAttribute('viewport', viewport);
        this.rightColumn.setAttribute('viewport', viewport);
    }
    componentDidLoad() {
        this.registerChildren(this.leftColumn);
        this.registerChildren(this.centerColumn);
        this.registerChildren(this.rightColumn);
    }
    registerChildren(column) {
        column.childNodes.forEach((childEl) => {
            if (childEl.tagName === 'SNT-ICON-COPY') {
                childEl.registerViewport(this.layoutEl);
            }
        });
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("snt-layout", { ref: (el) => this.layoutEl = el }, h("div", { class: "flex-row" }, h("div", { class: "column", ref: el => this.leftColumn = el }, h("slot", { name: "left" })), h("div", { class: "column", ref: el => this.centerColumn = el }, h("slot", { name: "center" })), h("div", { class: "column", ref: el => this.rightColumn = el }, h("slot", { name: "right" }))))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return threeColumnComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-three-column",
        "$members$": {
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": [[16, "viewportChanged", "onResize"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}
ThreeColumnComponent.TAG_NAME = "snt-three-column";

const threeColumnMixedComponentCss = "snt-three-column-mixed .row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch}snt-three-column-mixed .column{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex:1 0 100%;flex:1 0 100%;max-width:100%;margin-bottom:26px}snt-three-column-mixed .last-row{margin-bottom:0px}snt-three-column-mixed .column.row-start>*{-ms-flex-item-align:start;align-self:flex-start}snt-three-column-mixed .column.row-end>*{-ms-flex-item-align:end;align-self:flex-end}snt-three-column-mixed .d-none{display:none}snt-three-column-mixed snt-icon-copy{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}snt-three-column-mixed .column snt-image-column{display:none}snt-three-column-mixed snt-image img{position:absolute;top:0;height:100%;width:100%;-o-object-fit:cover;object-fit:cover}snt-three-column-mixed snt-image-column .image-panel{position:relative;width:100%;overflow:hidden}snt-three-column-mixed snt-action-button{width:100%}snt-three-column-mixed snt-action-button snt-button{width:100%}snt-three-column-mixed snt-action-button snt-button button{width:100% !important}snt-three-column-mixed snt-blog snt-image img{position:relative;top:unset}snt-three-column-mixed snt-layout[viewport=medium] .column snt-image-column{display:none;margin-bottom:0px}snt-three-column-mixed snt-layout[viewport=medium] .column{-ms-flex:1 0 50%;flex:1 0 50%;max-width:50%;margin-bottom:30px}snt-three-column-mixed snt-layout[viewport=medium] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 15px)}snt-three-column-mixed snt-layout[viewport=medium] .last-row{margin-bottom:0px}snt-three-column-mixed snt-layout[viewport=large] .column{-ms-flex:1 0 33.33%;flex:1 0 33.33%;max-width:33.33%;margin-bottom:30px}snt-three-column-mixed snt-layout[viewport=large] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 20px)}snt-three-column-mixed snt-layout[viewport=large] .column:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-three-column-mixed snt-layout[viewport=large] .column:nth-child(3n+2)>*{-ms-flex-item-align:center;align-self:center}snt-three-column-mixed snt-layout[viewport=large] .column snt-image-column{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}snt-three-column-mixed snt-layout[viewport=large] .last-row{margin-bottom:0px}snt-three-column-mixed snt-layout[viewport=extra-large] .column{-ms-flex:1 0 33.33%;flex:1 0 33.33%;max-width:33.33%;margin-bottom:30px}snt-three-column-mixed snt-layout[viewport=extra-large] .column>*{display:-ms-flexbox;display:flex;width:calc(100% - 20px)}snt-three-column-mixed snt-layout[viewport=extra-large] .column:nth-child(3n)>*{-ms-flex-item-align:end;align-self:flex-end}snt-three-column-mixed snt-layout[viewport=extra-large] .column:nth-child(3n+2)>*{-ms-flex-item-align:center;align-self:center}snt-three-column-mixed snt-layout[viewport=extra-large] .column snt-image-column{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}snt-three-column-mixed snt-layout[viewport=extra-large] .last-row{margin-bottom:0px}snt-three-column-mixed.neutral-fill snt-layout,.neutral-fill snt-three-column-mixed snt-layout{background-color:#ffffff}snt-three-column-mixed.light-fill snt-layout,.light-fill snt-three-column-mixed snt-layout{background-color:#ffffff}snt-three-column-mixed.float-fill snt-layout,.float-fill snt-three-column-mixed snt-layout{background-color:#f8f8f8}";

class ThreeColumnComponent$1 {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    componentDidLoad() {
        this.registerChildren();
    }
    registerChildren() {
        this.flexGrid.childNodes.forEach((childEl) => {
            if (childEl.classList && childEl.classList.contains('column')) {
                childEl.childNodes.forEach((columnChildEl) => {
                    if (columnChildEl.tagName === 'SNT-ICON-COPY') {
                        columnChildEl.registerViewport(this.layoutEl);
                    }
                });
            }
        });
    }
    onResize(event) {
        const viewport = event.detail.viewport;
        Array.from(this.flexGrid.children).forEach((child) => {
            child.setAttribute('viewport', viewport);
        });
        this.toggleImages(viewport);
        this.tagLastRow(viewport);
        this.setStartAndEnd(viewport);
    }
    toggleImages(viewport) {
        if (viewport == 'medium' || viewport == 'small') {
            this.hostElement.querySelectorAll('.column').forEach((item) => {
                if (item.contains(item.querySelector('snt-image-column'))) {
                    item.classList.add('d-none');
                }
            });
        }
        else {
            this.hostElement.querySelectorAll('.column').forEach((item) => {
                if (item.classList.contains('d-none')) {
                    item.classList.remove('d-none');
                }
            });
        }
    }
    tagLastRow(viewport) {
        const columnCount = {
            'extra-small': 1,
            'small': 1,
            'medium': 2,
            'large': 3,
            'extra-large': 3
        };
        this.hostElement.querySelectorAll('.column').forEach((containerEl) => {
            containerEl.classList.remove('last-row');
        });
        const columnElements = this.hostElement.querySelectorAll('.column:not(.d-none)');
        const numberOfColumnsInLastRow = columnElements.length % columnCount[viewport] === 0
            ? columnCount[viewport]
            : columnElements.length % columnCount[viewport];
        const startingElement = columnElements.length - numberOfColumnsInLastRow;
        for (let index = startingElement; index < columnElements.length; index++) {
            columnElements[index].classList.add('last-row');
        }
    }
    setStartAndEnd(viewport) {
        this.hostElement.querySelectorAll('.column').forEach((containerEl) => {
            containerEl.classList.remove('row-start');
            containerEl.classList.remove('row-end');
        });
        if (viewport !== 'medium') {
            return;
        }
        else {
            const columnElements = this.hostElement.querySelectorAll('.column:not(.d-none)');
            for (let index = 0; index < columnElements.length; index++) {
                if (index % 2 === 0) {
                    columnElements[index].classList.add('row-start');
                }
                else {
                    columnElements[index].classList.add('row-end');
                }
            }
        }
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("snt-layout", { ref: (el) => this.layoutEl = el }, h("div", { class: "row", ref: el => this.flexGrid = el }, h("slot", null)))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return threeColumnMixedComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-three-column-mixed",
        "$members$": {
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": [[16, "viewportChanged", "onResize"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}
ThreeColumnComponent$1.TAG_NAME = "snt-three-column-mixed";

class ThreeColumnExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("h1", null, "Three column text"), h("snt-three-column", null, h("div", { slot: "left" }, "First"), h("div", { slot: "center" }, "Second"), h("div", { slot: "right" }, "Third")), h("br", null), h("h1", null, "Three column blog post"), h("snt-three-column", null, h("div", { slot: "left" }, h("snt-blog", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-desktop-1x.jpg", titleText: "What do you want to know about landlord insurance. I have a longer title and really really really really long", tagText: "AT HOME", timeToRead: "4 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" })), h("div", { slot: "center" }, h("snt-blog", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-desktop-1x.jpg", titleText: "What do you want to know about landlord insurance", tagText: "AT HOME", timeToRead: "4 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" })), h("div", { slot: "right" }, h("snt-blog", { imgSrc: "https://www.sonnet.ca/_Sonnet/images/hero-banner/group/group-desktop-1x.jpg", titleText: "Short title", tagText: "AT HOME", timeToRead: "4 min read", blogLink: "https://www.sonnet.ca/blog/what-you-need-to-know-about-landlord-insurance" }))), h("br", null), h("h1", null, "Three column icon copy"), h("snt-three-column", null, h("snt-icon-copy", { slot: "left", properties: '{\r\n                            "smallIconUrl": "",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit")), h("snt-icon-copy", { slot: "center", properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")), h("snt-icon-copy", { slot: "right", properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam."))), h("br", null), h("h1", null, "Three column icon copy center copy"), h("div", { class: "center" }, h("snt-three-column", null, h("snt-icon-copy", { slot: "left", properties: '{\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/80/000000/homer-simpson--v2.png",\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/80/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit")), h("snt-icon-copy", { slot: "center", properties: '{\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/80/000000/homer-simpson--v2.png",\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/80/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")), h("snt-icon-copy", { slot: "right", properties: '{\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/80/000000/homer-simpson--v2.png",\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/80/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.")))), h("br", null), h("h1", null, "Three column icon copy center copy"), h("div", { class: "center" }, h("snt-three-column", null, h("snt-icon-copy", { slot: "left", properties: '{\r\n                                "smallIconUrl": "",\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit")), h("snt-icon-copy", { slot: "center", properties: '{\r\n                                "smallIconUrl": "",\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")), h("snt-icon-copy", { slot: "right", properties: '{\r\n                                "smallIconUrl": "",\r\n                                "largeIconUrl": ""\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam."))), h("br", null), h("br", null), h("h1", null, "Three column Logo copy"), h("snt-three-column", null, h("snt-icon-copy", { slot: "left", logoIsSet: true, properties: '{\r\n                            "smallIconUrl": "",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                            "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                            "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                            "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                            "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit")), h("snt-icon-copy", { slot: "center", logoIsSet: true, properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                            "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                            "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                            "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                            "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")), h("snt-icon-copy", { slot: "right", logoIsSet: true, properties: '{\r\n                            "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png",\r\n                            "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                            "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                            "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                            "largeLogoUrl":"https://via.placeholder.com/234x80?text=Desktop",\r\n                            "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                        }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam."))), h("br", null))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "three-column-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ThreeColumnExample.TAG_NAME = "three-column-example";

class ThreeColumnExample$1 {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("br", null), h("h1", null, "Three column Mixed"), h("div", { class: "center" }, h("snt-three-column-mixed", null, h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit"))), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("snt-action-button", { styleClasses: "cta theme-default", "action-reference": "logAction", "link-title": "Default CTA" }))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png"\r\n                            }', "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("snt-action-button", { styleClasses: "cta theme-default", "action-reference": "logAction", "link-title": "Default CTA" }))), h("div", { class: "column" }, h("snt-image-column", { "image-src": "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })), h("div", { class: "column" }, h("snt-icon-copy", { properties: '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/45/000000/user2.png",\r\n                                "smallLogoUrl":"https://via.placeholder.com/230x60?text=Mobile",\r\n                                "mediumLogoUrl":"https://via.placeholder.com/294x60?text=Tablet",\r\n                                "largeLogoUrl":"https://via.placeholder.com/434x120?text=Desktop",\r\n                                "extraLargeLogoUrl":"https://via.placeholder.com/330x80?text=Desktop+HD"\r\n                            }', "style-classes": "center", logoIsSet: true, "title-string": "My Title" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.")))))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "three-column-mixed-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ThreeColumnExample$1.TAG_NAME = "three-column-mixed-example";

const tipComponentCss = "snt-tip{display:block}.neutral-fill snt-tip,snt-tip.neutral-fill{color:#323232;background-color:#ffffff;border:3px solid #e5e5e5}.light-fill snt-tip,snt-tip.light-fill{color:#323232;background-color:#d9f0f4;border:none}.dark-fill snt-tip,snt-tip.dark-fill{color:#ffffff;background-color:#147582;border:none}.float-fill snt-tip,snt-tip.float-fill{color:#323232;background-color:#ffffff;border:none}.primary-fill snt-tip,snt-tip.primary-fill{color:#323232;background-color:#6ebac5;border:none}.light-stroke snt-tip,snt-tip.light-stroke{color:#323232;background-color:#ffffff;border:3px solid #acdde4}snt-tip .tip-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding:15px 15px}snt-tip .icon{display:none;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-right:15px;-webkit-box-sizing:border-box;box-sizing:border-box;border:2px solid #ffffff;background-color:#ffffff;border-radius:50%}.neutral-fill snt-tip .icon,snt-tip .icon.neutral-fill{border:3px solid #acdde4;background-color:#acdde4}.light-fill snt-tip .icon,snt-tip .icon.light-fill{border:3px solid #6ebac5;background-color:#ffffff}.float-fill snt-tip .icon,snt-tip .icon.float-fill{border:3px solid #acdde4;background-color:#acdde4}.primary-fill snt-tip .icon,snt-tip .icon.primary-fill{border:3px solid #acdde4;background-color:#ffffff}.light-stroke snt-tip .icon,snt-tip .icon.light-stroke{border:3px solid #acdde4;background-color:#acdde4}.dark-fill snt-tip .icon,snt-tip .icon.dark-fill{border:3px solid #ffffff;background-color:#147582}snt-tip.neutral-fill .icon{border:3px solid #acdde4;background-color:#acdde4}snt-tip.light-fill .icon{border:3px solid #6ebac5;background-color:#ffffff}snt-tip.float-fill .icon{border:3px solid #acdde4;background-color:#acdde4}snt-tip.primary-fill .icon{border:3px solid #acdde4;background-color:#ffffff}snt-tip.light-stroke .icon{border:3px solid #acdde4;background-color:#acdde4}snt-tip.dark-fill .icon{border:3px solid #ffffff;background-color:#147582}snt-tip .icon.icon-tip{border-width:2px}@media (min-width: 768px){snt-tip .icon{display:-ms-inline-flexbox;display:inline-flex;height:40px;width:40px;-ms-flex:0 0 40px;flex:0 0 40px}snt-tip snt-image.icon-image img{height:25px;width:25px}}@media (min-width: 1024px){snt-tip .icon{display:-ms-inline-flexbox;display:inline-flex;height:60px;width:60px;-ms-flex:0 0 60px;flex:0 0 60px}snt-tip snt-image.icon-image img{height:30px;width:30px}}";

class TipComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h("div", { class: "tip-container" }, h("div", { class: "icon icon-tip" }, h("snt-image", { class: "icon-image", "data-src": this.iconPath })), h("p", null, h("slot", null)))));
    }
    static get style() { return tipComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-tip",
        "$members$": {
            "iconPath": [1, "icon-path"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TipComponent.TAG_NAME = "snt-tip";

class TipExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", { class: "dark-fill" }, h("h3", null, "Dark Fill Tip Example"), h("snt-tip", { "icon-path": "https://img.icons8.com/dotty/45/000000/user.png" }, "This is sample tip component")),
            h("br", null),
            h("div", { class: "light-fill" }, h("h3", null, "Light Fill Tip Example"), h("snt-tip", { "icon-path": "https://img.icons8.com/dotty/45/000000/user.png" }, "This is sample tip component This is sample tip component This is sample tip component This is sample tip component This is sample tip component This is sample tip component This is sample tip component"))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "tip-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

var TitleTypeEnum;
(function (TitleTypeEnum) {
    TitleTypeEnum["h1"] = "h1";
    TitleTypeEnum["h2"] = "h2";
    TitleTypeEnum["h3"] = "h3";
    TitleTypeEnum["h4"] = "h4";
})(TitleTypeEnum || (TitleTypeEnum = {}));

var clamp = createCommonjsModule(function (module, exports) {
/*!
 * Clamp.js 0.11.5
 *
 * Now Maintained by Josh English http://joshengish.com
 * Joseph Schmitt http://joe.sh
 * Released under the WTFPL license
 * http://sam.zoy.org/wtfpl/
 */

(function(root, factory) {
  {
    // Node, CommonJS-like
    module.exports = {clamp: factory()};
  }
}(commonjsGlobal, function() {
  /**
   * Clamps a text node.
   * @param {HTMLElement} element. Element containing the text node to clamp.
   * @param {Object} options. Options to pass to the clamper.
   */
  function clamp(element, options) {
    options = options || {};

    var win = window,
      opt = {
        clamp: options.clamp || 2,
        useNativeClamp: typeof(options.useNativeClamp) != 'undefined' ? options.useNativeClamp : true,
        splitOnChars: options.splitOnChars || ['.', '-', '–', '—', ' '], //Split on sentences (periods), hypens, en-dashes, em-dashes, and words (spaces).
        animate: options.animate || false,
        truncationChar: options.truncationChar || '…',
        truncationHTML: options.truncationHTML
      },

      sty = element.style,
      originalText = element.innerHTML,

      supportsNativeClamp = typeof(element.style.webkitLineClamp) != 'undefined',
      clampValue = opt.clamp,
      isCSSValue = clampValue.indexOf && (clampValue.indexOf('px') > -1 || clampValue.indexOf('em') > -1),
      truncationHTMLContainer;

    if (opt.truncationHTML) {
      truncationHTMLContainer = document.createElement('span');
      truncationHTMLContainer.innerHTML = opt.truncationHTML;
    }


    // UTILITY FUNCTIONS __________________________________________________________

    /**
     * Return the current style for an element.
     * @param {HTMLElement} elem The element to compute.
     * @param {string} prop The style property.
     * @returns {number}
     */
    function computeStyle(elem, prop) {
      if (!win.getComputedStyle) {
        win.getComputedStyle = function(el, pseudo) {
          this.el = el;
          this.getPropertyValue = function(prop) {
            var re = /(\-([a-z]){1})/g;
            if (prop == 'float') prop = 'styleFloat';
            if (re.test(prop)) {
              prop = prop.replace(re, function() {
                return arguments[2].toUpperCase();
              });
            }
            return el.currentStyle && el.currentStyle[prop] ? el.currentStyle[prop] : null;
          };
          return this;
        };
      }

      return win.getComputedStyle(elem, null).getPropertyValue(prop);
    }

    /**
     * Returns the maximum number of lines of text that should be rendered based
     * on the current height of the element and the line-height of the text.
     */
    function getMaxLines(height) {
      var availHeight = height || element.clientHeight,
        lineHeight = getLineHeight(element);

      return Math.max(Math.floor(availHeight / lineHeight), 0);
    }

    /**
     * Returns the maximum height a given element should have based on the line-
     * height of the text and the given clamp value.
     */
    function getMaxHeight(clmp) {
      var lineHeight = getLineHeight(element);
      // console.log(lineHeight * clmp);
      return lineHeight * clmp;
    }

    /**
     * Returns the line-height of an element as an integer.
     */
    function getLineHeight(elem) {
      var lh = computeStyle(elem, 'line-height');
      if (lh == 'normal') {
        // Normal line heights vary from browser to browser. The spec recommends
        // a value between 1.0 and 1.2 of the font size. Using 1.1 to split the diff.
        lh = parseInt(computeStyle(elem, 'font-size')) * 1.187;
      }
      return Math.ceil(parseFloat(lh));
    }


    // MEAT AND POTATOES (MMMM, POTATOES...) ______________________________________
    var splitOnChars = opt.splitOnChars.slice(0),
      splitChar = splitOnChars[0],
      chunks,
      lastChunk;

    /**
     * Gets an element's last child. That may be another node or a node's contents.
     */
    function getLastChild(elem) {
      if (!elem.lastChild) {
        return;
      }
      //Current element has children, need to go deeper and get last child as a text node
      if (elem.lastChild.childNodes && elem.lastChild.childNodes.length > 0) {
        return getLastChild(Array.prototype.slice.call(elem.childNodes).pop());
      }
      //This is the absolute last child, a text node, but something's wrong with it. Remove it and keep trying
      else if (!elem.lastChild || !elem.lastChild.nodeValue || elem.lastChild.nodeValue === '' || elem.lastChild.nodeValue == opt.truncationChar) {
        elem.lastChild.parentNode.removeChild(elem.lastChild);
        return getLastChild(element);
      }
      //This is the last child we want, return it
      else {
        return elem.lastChild;
      }
    }

    /**
     * Removes one character at a time from the text until its width or
     * height is beneath the passed-in max param.
     */
    function truncate(target, maxHeight) {
      if (!target || !maxHeight) {
        return;
      }

      /**
       * Resets global variables.
       */
      function reset() {
        splitOnChars = opt.splitOnChars.slice(0);
        splitChar = splitOnChars[0];
        chunks = null;
        lastChunk = null;
      }
      // console.log(splitOnChars);

      var nodeValue = target.nodeValue.replace(opt.truncationChar, '');

      //Grab the next chunks
      if (!chunks) {
        //If there are more characters to try, grab the next one
        if (splitOnChars.length > 0) {
          splitChar = splitOnChars.shift();
        }
        //No characters to chunk by. Go character-by-character
        else {
          splitChar = '';
        }

        chunks = nodeValue.split(splitChar);
      }

      //If there are chunks left to remove, remove the last one and see if
      // the nodeValue fits.
      if (chunks.length > 1) {
        // console.log('chunks', chunks);
        lastChunk = chunks.pop();
        // console.log('lastChunk', lastChunk);
        applyEllipsis(target, chunks.join(splitChar));
      }
      //No more chunks can be removed using this character
      else {
        chunks = null;
      }

      //Insert the custom HTML before the truncation character
      if (truncationHTMLContainer) {
        target.nodeValue = target.nodeValue.replace(opt.truncationChar, '');
        element.innerHTML = target.nodeValue + ' ' + truncationHTMLContainer.innerHTML + opt.truncationChar;
      }

      //Search produced valid chunks
      if (chunks) {
        //It fits
        if (element.clientHeight <= maxHeight) {
          // console.log(element.clientHeight, maxHeight);
          //There's still more characters to try splitting on, not quite done yet
          if (splitOnChars.length >= 0 && splitChar !== '') {
            applyEllipsis(target, chunks.join(splitChar) + splitChar + lastChunk);
            chunks = null;
          }
          //Finished!
          else {
            return element.innerHTML;
          }
        }
      }
      //No valid chunks produced
      else {
        //No valid chunks even when splitting by letter, time to move
        //on to the next node
        if (splitChar === '') {
          applyEllipsis(target, '');
          target = getLastChild(element);

          reset();
        }
      }

      //If you get here it means still too big, let's keep truncating
      if (opt.animate) {
        setTimeout(function() {
          truncate(target, maxHeight);
        }, opt.animate === true ? 10 : opt.animate);
      } else {
        return truncate(target, maxHeight);
      }
    }

    function applyEllipsis(elem, str) {
      elem.nodeValue = str + opt.truncationChar;
    }


    // CONSTRUCTOR ________________________________________________________________

    if (clampValue == 'auto') {
      clampValue = getMaxLines();
    } else if (isCSSValue) {
      clampValue = getMaxLines(parseInt(clampValue));
    }

    var clampedText;
    if (supportsNativeClamp && opt.useNativeClamp) {
      sty.overflow = 'hidden';
      sty.textOverflow = 'ellipsis';
      sty.webkitBoxOrient = 'vertical';
      sty.display = '-webkit-box';
      sty.webkitLineClamp = clampValue;

      if (isCSSValue) {
        sty.height = opt.clamp + 'px';
      }
    } else {
      var height = getMaxHeight(clampValue);
      if (height < element.clientHeight) {
        clampedText = truncate(getLastChild(element), height);
      }
    }

    return {
      'original': originalText,
      'clamped': clampedText
    };
  }

  return clamp;
}));
});

const titleComponentCss = "snt-title .header{text-align:center}.light-fill snt-title,snt-title.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-title,snt-title.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-title,snt-title.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-title,snt-title.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-title,snt-title.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}snt-title.left .header,.left snt-title .header{text-align:left}snt-title.right .header,.right snt-title .header{text-align:right}snt-title.center .header,.center snt-title .header{text-align:center}@media (max-width: 767px){snt-title.left-mobile .header,.left-mobile snt-title .header{text-align:left}snt-title.right-mobile .header,.right-mobile snt-title .header{text-align:right}snt-title.center-mobile .header,.center-mobile snt-title .header{text-align:center}}snt-title .title-combined-top snt-layout .spacings,.title-combined-top snt-title snt-layout .spacings,snt-title.title-combined-top snt-layout .spacings{padding-top:0.813em !important}@media (min-width: 1024px){snt-title .title-combined-top snt-layout .spacings,.title-combined-top snt-title snt-layout .spacings,snt-title.title-combined-top snt-layout .spacings{padding-top:0.938em !important}}snt-title .title-combined-bottom snt-layout .spacings,.title-combined-bottom snt-title snt-layout .spacings,snt-title.title-combined-bottom snt-layout .spacings{padding-bottom:0.813em !important}@media (min-width: 1024px){snt-title .title-combined-bottom snt-layout .spacings,.title-combined-bottom snt-title snt-layout .spacings,snt-title.title-combined-bottom snt-layout .spacings{padding-bottom:0.938em !important}}";

var __awaiter$u = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class TitleComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.clampLines = 0;
        this.truncationString = "...";
    }
    getContent(titleType) {
        switch (titleType) {
            case TitleTypeEnum.h1: return (h("h1", { ref: (el) => { this.titleElement = el; }, class: "header" }, h("slot", null)));
            case TitleTypeEnum.h2: return (h("h2", { ref: (el) => { this.titleElement = el; }, class: "header" }, h("slot", null)));
            case TitleTypeEnum.h3: return (h("h3", { ref: (el) => { this.titleElement = el; }, class: "header" }, h("slot", null)));
            case TitleTypeEnum.h4: return (h("h4", { ref: (el) => { this.titleElement = el; }, class: "header" }, h("slot", null)));
            default: return "";
        }
    }
    componentDidRender() {
        if (this.clampLines > 0) {
            clamp.clamp(this.titleElement, { clamp: this.clampLines, truncationChar: this.truncationString, useNativeClamp: false });
        }
    }
    clampTitle(clampLines = this.clampLines) {
        return __awaiter$u(this, void 0, void 0, function* () {
            clamp.clamp(this.titleElement, { clamp: clampLines, truncationChar: this.truncationString, useNativeClamp: false });
        });
    }
    setTitle(title) {
        return __awaiter$u(this, void 0, void 0, function* () {
            this.titleElement.innerHTML = title;
        });
    }
    render() {
        let content = this.getContent(this.titleType);
        return [
            h("snt-layout", null, content)
        ];
    }
    static get style() { return titleComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-title",
        "$members$": {
            "titleType": [1, "title-type"],
            "clampLines": [2, "clamp-lines"],
            "truncationString": [1, "truncation-string"],
            "clampTitle": [64],
            "setTitle": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TitleComponent.TAG_NAME = "snt-title";

const titleCopyComponentCss = ".light-fill snt-title-copy,snt-title-copy.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-title-copy,snt-title-copy.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-title-copy,snt-title-copy.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-title-copy,snt-title-copy.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-title-copy,snt-title-copy.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}snt-title-copy.left .content,snt-title-copy left.content,.left snt-title-copy .content{text-align:left}@media (max-width: 767px){snt-title-copy snt-layout.left-mobile .content,snt-title-copy snt-layout .left-mobile.content,.left-mobile snt-title-copy snt-layout .content{text-align:left}}snt-title-copy.center .content,snt-title-copy center.content,.center snt-title-copy .content{text-align:center}@media (max-width: 767px){snt-title-copy snt-layout.center-mobile .content,snt-title-copy snt-layout .center-mobile.content,.center-mobile snt-title-copy snt-layout .content{text-align:center}}snt-title-copy.right .content,snt-title-copy right.content,.right snt-title-copy .content{text-align:right}@media (max-width: 767px){snt-title-copy snt-layout.right-mobile .content,snt-title-copy snt-layout .right-mobile.content,.right-mobile snt-title-copy snt-layout .content{text-align:right}}snt-title-copy.left .header,snt-title-copy left.header,.left snt-title-copy .header{text-align:left}@media (max-width: 767px){snt-title-copy snt-layout.left-mobile .header,snt-title-copy snt-layout .left-mobile.header,.left-mobile snt-title-copy snt-layout .header{text-align:left}}snt-title-copy.center .header,snt-title-copy center.header,.center snt-title-copy .header{text-align:center}@media (max-width: 767px){snt-title-copy snt-layout.center-mobile .header,snt-title-copy snt-layout .center-mobile.header,.center-mobile snt-title-copy snt-layout .header{text-align:center}}snt-title-copy.right .header,snt-title-copy right.header,.right snt-title-copy .header{text-align:right}@media (max-width: 767px){snt-title-copy snt-layout.right-mobile .header,snt-title-copy snt-layout .right-mobile.header,.right-mobile snt-title-copy snt-layout .header{text-align:right}}snt-title-copy .header{text-align:center}snt-title-copy .with-content{padding-top:15px}snt-title-copy snt-layout[viewport=medium] .with-content{padding-top:20px}snt-title-copy snt-layout[viewport=large] .with-content{padding-top:25px}snt-title-copy snt-layout[viewport=extra-large] .with-content{padding-top:30px}snt-title-copy snt-link[target=_blank]{padding-right:25px}";

class TitleCopyComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    componentDidLoad() {
        const slotContentElement = this.hostElement.querySelector('div.content');
        if (!StringUtils.isEmpty(this.titleString) && !StringUtils.isEmpty(slotContentElement.innerHTML.trim())) {
            slotContentElement.classList.add('with-content');
        }
    }
    render() {
        return (h("snt-layout", null, StringUtils.isEmpty(this.titleString)
            ? ''
            : h("h2", { class: WebUtils.generateClasses(["header"], this.styleClasses) }, this.titleString), h("div", { class: WebUtils.generateClasses(["content"], this.styleClasses) }, h("slot", null))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return titleCopyComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-title-copy",
        "$members$": {
            "titleString": [513, "title-string"],
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["styleClasses", "style-classes"]]
    }; }
}
TitleCopyComponent.TAG_NAME = "snt-title-copy";

class TitleCopyExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("h1", null, "Title & Copy"), h("snt-title-copy", { "title-string": "My Title" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Title & Copy - Theme Dark"), h("snt-title-copy", { "title-string": "My Title", class: "dark-fill" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Title & Copy - Theme Light"), h("snt-title-copy", { "title-string": "My Title", class: "light-fill" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Title & Copy Theme Neutral"), h("snt-title-copy", { "title-string": "My Title", class: "neutral-fill" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Title Only"), h("snt-title-copy", { "title-string": "My Only Title" }), h("br", null), h("h1", null, "Copy Only - Center Aligned"), h("snt-title-copy", { "style-classes": "center" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Copy Only - Left Aligned"), h("snt-title-copy", { "style-classes": "left" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), h("br", null), h("h1", null, "Copy Only - Right Aligned"), h("snt-title-copy", { "style-classes": "right" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "title-copy-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TitleCopyExample.TAG_NAME = "title-copy-example";

class TitleExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", null, h("h3", null, "h1 example - Centered"), h("snt-title", { class: "left", "title-type": 'h1', "clamp-lines": 1, "truncation-string": '..."' }, "Results for \"How do I know how much discount is applied to my preminum?\""), h("br", null), h("h3", null, "h2 example - Right Aligned"), h("snt-title", { class: "right", "title-type": 'h2' }, "This is sample title"), h("br", null), h("h3", null, "h3 example - Left"), h("snt-title", { class: "left", "title-type": 'h3' }, "This is sample title"), h("br", null), h("h3", null, "h4 example - Centered Left Mobile"), h("snt-title", { class: "left-mobile", "title-type": 'h4' }, "This is sample title"))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "title-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const toggleComponentCss = "";

class ToggleComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.toggle = createEvent(this, "toggle", 7);
    }
    handleClick() {
        this.toggle.emit();
    }
    render() {
        return (h(Host, { onClick: this.handleClick.bind(this) }, "X", h("span", { class: "sr-only" }, "Search")));
    }
    get element() { return getElement(this); }
    static get style() { return toggleComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-toggle",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
ToggleComponent.TAG_NAME = "snt-header";

class Treeitem {
    constructor(obj) {
        this.label = obj.label;
        this.key = obj.key,
            this.url = obj.url,
            this.id = obj.id;
        this.languageId = obj.languageId;
        this.parentId = obj.parentId;
        this.expandable = obj.expandable || false;
        this.visible = obj.visible || false;
        this.focused = obj.focused || false;
        this.selected = obj.selected || false;
        this.expanded = obj.expanded || false;
        this.domElement = obj.domElement || null;
    }
}

const treeviewComponentCss = "snt-treeview{display:block}snt-treeview .category-label{display:block}snt-treeview .category-label .iconCaret{padding-left:3px;font-size:10px}snt-treeview .category-label .iconCaret.expanded{-webkit-transform:rotate(-180deg);transform:rotate(-180deg);padding-right:3px;padding-left:0px}snt-treeview .category-label-row{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}snt-treeview .category-text{display:-ms-inline-flexbox;display:inline-flex;justify-items:center;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-direction:column;flex-direction:column}snt-treeview .category-text:after{content:attr(data-text);height:0;visibility:hidden;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;font-weight:normal;font-family:\"Averta-Regular\"}@media speech{snt-treeview .category-text:after{display:none}}snt-treeview ul{list-style:none;padding:0}snt-treeview li,snt-treeview a{color:#323232;font-size:1rem;line-height:1.3125rem;text-decoration:none}snt-treeview li:focus,snt-treeview a:focus{outline:none}snt-treeview li:hover{cursor:pointer}snt-treeview li:hover>.category-label{font-weight:500;font-family:\"Averta-ExtraBold\", sans-serif;color:#147582}snt-treeview li:hover .iconCaret{font-weight:700}snt-treeview li{margin-bottom:1.25rem}snt-treeview li:last-child{margin-bottom:0}snt-treeview li.active>span{border-bottom:3px solid #147582;color:#147582}snt-treeview li>ul{padding:1rem 0 0.625rem 1.875rem}snt-treeview li>ul li{margin-bottom:1rem}snt-treeview li>ul li:last-child{margin-bottom:0}snt-treeview li>a:hover{font-weight:500;font-family:\"Averta-ExtraBold\", sans-serif;color:#147582;text-decoration:none}snt-treeview li:focus.focused .category-label>span{font-weight:500;font-family:\"Averta-ExtraBold\", sans-serif;color:#147582;outline:1px solid #147582;outline-offset:3px}snt-treeview li.selected .category-label>span{border-bottom:2px solid #147582;padding-bottom:2px;margin-bottom:-4px}snt-treeview li>span{pointer-events:none}snt-treeview li a:focus.focused>span{font-weight:500;font-family:\"Averta-ExtraBold\", sans-serif;color:#147582;outline:1px solid #147582;outline-offset:3px}snt-treeview a{display:block}snt-treeview a.selected>span{border-bottom:2px solid #147582;padding-bottom:2px;margin-bottom:-4px}snt-treeview a.active{border-bottom:2px solid #147582;color:#147582}snt-treeview [role=treeitem][aria-expanded=false]>ul{display:none}@media (min-width: 1024px){snt-treeview .category-label .iconCaret{font-size:12px}}";

var __awaiter$v = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/**
 * TODO: Rename component to snt-navigation-treeview
 */
class TreeviewComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.sntChange = createEvent(this, "sntChange", 7);
    }
    /**
     * Component Lifecycle Events
     */
    componentWillLoad() {
        const tree = WebUtils.getObjectFromString(this.structure);
        this.treeitems = this.getItemsFromTree(tree, this.treeitems = []);
        this.keyboardEventProcessor = this.initKeyboardEventProcessor();
    }
    componentDidLoad() { }
    componentWillUpdate() { }
    componentDidUpdate() {
        const focusedTreeitem = this.treeitems.find(node => node.focused);
        if (focusedTreeitem) {
            focusedTreeitem.domElement.focus();
        }
    }
    /**
     * Public Methods API
     */
    getTreeitems() {
        return __awaiter$v(this, void 0, void 0, function* () {
            return Promise.resolve(this.treeitems);
        });
    }
    updateExpandedTreeitems(treeitems, targetNodes, expanded) {
        return __awaiter$v(this, void 0, void 0, function* () {
            return Promise.resolve(treeitems.map((node) => targetNodes.indexOf(node) != -1
                ? new Treeitem(Object.assign(Object.assign({}, node), { expanded: typeof (expanded) == "boolean" ? expanded : !node.expanded }))
                : node));
        });
    }
    updateVisibleTreeitems(treeitems, targetNodes, visible) {
        return __awaiter$v(this, void 0, void 0, function* () {
            return Promise.resolve(treeitems.map((node) => targetNodes.indexOf(node) != -1
                ? new Treeitem(Object.assign(Object.assign({}, node), { visible: typeof (visible) == "boolean" ? visible : !node.visible }))
                : node));
        });
    }
    updateFocusedTreeitems(treeitems, targetNodes, focused) {
        return __awaiter$v(this, void 0, void 0, function* () {
            return Promise.resolve(treeitems.map((node) => {
                const idEquals = (targetNode) => { return targetNode.id === node.id; };
                return targetNodes.some(idEquals)
                    ? new Treeitem(Object.assign(Object.assign({}, node), { focused: typeof (focused) == "boolean" ? focused : !node.focused }))
                    : (node.focused)
                        ? new Treeitem(Object.assign(Object.assign({}, node), { focused: false }))
                        : node;
            }));
        });
    }
    updateSelectedTreeitems(treeitems, targetNodes, selected) {
        return __awaiter$v(this, void 0, void 0, function* () {
            return Promise.resolve(treeitems.map((node) => {
                const idEquals = (targetNode) => { return targetNode.id === node.id; };
                return targetNodes.some(idEquals) ? new Treeitem(Object.assign(Object.assign({}, node), { selected: typeof (selected) == "boolean" ? selected : !node.selected }))
                    : (node.selected)
                        ? new Treeitem(Object.assign(Object.assign({}, node), { selected: false }))
                        : node;
            }));
        });
    }
    findNodeByProperty(key, value) {
        return __awaiter$v(this, void 0, void 0, function* () {
            return this.treeitems.find(node => (node[key] == value));
        });
    }
    findNodeByUrlOrKey(value) {
        return this.treeitems.find(node => (node['key'] === value || node['url'] === value));
    }
    selectNodeByUrlOrKey(url, childKey, emitEvent = true) {
        return __awaiter$v(this, void 0, void 0, function* () {
            let targetNode = yield this.findNodeByUrlOrKey(url);
            let childNode;
            if (childKey) {
                childNode = this.treeitems.find(node => node.parentId == targetNode.id && node.key === childKey);
            }
            childNode = childNode || this.treeitems.find(node => node.parentId == targetNode.id);
            if (childNode) {
                yield this.toggleTreeitem(targetNode, true);
            }
            this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [childNode ? childNode : targetNode], true);
            const nodesToUpdate = childNode ? [targetNode, childNode] : [targetNode];
            this.treeitems = yield this.updateSelectedTreeitems(this.treeitems, nodesToUpdate, true);
            if (emitEvent) {
                this.sntChange.emit({ node: childNode ? childNode : targetNode, parentNode: childNode ? targetNode :  null, originalEvent: null });
            }
        });
    }
    updateTreeView(structure) {
        return __awaiter$v(this, void 0, void 0, function* () {
            this.structure = structure;
            const tree = WebUtils.getObjectFromString(this.structure);
            this.treeitems = this.getItemsFromTree(tree, this.treeitems = []);
        });
    }
    /**
     * Local Methods
     */
    initKeyboardEventProcessor() {
        return KeyboardEventProcessorBuilder.newInstance()
            /**
             * -> Moves focus to the previous node that is focusable without opening or closing a node.
             * -> If focus is on the last node, does nothing.
             */
            .withKey(Keyboard.ARROW_UP, (evt) => {
            this.moveSelection(evt, NavigationDirectionEnum.BACKWARDS);
        })
            /**
             * -> Moves focus to the next node that is focusable without opening or closing a node.
             * -> If focus is on the last node, does nothing.
             */
            .withKey(Keyboard.ARROW_DOWN, (evt) => {
            this.moveSelection(evt, NavigationDirectionEnum.FORWARDS);
        })
            /**
             * -> When focus is on a closed node, opens the node; focus does not move.
             * -> When focus is on a open node, moves focus to the first child node.
             * -> When focus is on an end node, does nothing
             */
            .withKey(Keyboard.ARROW_RIGHT, (evt) => {
            const node = this.treeitems.find((node) => node.domElement == evt.target);
            if (node && node.expandable) {
                if (node.expanded) {
                    this.moveSelection(evt, NavigationDirectionEnum.FORWARDS);
                    return;
                }
                this.toggleTreeitem(node);
            }
        })
            /**
             * -> When focus is on an open node, closes the node.
             * -> When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.
             * -> When focus is on a root node that is also either an end node or a closed node, does nothing.
             */
            .withKey(Keyboard.ARROW_LEFT, (evt) => __awaiter$v(this, void 0, void 0, function* () {
            const targetNode = this.treeitems.find((node) => node.domElement == evt.target);
            if (targetNode && targetNode.expandable && targetNode.expanded) {
                this.toggleTreeitem(targetNode);
                return;
            }
            if (targetNode.parentId) {
                const parentNode = this.treeitems.find(node => node.id == targetNode.parentId);
                this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [parentNode]);
            }
        }))
            /**
             * -> Moves focus to first node without opening or closing a node.
             */
            .withKey(Keyboard.HOME, (evt) => {
            this.moveSelection(evt, NavigationDirectionEnum.FIRST);
        })
            /**
             * -> Moves focus to the last node that can be focused without expanding any nodes that are closed.
             */
            .withKey(Keyboard.END, (evt) => {
            this.moveSelection(evt, NavigationDirectionEnum.LAST);
        })
            /**
             * -> Expands all closed sibling nodes that are at the same level as the focused node.
             * -> Focus does not move.
             */
            .withKey(Keyboard.ASTERISK, (evt) => {
            const targetNode = this.treeitems.find((node) => node.domElement == evt.target);
            const expandableSiblingNodes = this.treeitems.filter((node) => node.expandable && node.parentId == targetNode.parentId);
            expandableSiblingNodes.forEach((node) => {
                this.toggleTreeitem(node, true);
            });
        })
            /**
             * -> Expands focused node if it is expandable
             */
            .withKeys([Keyboard.ENTER, Keyboard.SPACE], (evt) => __awaiter$v(this, void 0, void 0, function* () {
            evt.preventDefault();
            const targetNode = this.treeitems.find((node) => node.domElement == evt.target);
            if (!targetNode)
                return;
            if (targetNode.expandable) {
                evt.preventDefault();
                this.toggleTreeitem(targetNode);
            }
            else {
                const parentNode = this.treeitems.find((node) => node.id == targetNode.parentId);
                const nodesToUpdate = parentNode ? [parentNode, targetNode] : [targetNode];
                this.treeitems = yield this.updateSelectedTreeitems(this.treeitems, nodesToUpdate, true);
                this.sntChange.emit({ node: targetNode, parentNode: parentNode || null, originalEvent: evt });
            }
        }))
            /**
             * -> Focus moves to the next node with a name that starts with the typed character.
             * -> Search wraps to first node if a matching name is not found among the nodes that follow the focused node.
             * -> Search ignores nodes that are descendants of closed nodes.
             */
            .withDefaultHandler((evt) => __awaiter$v(this, void 0, void 0, function* () {
            const nextSelectableNode = this.getNextSelectableNodeByFirstCharacter(this.treeitems, evt.key);
            if (nextSelectableNode) {
                this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [nextSelectableNode]);
            }
        }))
            .build();
    }
    moveSelection(evt, direction) {
        return __awaiter$v(this, void 0, void 0, function* () {
            evt.preventDefault();
            const nextSelectableNode = this.getNextSelectableNode(this.treeitems, direction);
            if (nextSelectableNode) {
                this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [nextSelectableNode]);
            }
        });
    }
    getNextSelectableNodeByFirstCharacter(treeitems, firstCharacter, direction = NavigationDirectionEnum.FORWARDS) {
        const selectableTreeitems = treeitems.filter(node => node.visible && node.label[0].toLowerCase() == firstCharacter.toLowerCase());
        const selectedItem = selectableTreeitems.find(node => node.focused);
        const selectedItemIndex = selectableTreeitems.indexOf(selectedItem);
        const nextSelectedItemIndex = (selectedItemIndex + (direction == NavigationDirectionEnum.FORWARDS ? 1 : -1) + selectableTreeitems.length) % selectableTreeitems.length;
        return selectableTreeitems[nextSelectedItemIndex];
    }
    getNextSelectableNode(treeitems, direction) {
        const selectableTreeitems = treeitems.filter(node => node.visible);
        const selectedItem = selectableTreeitems.find(node => node.focused);
        const selectedItemIndex = selectableTreeitems.indexOf(selectedItem);
        if ((direction == NavigationDirectionEnum.BACKWARDS || direction == NavigationDirectionEnum.FIRST) && selectedItemIndex == 0) {
            return false;
        }
        if ((direction == NavigationDirectionEnum.FORWARDS || direction == NavigationDirectionEnum.LAST) && selectedItemIndex == selectableTreeitems.length - 1) {
            return false;
        }
        const nextSelectedItemIndex = (direction == NavigationDirectionEnum.FORWARDS)
            ? selectedItemIndex + 1
            : (direction == NavigationDirectionEnum.BACKWARDS)
                ? selectedItemIndex - 1
                : (direction == NavigationDirectionEnum.LAST)
                    ? selectableTreeitems.length - 1 : 0;
        return selectableTreeitems[nextSelectedItemIndex];
    }
    onClickCategory(evt) {
        return __awaiter$v(this, void 0, void 0, function* () {
            const targetNode = this.treeitems.find((node) => node.domElement == evt.target);
            if (!targetNode)
                return;
            evt.preventDefault();
            if (targetNode.expandable) {
                yield this.toggleTreeitem(targetNode);
                this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [targetNode], true);
            }
        });
    }
    onClickLink(treeitem, evt) {
        return __awaiter$v(this, void 0, void 0, function* () {
            const parentNode = this.treeitems.find((node) => node.id == treeitem.parentId);
            this.sntChange.emit({ node: treeitem, parentNode: parentNode || null, originalEvent: evt });
            this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [treeitem], true);
            const nodesToUpdate = parentNode ? [parentNode, treeitem] : [treeitem];
            this.treeitems = yield this.updateSelectedTreeitems(this.treeitems, nodesToUpdate, true);
        });
    }
    toggleTreeitem(targetNode, expanded) {
        return __awaiter$v(this, void 0, void 0, function* () {
            const treeitems = yield this.updateExpandedTreeitems(this.treeitems, [targetNode], expanded);
            targetNode = treeitems.find((node) => node.domElement == targetNode.domElement);
            const childNodes = treeitems.filter((node) => node.parentId == targetNode.id);
            this.treeitems = yield this.updateVisibleTreeitems(treeitems, childNodes);
        });
    }
    onKeydown(evt) {
        if (this.keyboardEventProcessor.hasDelegatedHandler(evt)
            || this.keyboardEventProcessor.hasDefaultHandler()) {
            this.keyboardEventProcessor.process(evt);
        }
    }
    onFocusin(_evt) {
        return __awaiter$v(this, void 0, void 0, function* () {
            const selectedTreeitem = this.treeitems.find(node => node.focused || node.selected);
            if (!selectedTreeitem) {
                this.treeitems = yield this.updateFocusedTreeitems(this.treeitems, [this.treeitems[0]]);
            }
        });
    }
    getItemsFromTree(node, tree, parentNode) {
        let treeitem = parentNode;
        if (node.title) {
            treeitem = new Treeitem({
                label: node.title,
                key: node.key,
                url: node.url,
                id: tree.length + 1,
                languageId: node.languageId,
                parentId: parentNode ? parentNode.id : null,
                expandable: node.items && node.items.length > 0,
                expanded: !!node.expanded,
                visible: !parentNode || parentNode.expanded
            });
            tree.push(treeitem);
        }
        if (node.items) {
            node.items.forEach((subNode) => {
                this.getItemsFromTree(subNode, tree, treeitem);
            });
        }
        return tree;
    }
    buildTreeview(treeitems, idPrefix, parentId = null) {
        const toplevelItems = treeitems.filter((treeitem) => treeitem.parentId == parentId);
        const isAnyNodeSelectedOrFocused = this.treeitems.find(node => node.selected || node.focused);
        const tree = toplevelItems.reduce((tree, treeitem) => {
            const nodeId = idPrefix ? (idPrefix + '-' + treeitem.key) : null;
            const isFirstNode = treeitems.indexOf(treeitem) == 0;
            return [...tree, (h("li", { role: treeitem.expandable ? 'treeitem' : 'none', id: nodeId, "aria-expanded": treeitem.expanded ? "true" : "false", "data-index": treeitem.expandable ? treeitems.indexOf(treeitem) : null, tabindex: treeitem.expandable && (treeitem.focused || isFirstNode && !isAnyNodeSelectedOrFocused) ? "0" : "-1", ref: (el) => { treeitem.domElement = el; }, class: {
                        'focused': treeitem.focused,
                        'selected': treeitem.selected
                    }, onClick: this.onClickCategory.bind(this) }, (treeitem.expandable) ? [
                    h("span", { class: "category-label" }, h("span", { class: "category-label-row" }, h("span", { class: "category-text", "data-text": treeitem.label }, treeitem.label), " ", h("span", { class: `icon-font iconCaret ${treeitem.expanded ? 'expanded' : ''}` }))),
                    this.buildTreeview(treeitems, nodeId, treeitem.id)
                ] : [
                    h("a", { role: "treeitem", id: nodeId + '-link', href: "javascript:void(0)", class: {
                            'focused': treeitem.focused,
                            'selected': treeitem.selected
                        }, "data-index": treeitems.indexOf(treeitem), ref: (el) => { treeitem.domElement = el; }, tabindex: treeitem.focused || isFirstNode && !isAnyNodeSelectedOrFocused ? "0" : "-1", onClick: (evt) => { this.onClickLink(treeitem, evt); } }, h("span", { class: "category-text", "data-text": treeitem.label }, treeitem.label))
                ]))];
        }, []);
        return h("ul", { role: parentId == null ? 'tree' : 'group' }, tree);
    }
    render() {
        return h(Host, { onKeydown: this.onKeydown.bind(this), onFocusin: this.onFocusin.bind(this) }, this.buildTreeview(this.treeitems, this.hostElement.id));
    }
    get hostElement() { return getElement(this); }
    static get style() { return treeviewComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-treeview",
        "$members$": {
            "structure": [1],
            "treeitems": [32],
            "getTreeitems": [64],
            "updateExpandedTreeitems": [64],
            "updateVisibleTreeitems": [64],
            "updateFocusedTreeitems": [64],
            "updateSelectedTreeitems": [64],
            "findNodeByProperty": [64],
            "selectNodeByUrlOrKey": [64],
            "updateTreeView": [64]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TreeviewComponent.TAG_NAME = "snt-treeview";

class TreeviewExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        const treeString = `
         {"items":[{"key":"purchasing","title":"Purchasing","description":"Buying your policy, from start to finish","identifier":"e39f6f41-014d-4663-8302-2bcec52b6556","languageId":"1","url":"purchasing","items":[]},{"key":"quoting","title":"Quoting","description":"Step-by-step help and troubleshooting tips for home and auto quotes","identifier":"69e48e00-e601-4ba3-919c-6d3aacf89bae","languageId":"1","url":"quoting","items":[{"key":"all","title":"All","languageId":"1","url":"quoting"},{"key":"propertyInsurance","title":"Home","languageId":"1","url":"quoting"},{"key":"autoInsurance","title":"Auto","languageId":"1","url":"quoting"},{"key":"other","title":"Other","languageId":"1","url":"quoting"}]},{"key":"account","title":"Account","description":"Set up, log in and navigate your account","identifier":"e8f40aa7-601c-4ffa-8239-82406735d56e","languageId":"1","url":"account","items":[]},{"key":"policyCoverages","title":"Policy & Coverages","description":"Learn about documents, what we do and don’t cover and how to make changes","identifier":"0ee73a56-b00f-4e49-9a7e-a7bad7d61645","languageId":"1","url":"policyCoverages","items":[{"key":"all","title":"All","languageId":"1","url":"policyCoverages"},{"key":"propertyInsurance","title":"Home","languageId":"1","url":"policyCoverages"},{"key":"autoInsurance","title":"Auto","languageId":"1","url":"policyCoverages"},{"key":"other","title":"Other","languageId":"1","url":"policyCoverages"}]},{"key":"payments","title":"Payments","description":"How to pay, when to pay and what to do if you miss a payment","identifier":"72d05d42-c2a9-4a6d-b92b-d60a709e57ac","languageId":"1","url":"payments","items":[]},{"key":"claims1","title":"Claims","description":"What you’re covered for and what to do before, during and after a claim","identifier":"d8010624-e1a8-40f2-92ca-07b6ac4e8862","languageId":"1","url":"claims1","items":[{"key":"all","title":"All","languageId":"1","url":"claims1"},{"key":"propertyInsurance","title":"Home","languageId":"1","url":"claims1"},{"key":"autoInsurance","title":"Auto","languageId":"1","url":"claims1"},{"key":"other","title":"Other","languageId":"1","url":"claims1"}]},{"key":"renewalCancellation","title":"Renewal & Cancellation","description":"Our renewal process, your premium and other details you need to know","identifier":"f9c94e12-acce-4495-9573-b0e4459e9195","languageId":"1","url":"renewalCancellation","items":[]},{"key":"groupInsurance","title":"Group Insurance","description":"Find out if you qualify for a group discount and how to add one if you do","identifier":"99eac704-71f9-4db5-bf04-ae8090ccd249","languageId":"1","url":"groupInsurance","items":[{"key":"all","title":"All","languageId":"1","url":"groupInsurance"},{"key":"propertyInsurance","title":"Home","languageId":"1","url":"groupInsurance"},{"key":"autoInsurance","title":"Auto","languageId":"1","url":"groupInsurance"}]},{"key":"otherInquiries","title":"Other Inquiries","description":"Compliments and complaints, questions about fraud and more","identifier":"714337c1-8832-442b-a0bf-1af355c95ee0","languageId":"1","url":"otherInquiries","items":[]}]}
        `;
        var searchResultListJSON = `[
            {\"title\":\"Question 1?\",\"description\":\"This is answer 1\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 2?\",\"description\":\"This is answer 2\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 3?\",\"description\":\"This is answer 3\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 4?\",\"description\":\"This is answer 4\",\"url\":\"https:\/\/www.sonnet.ca\"},
            {\"title\":\"Question 5?\",\"description\":\"This is answer 5\",\"url\":\"https:\/\/www.sonnet.ca\"}
        ]`;
        return [
            h("div", { class: "wrapper" }, h("div", null, h("a", { href: "javascript:void(0)", title: "test" }, "First"), h("br", null), h("br", null), h("snt-treeview", { id: "categories", structure: treeString }), h("br", null), h("br", null), h("a", { href: "javascript:void(0)", title: "test" }, "Last")), h("div", null, h("div", null, h("snt-search-result-list", { searchResultListJson: searchResultListJSON })), h("div", null, h("snt-pagination", { "total-pages": 8, curr: 1 })))),
            h("script", { type: "module", src: "/pages/faqresults.js?v=5" })
        ];
    }
    get element() { return getElement(this); }
    static get style() { return ".wrapper {\n            margin: 0 auto;\n            max-width: 80%;\n            border: 1px solid transparent;\n            display: flex;\n        }\n        .wrapper > div {\n            outline: 1px solid;\n        }"; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "treeview-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TreeviewExample.TAG_title = "treeview-example";

const twoColumnComponentCss = ".light-fill snt-two-column,snt-two-column.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-two-column,snt-two-column.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-two-column,snt-two-column.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-two-column,snt-two-column.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-two-column,snt-two-column.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}snt-two-column .flex-container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}snt-two-column .column-left,snt-two-column .column-right{display:block;width:100%}snt-two-column snt-layout[viewport=small] .column-left .spacings,snt-two-column snt-layout[viewport=small] .column-right .spacings{padding:2.5em 1.875em}snt-two-column snt-layout[viewport=small] .column-left .spacings{padding-bottom:0.813em}snt-two-column snt-layout[viewport=extra-small] .column-left .spacings,snt-two-column snt-layout[viewport=extra-small] .column-right .spacings{padding:2.5em 1.875em}snt-two-column snt-layout[viewport=extra-small] .column-left .spacings{padding-bottom:0.813em}snt-two-column snt-layout[viewport=medium] .column-left .spacings{padding:2.5em 2.313em;padding-right:13px}snt-two-column snt-layout[viewport=medium] .column-right .spacings{padding:2.5em 2.313em;padding-left:13px}snt-two-column snt-layout[viewport=medium] .column-left,snt-two-column snt-layout[viewport=medium] .column-right{-ms-flex:0 0 50%;flex:0 0 50%}snt-two-column snt-layout[viewport=large] .column-left .spacings{padding:3.75em 4.438em;padding-right:15px}snt-two-column snt-layout[viewport=large] .column-right .spacings{padding:3.75em 4.438em;padding-left:15px}snt-two-column snt-layout[viewport=large] .column-left,snt-two-column snt-layout[viewport=large] .column-right{-ms-flex:0 0 50%;flex:0 0 50%}snt-two-column snt-layout[viewport=extra-large] .column-left .spacings{padding:3.75em 8.438em;padding-right:15px}snt-two-column snt-layout[viewport=extra-large] .column-right .spacings{padding:3.75em 8.438em;padding-left:15px}snt-two-column snt-layout[viewport=extra-large] .column-left,snt-two-column snt-layout[viewport=extra-large] .column-right{-ms-flex:0 0 50%;flex:0 0 50%}";

class TwoColumnComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.styleClasses = StringUtils.empty();
    }
    onResize(event) {
        const viewport = event.detail.viewport;
        this.columnLeft.setAttribute('viewport', viewport);
        this.columnRight.setAttribute('viewport', viewport);
    }
    render() {
        return (h(Host, { class: WebUtils.generateClasses([], this.styleClasses) }, h("snt-layout", { padding: "none" }, h("div", { class: "flex-container " }, h("div", { class: "column-left", ref: el => this.columnLeft = el }, h("slot", { name: "left" })), h("div", { class: "column-right", ref: el => this.columnRight = el }, h("slot", { name: "right" }))))));
    }
    get hostElement() { return getElement(this); }
    static get style() { return twoColumnComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-two-column",
        "$members$": {
            "styleClasses": [513, "style-classes"]
        },
        "$listeners$": [[16, "viewportChanged", "onResize"]],
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["styleClasses", "style-classes"]]
    }; }
}
TwoColumnComponent.TAG_NAME = "snt-two-column";

class TwoColumnExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return [
            h("div", { class: "center left-mobile two-column-combined two-column-left title-combined-bottom combined-top" }, h("h1", null, "A left B right"), h("snt-two-column", null, h("div", { slot: "left" }, h("snt-title", { "title-type": "h3" }, "This is left title"), h("snt-accordion-group", null, h("snt-accordion", { id: "grouped-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")))), h("div", { slot: "right" }, h("snt-title", { "title-type": "h3" }, "This is right title"), h("snt-accordion-group", { slot: "right" }, h("snt-accordion", { id: "grouped-accordion-4", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-5", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-6", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")))))),
            h("br", null),
            h("div", { class: "center left-mobile two-column-combined two-column-left title-combined-bottom combined-top" }, h("h1", null, "No title"), h("snt-two-column", null, h("div", { slot: "left" }, h("snt-accordion-group", null, h("snt-accordion", { id: "grouped-accordion-1", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-2", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-3", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")))), h("div", { slot: "right" }, h("snt-accordion-group", { slot: "right" }, h("snt-accordion", { id: "grouped-accordion-4", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-5", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet.")), h("snt-accordion", { id: "grouped-accordion-6", class: "faq-accordion" }, h("div", { slot: "summary" }, "Heading"), h("div", { slot: "details" }, "Lorem ipsum dolor samet."))))))
        ];
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "two-column-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TwoColumnExample.TAG_NAME = "two-column-example";

const twoColumnFeatureComponentCss = "snt-two-column-feature snt-two-column snt-layout .spacings{padding:0px}snt-two-column-feature snt-two-column img{height:100%;width:100%}snt-two-column-feature snt-two-column .flex-container{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow:hidden}snt-two-column-feature snt-two-column .image-column{position:relative;height:100%}snt-two-column-feature snt-two-column .left{left:0}snt-two-column-feature snt-two-column .right{right:0}snt-two-column-feature snt-two-column snt-layout[viewport=medium] img{position:absolute;top:0;-o-object-fit:cover;object-fit:cover}snt-two-column-feature snt-two-column snt-layout[viewport=large] img{position:absolute;top:0;-o-object-fit:cover;object-fit:cover}snt-two-column-feature snt-two-column snt-layout[viewport=extra-large] img{position:absolute;top:0;-o-object-fit:cover;object-fit:cover}snt-two-column-feature snt-two-column snt-layout[viewport=medium] .content-container{padding:40px 37px}snt-two-column-feature snt-two-column snt-layout[viewport=medium] .content-column,snt-two-column-feature snt-two-column snt-layout[viewport=medium] .image-column{-ms-flex:0 0 50%;flex:0 0 50%}snt-two-column-feature snt-two-column snt-layout[viewport=medium] .content{margin-top:20px}snt-two-column-feature snt-two-column snt-layout[viewport=large] .content-container{padding:60px 71px}snt-two-column-feature snt-two-column snt-layout[viewport=large] .content-column,snt-two-column-feature snt-two-column snt-layout[viewport=large] .image-column{-ms-flex:0 0 50%;flex:0 0 50%}snt-two-column-feature snt-two-column snt-layout[viewport=large] .content{margin-top:25px}snt-two-column-feature snt-two-column snt-layout[viewport=extra-large] .content-container{padding:60px 135px}snt-two-column-feature snt-two-column snt-layout[viewport=extra-large] .content-column,snt-two-column-feature snt-two-column snt-layout[viewport=extra-large] .image-column{-ms-flex:0 0 50%;flex:0 0 50%}snt-two-column-feature snt-two-column snt-layout[viewport=extra-large] .content{margin-top:30px}snt-two-column-feature snt-two-column snt-action-button{display:block;margin-top:30px}snt-two-column-feature snt-two-column snt-link{display:block;margin-top:30px}snt-two-column-feature snt-two-column .content-container{padding:40px 30px}snt-two-column-feature snt-two-column .content-column,snt-two-column-feature snt-two-column .image-column{-ms-flex:0 0 100%;flex:0 0 100%}snt-two-column-feature snt-two-column .content{margin-top:15px;font-family:\"Averta-Regular\", Arial, Helvetica, sans-serif}snt-two-column-feature snt-two-column .content snt-link{display:unset;margin-top:unset}snt-two-column-feature snt-two-column snt-image{display:-ms-flexbox;display:flex;width:100%;height:100%}snt-two-column-feature .mobile-hide-image snt-layout[viewport=extra-small] .image-column,.mobile-hide-image snt-two-column-feature snt-layout[viewport=extra-small] .image-column,snt-two-column-feature.mobile-hide-image snt-layout[viewport=extra-small] .image-column{display:none}snt-two-column-feature .mobile-hide-image snt-layout[viewport=small] .image-column,.mobile-hide-image snt-two-column-feature snt-layout[viewport=small] .image-column,snt-two-column-feature.mobile-hide-image snt-layout[viewport=small] .image-column{display:none}";

var __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$3 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
class TwoColumnFeatureComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.imagePosition = "left";
        this.primaryButtonText = StringUtils.empty();
        this.primaryButtonAction = StringUtils.empty();
        this.primaryButtonData = StringUtils.empty();
        this.secondaryButtonText = StringUtils.empty();
        this.secondaryButtonAction = StringUtils.empty();
        this.secondaryButtonData = StringUtils.empty();
        this.linkTitle = StringUtils.empty();
        this.linkUrl = StringUtils.empty();
        this.openLinkInNewWindow = false;
    }
    componentDidLoad() {
        this.layoutEl = this.hostElement.querySelector('snt-layout');
        if (this.dataEl && typeof (this.dataEl.getData) == 'function') {
            this.dataEl.getData().then(value => {
                this.context = new DefaultContext().fromObject(value);
                ViewportConfigurationService.getInstance().register(this, [Pair.of('snt-layout', this.layoutEl)], this.viewportResize);
            });
        }
    }
    viewportResize() {
        ViewportConfigurationService.getInstance().process(this, this.context, [Pair.of('imageElement', this.imageElement)]);
    }
    render() {
        const imageColumn = (h("div", { class: `image-column ${this.imagePosition}`, slot: this.imagePosition == "left" ? "left" : "right" }, h("snt-image", { "data-src": this.imagePath, "src-image": this.imagePath, "img-alt": this.imageAltText, ref: (el) => this.imageElement = el })));
        const primaryButtonContent = this.buildActionButton(this.primaryButtonText, this.primaryButtonAction, this.primaryButtonData, 'theme-default');
        const secondaryButtonContent = this.buildActionButton(this.secondaryButtonText, this.secondaryButtonAction, this.secondaryButtonData, 'theme-secondary');
        const linkContent = this.buildLink(this.linkTitle, this.linkUrl, 'theme-link');
        const contentColumn = (h("div", { class: "content-column", slot: this.imagePosition == "left" ? "right" : "left" }, h("div", { class: "content-container" }, h("h2", null, this.titleString), h("div", { class: "content", innerHTML: this.copyText }), primaryButtonContent, secondaryButtonContent, linkContent)));
        return [
            h("snt-two-column", null, imageColumn, contentColumn),
            h("div", null, this.properties
                ? h("snt-data", { type: "json", data: this.properties, ref: (el) => this.dataEl = el })
                : null)
        ];
    }
    buildActionButton(buttonText, buttonAction, buttonData, buttonClass) {
        return StringUtils.isEmpty(buttonText)
            ? null
            : h("snt-action-button", { "style-classes": 'cta ' + buttonClass, "action-reference": buttonAction, "action-data": buttonData, "link-title": buttonText });
    }
    buildLink(linkTitle, linkUrl, linkClass) {
        const linkContent = this.openLinkInNewWindow
            ? linkTitle
            : h("span", { class: "link-content" }, linkTitle);
        return StringUtils.isEmpty(linkTitle)
            ? null
            : h("snt-link", { "class-names": linkClass + ' theme-action', href: linkUrl, target: this.openLinkInNewWindow ? "_blank" : "" }, linkContent);
    }
    get hostElement() { return getElement(this); }
    static get style() { return twoColumnFeatureComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-two-column-feature",
        "$members$": {
            "titleString": [513, "title-string"],
            "copyText": [513, "copy-text"],
            "imagePath": [513, "image-path"],
            "imageAltText": [513, "image-alt-text"],
            "imagePosition": [513, "image-position"],
            "primaryButtonText": [1, "primary-button-text"],
            "primaryButtonAction": [1, "primary-button-action"],
            "primaryButtonData": [1, "primary-button-data"],
            "secondaryButtonText": [1, "secondary-button-text"],
            "secondaryButtonAction": [1, "secondary-button-action"],
            "secondaryButtonData": [1, "secondary-button-data"],
            "linkTitle": [1, "link-title"],
            "linkUrl": [1, "link-url"],
            "openLinkInNewWindow": [4, "open-link-in-new-window"],
            "properties": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": [["titleString", "title-string"], ["copyText", "copy-text"], ["imagePath", "image-path"], ["imageAltText", "image-alt-text"], ["imagePosition", "image-position"]]
    }; }
}
TwoColumnFeatureComponent.TAG_NAME = "snt-two-column";
__decorate$3([
    ViewportParameters([
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_SMALL.getLeft(), ComponentConstants.EXTRA_SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{mobileImageUrl}}')
            .with('src-image', '{{mobileImageUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.SMALL.getLeft(), ComponentConstants.SMALL.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{mobileImageUrl}}')
            .with('src-image', '{{mobileImageUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.MEDIUM.getLeft(), ComponentConstants.MEDIUM.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{tabletImageUrl}}')
            .with('src-image', '{{tabletImageUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.LARGE.getLeft(), ComponentConstants.LARGE.getRight())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{desktopImageUrl}}')
            .with('src-image', '{{desktopImageUrl}}')
            .build())
            .build(),
        ViewportParameterBuilder.newInstance()
            .withWidth(ComponentConstants.EXTRA_LARGE.getLeft())
            .withAttributes(ViewportAttributesBuilder.newInstance()
            .with('data-src', '{{desktopHdTabletUrl}}')
            .with('src-image', '{{desktopHdTabletUrl}}')
            .build())
            .build()
    ]),
    __metadata$3("design:type", HTMLElement)
], TwoColumnFeatureComponent.prototype, "imageElement", void 0);

class TwoColumnFeatureExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("h1", null, "Image Left"), h("snt-two-column-feature", { titleString: "My Title", copyText: "This is my content. <snt-link href='www.google.com'>This is my content.</snt-link> This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content.\r\n                     This is my content. This is my content. This is my content. This is my content. This is my content", imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("br", null), h("h1", null, "Image Right"), h("snt-two-column-feature", { titleString: "My Title", imagePosition: 'right', copyText: "This is my content.", imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("br", null), h("h1", null, "With Primary CTA"), h("snt-two-column-feature", { titleString: "My Title", copyText: "This is my content.", "primary-button-text": "Click Here", "primary-button-action": "Action.logAction", imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("br", null), h("h1", null, "With Secondary CTA"), h("snt-two-column-feature", { titleString: "My Title", copyText: "This is my content.", "secondary-button-text": "Click Here", "secondary-button-action": "Action.logAction", imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("br", null), h("h1", null, "With Link"), h("snt-two-column-feature", { titleString: "My Title", copyText: "This is my content.", "link-title": "Click for Google Click for Google Click, Click for Google Click for Google Click, Click for Google Click for Google Click, Click for Google Click for Google Click, Click for Google Click for Google Click", "link-url": "https://www.google.com", "open-link-in-new-window": "true", imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("h1", null, "With Neutral Fill"), h("snt-two-column-feature", { class: "neutral-fill", titleString: "My Title", copyText: "This is my content.", properties: '{\r\n                        "mobileImageUrl": "https://test-economical.dotcmscloud.com/dA/a4b641dacf/AUTO_couple_driving_on_the_road@1x.jpg",\r\n                        "tabletImageUrl": "https://test-economical.dotcmscloud.com/dA/a4b641dacf/AUTO_couple_driving_on_the_road@1x.jpg",\r\n                        "desktopImageUrl": "https://test-economical.dotcmscloud.com/dA/a009d82537/AUTO_couple_driving_on_the_roadr@2x.jpg",\r\n                        "desktopHdTabletUrl": "https://test-economical.dotcmscloud.com/dA/a009d82537/AUTO_couple_driving_on_the_roadr@2x.jpg"\r\n                    }', imagePath: "/asset/images/ins-tenant-desktop-hd-2x.jpg" }), h("h1", null, "With image hidden on mobile"), h("snt-two-column-feature", { class: "mobile-hide-image", titleString: "My Title", copyText: "This is my content.", "primary-button-text": "Click Here", "primary-button-action": "Action.logAction", imagePath: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" }), h("h1", null, "With image hidden on mobile when image is on right"), h("snt-two-column-feature", { class: "mobile-hide-image", titleString: "My Title", imagePosition: 'right', copyText: "This is my content.", imagePath: "https://www.sonnet.ca/_Sonnet/images/page-specific/featured-blog/make-sure-youre-covered-tablet-1x.jpg" })));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "two-column-feature-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
TwoColumnFeatureExample.TAG_NAME = "two-column-feature-example";

class VerticalTabExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", { class: "container combined-top" }, h("snt-vertical-tabs", null, h("div", { class: "panel-wrapper" }, h("snt-data", { type: "json", id: "panel-1", data: '{"link": {"id": "1", "title": "Test Insurance"}}' }), h("section", { class: "panel", id: "panel-tab-1", "aria-hidden": "true" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "title-string": "Main component", "logo-sources": "", "style-classes": "center", href: "#", "link-label": "test here" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."))), h("snt-data", { type: "json", id: "panel-2", data: '{"link": {"id": "1", "title": "Auto Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "title-string": "Main component", "logo-sources": "", "style-classes": "center", href: "#", "link-label": "test here" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p.                             "))), h("snt-data", { type: "json", id: "panel-2", data: '{"link": {"id": "2", "title": "Home Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "title-string": "Main component", "logo-sources": "", "style-classes": "center", href: "#", "link-label": "test here" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.                                "))), h("snt-data", { type: "json", id: "panel-3", data: '{"link": {"id": "3", "title": "Condo Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "title-string": "Main component", "logo-sources": "", "style-classes": "center", href: "#", "link-label": "test here" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.                                "))))), h("br", null), h("snt-vertical-tabs", null, h("div", { class: "panel-wrapper" }, h("snt-data", { type: "json", id: "panel-1", data: '{"link": {"id": "1", "title": "Test Insurance"}}' }), h("section", { class: "panel", role: "tabpanel", tabindex: "0", id: "panel-tab-1", "aria-hidden": "true" }, h("snt-ad", { "icon-sources": '{\r\n                                "largeIconUrl": "https://img.icons8.com/dotty/45/000000/user.png",\r\n                                "smallIconUrl": "https://img.icons8.com/dotty/30/000000/homer-simpson--v2.png"\r\n                            }', "title-string": "Main component", "logo-sources": "", "style-classes": "center", href: "#", "link-label": "test here" }, h("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum p."))), h("snt-data", { type: "json", id: "panel-2", data: '{"link": {"id": "1", "title": "Auto Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, "content panel 2"), h("snt-data", { type: "json", id: "panel-2", data: '{"link": {"id": "2", "title": "Home Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, "content panel 3"), h("snt-data", { type: "json", id: "panel-3", data: '{"link": {"id": "3", "title": "Condo Insurance"}}' }), h("section", { class: "panel", "aria-hidden": "true" }, "content panel 4")))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "vertical-tab-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
VerticalTabExample.TAG_NAME = "vertical-tab-example";

var bind = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString$2 = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray$1(val) {
  return toString$2.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString$2.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject$1(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString$2.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString$2.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString$2.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString$2.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject$1(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray$1(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend$1(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

var utils = {
  isArray: isArray$1,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject$1,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend$1,
  trim: trim
};

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
var buildURL = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

var InterceptorManager_1 = InterceptorManager;

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
var transformData = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};

var isCancel = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

var normalizeHeaderName = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
var enhanceError = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
var createError = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
var settle = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
var isAbsoluteURL = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
var combineURLs = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
var buildFullPath = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
var parseHeaders = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

var isURLSameOrigin = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);

var cookies = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);

var xhr = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies$1 = cookies;

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies$1.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = xhr;
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = xhr;
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

var defaults_1 = defaults;

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
var dispatchRequest = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults_1.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
var mergeConfig = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager_1(),
    response: new InterceptorManager_1()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

var Axios_1 = Axios;

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

var Cancel_1 = Cancel;

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel_1(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

var CancelToken_1 = CancelToken;

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
var spread = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios_1(defaultConfig);
  var instance = bind(Axios_1.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios_1.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults_1);

// Expose Axios class to allow class inheritance
axios.Axios = Axios_1;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = Cancel_1;
axios.CancelToken = CancelToken_1;
axios.isCancel = isCancel;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;

var axios_1 = axios;

// Allow use of default import syntax in TypeScript
var _default = axios;
axios_1.default = _default;

var axios$1 = axios_1;

const videoComponentCss = "snt-video{display:block;width:100%}.light-fill snt-video,snt-video.light-fill{display:block;background-color:#d9f0f4;color:#323232}.neutral-fill snt-video,snt-video.neutral-fill{display:block;background-color:#f8f8f8;color:#323232}.dark-fill snt-video,snt-video.dark-fill{display:block;background-color:#147582;color:#ffffff}.white-fill snt-video,snt-video.white-fill{display:block;background-color:#ffffff;color:#323232}.error-fill snt-video,snt-video.error-fill{display:block;background-color:#d9f0f4;background-image:none;color:#323232}snt-video .intro{text-align:center}snt-video .intro h3{margin-bottom:0.9375rem;font-size:1.1875rem;line-height:1.5rem;text-align:left}@media (min-width: 768px){snt-video .intro h3{margin-bottom:1.25rem;text-align:center}}@media (min-width: 1024px){snt-video .intro h3{margin-bottom:1.5625rem;font-size:1.3125rem;line-height:1.625rem}}@media (min-width: 1440px){snt-video .intro h3{font-size:1.75rem;line-height:2.125rem}}snt-video .intro p{margin-bottom:1.25rem;text-align:left}@media (min-width: 768px){snt-video .intro p{text-align:center;margin-bottom:1.25rem}}@media (min-width: 1024px){snt-video .intro p{margin-bottom:1.875rem}}snt-video .player-embed{position:relative;margin-bottom:1.25rem}@media (min-width: 768px){snt-video .player-embed{margin-bottom:1.25rem}}@media (min-width: 1024px){snt-video .player-embed{margin-bottom:1.875rem}}snt-video snt-accordion .transcript-summary-open{display:none}snt-video snt-accordion .transcript-summary-close{display:block}snt-video snt-accordion[expanded] .transcript-summary-open{display:block}snt-video snt-accordion[expanded] .transcript-summary-close{display:none}";

var __awaiter$w = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class VideoComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentWillLoad() {
        return __awaiter$w(this, void 0, void 0, function* () {
            yield this.processOembed();
        });
    }
    processOembed() {
        return __awaiter$w(this, void 0, void 0, function* () {
            const fullOembedUrl = this.getFullOembedUrl(this.shareUrl, this.oembedUrl, this.playUrl);
            yield axios$1.get(fullOembedUrl).then((oembedResponse) => {
                const docFragment = this.getDocumentFragmentFromHtmlString(oembedResponse.data.html);
                const playerEmbed = this.getPlayerEmbed(docFragment);
                this.playerScript = this.getPlayerScript(docFragment);
                //Vidyard embed code that gets replaced with the iFrame                        
                this.playerEmbed = h("div", { class: "player-embed", innerHTML: playerEmbed.outerHTML });
            });
        });
    }
    componentDidLoad() {
        //Add Vidyard script that replaces embed code with iFrame
        if (document.querySelector(`script[src="${this.playerScript.src}"]`) == null) {
            document.body.appendChild(this.playerScript);
        }
    }
    getFullOembedUrl(shareUrl, oembedUrl, playUrl) {
        const uuid = shareUrl.match(/[^\/]+$/);
        const fullPlayUrl = playUrl + '/' + uuid;
        return `${oembedUrl}?url=${fullPlayUrl}&format=json`;
    }
    getDocumentFragmentFromHtmlString(htmlString) {
        const domParser = new DOMParser();
        return domParser.parseFromString(htmlString, 'text/html');
    }
    getPlayerScript(docFragment) {
        const playerScript = document.createElement("script");
        const unexecutablePlayerScrupt = docFragment.querySelector('script');
        playerScript.setAttribute("src", unexecutablePlayerScrupt.getAttribute('src'));
        playerScript.setAttribute("type", unexecutablePlayerScrupt.getAttribute('type'));
        playerScript.setAttribute("async", unexecutablePlayerScrupt.getAttribute('async'));
        playerScript.classList.add("player-script");
        return playerScript;
    }
    getPlayerEmbed(docFragment) {
        const playerEmbed = docFragment.querySelector('.vidyard-player-embed');
        playerEmbed.setAttribute('data-width', '');
        playerEmbed.setAttribute('data-height', '');
        return playerEmbed;
    }
    render() {
        return (h("snt-layout", null, h("div", { class: "intro" }, h("h3", { class: "headline" }, this.headline), h("slot", { name: "description" })), this.playerEmbed, this.transcriptSummaryOpen && this.transcriptSummaryClose
            ? h("snt-accordion", { class: "transcript-accordion", id: `${this.element.id}-accordion` }, h("div", { slot: "summary" }, h("span", { class: "transcript-summary-open" }, this.transcriptSummaryOpen), h("span", { class: "transcript-summary-close" }, this.transcriptSummaryClose)), h("div", { slot: "details" }, h("slot", { name: "transcript-details" })))
            : null));
    }
    get element() { return getElement(this); }
    static get style() { return videoComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-video",
        "$members$": {
            "headline": [1],
            "shareUrl": [1, "share-url"],
            "oembedUrl": [1, "oembed-url"],
            "playUrl": [1, "play-url"],
            "transcriptSummaryOpen": [1, "transcript-summary-open"],
            "transcriptSummaryClose": [1, "transcript-summary-close"],
            "playerEmbed": [32]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
VideoComponent.TAG_NAME = "snt-video";

class VideoExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", { class: "main-wrapper" }, h("h1", null, "Video Component Demo"), h("br", null), h("br", null), h("div", { class: "individual-wrapper neutral-fill" }, h("snt-video", { id: "video-one", headline: "Video 1: Title, Description and Transcript. ", shareUrl: "https://videos.sonnet.ca/watch/PtL3pNmQZdc9ctaMd6mgup?", oembedUrl: "https://api.vidyard.com/dashboard/v1.1/oembed", playUrl: "https://play.vidyard.com", transcriptSummaryOpen: 'Close "Video 1: Title, Description and Transcript." Transcript', transcriptSummaryClose: 'Open "Video 1: Title, Description and Transcript." Transcript' }, h("div", { slot: "description" }, h("p", null, "Lorem ipsum dolor sit amet, ", h("b", null, "consectetur adipisicing"), " elit, sed do dolore magna aliqua. ", h("br", null), "Ut enim ad minim")), h("div", { slot: "transcript-details" }, h("p", null, "[We open on a scoreboard that reads\u2026]"), h("p", null, "[On-screen text: Young Stars vs. The Legends + the Sonnet Brand Mark]"), h("p", null, "[Speaker: Announcer]"), h("p", null, "[Cut to the dressing room where our coach speaks to the Young Stars.]"), h("p", null, "[The Young Stars are working out on a Bosu ball and use resistance bands.]"), h("p", null, "[Morgan Rielly speaks to the coach.]"), h("p", null, "[Speaker: Morgan Rielly // Job Title: Defenseman, Toronto Maple Leafs]"), h("p", null, "[We hear a slapping sound. The Young Stars and coach look around for the source of the sound.]"), h("p", null, "[We cut to the Legends laying face down on massage tables, being worked on by burly masseurs.]"), h("p", null, "[Speaker: Doug Gilmour // Job Title: Former Professional Hockey Player]"), h("p", null, "[The Young Stars shake their heads in disbelief]"), h("p", null, "[Cut back to the scoreboard to see a laptop with the Sonnet welcome page on it, followed by product screens of the Sonnet purchase experience.]")))), h("div", { class: "individual-wrapper" }, h("snt-video", { id: "video-two", headline: "Video 2: Title and Transcript only. No Description.", shareUrl: "https://videos.sonnet.ca/watch/Y3WnSxmoADZCaHD7EkJmNK?", oembedUrl: "https://api.vidyard.com/dashboard/v1.1/oembed", playUrl: "https://play.vidyard.com", transcriptSummaryOpen: 'Close "Video 2: Title and Transcript only. No Description." Transcript', transcriptSummaryClose: 'Open "Video 2: Title and Transcript only. No Description." Transcript' }, h("div", { slot: "transcript-details" }, h("p", null, "[We open on a scoreboard that reads\u2026]"), h("p", null, "[On-screen text: Young Stars vs. The Legends + the Sonnet Brand Mark]"), h("p", null, "[Speaker: Announcer]"), h("p", null, "[Cut to the dressing room where our coach speaks to the Young Stars.]"), h("p", null, "[The Young Stars are working out on a Bosu ball and use resistance bands.]"), h("p", null, "[Morgan Rielly speaks to the coach.]"), h("p", null, "[Speaker: Morgan Rielly // Job Title: Defenseman, Toronto Maple Leafs]"), h("p", null, "[We hear a slapping sound. The Young Stars and coach look around for the source of the sound.]"), h("p", null, "[We cut to the Legends laying face down on massage tables, being worked on by burly masseurs.]"), h("p", null, "[Speaker: Doug Gilmour // Job Title: Former Professional Hockey Player]"), h("p", null, "[The Young Stars shake their heads in disbelief]"), h("p", null, "[Cut back to the scoreboard to see a laptop with the Sonnet welcome page on it, followed by product screens of the Sonnet purchase experience.]")))), h("div", { class: "individual-wrapper neutral-fill" }, h("snt-video", { id: "video-three", shareUrl: "https://videos.sonnet.ca/watch/auXSgJKKLSn5CUTcSQyPoe?", oembedUrl: "https://api.vidyard.com/dashboard/v1.1/oembed", playUrl: "https://play.vidyard.com", transcriptSummaryOpen: 'Close "Video 3: Video Only. No Title, Description or Transcript." Transcript', transcriptSummaryClose: 'Open "Video 3: Video Only. No Title, Description or Transcript.' }, h("div", { slot: "transcript-details" }, h("p", null, "[We open on a scoreboard that reads\u2026]"), h("p", null, "[On-screen text: Young Stars vs. The Legends + the Sonnet Brand Mark]"), h("p", null, "[Speaker: Announcer]"), h("p", null, "[Cut to the dressing room where our coach speaks to the Young Stars.]"), h("p", null, "[The Young Stars are working out on a Bosu ball and use resistance bands.]"), h("p", null, "[Morgan Rielly speaks to the coach.]"), h("p", null, "[Speaker: Morgan Rielly // Job Title: Defenseman, Toronto Maple Leafs]"), h("p", null, "[We hear a slapping sound. The Young Stars and coach look around for the source of the sound.]"), h("p", null, "[We cut to the Legends laying face down on massage tables, being worked on by burly masseurs.]"), h("p", null, "[Speaker: Doug Gilmour // Job Title: Former Professional Hockey Player]"), h("p", null, "[The Young Stars shake their heads in disbelief]"), h("p", null, "[Cut back to the scoreboard to see a laptop with the Sonnet welcome page on it, followed by product screens of the Sonnet purchase experience.]"))))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "video-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
VideoExample.TAG_NAME = "video-example";

class ViewportComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.name = '';
        this.devices = '';
        this.height = '';
        this.spacing = '';
    }
    render() {
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-viewport",
        "$members$": {
            "name": [1],
            "devices": [1],
            "height": [1],
            "spacing": [1]
        },
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

const wysiwygComponentCss = "snt-wysiwyg h1{margin-bottom:40px}snt-wysiwyg h2{margin-top:40px;margin-bottom:15px}snt-wysiwyg h3,snt-wysiwyg h4{margin-top:20px;margin-bottom:10px}snt-wysiwyg ul li{margin-top:23px;margin-bottom:23px}@media (min-width: 768px){snt-wysiwyg h2{margin-bottom:20px}}@media (min-width: 1024px){snt-wysiwyg h1{margin-bottom:60px}snt-wysiwyg h2{margin-top:60px;margin-bottom:25px}snt-wysiwyg h3,snt-wysiwyg h4{margin-top:30px;margin-bottom:15px}snt-wysiwyg ul li{margin-top:26px;margin-bottom:26px}}@media (min-width: 1440px){snt-wysiwyg h2{margin-bottom:30px}}snt-wysiwyg .blog-icon-item{display:none}@media (min-width: 768px){snt-wysiwyg .blog-icon-item{display:inline-block;vertical-align:middle;width:30px;height:30px;padding:12px}}@media (min-width: 1440px){snt-wysiwyg .blog-icon-item{width:45px;height:45px;padding:15px}}snt-wysiwyg .photo-credit{font-size:12px;display:-ms-flexbox;display:flex;margin-top:-22px}snt-wysiwyg blockquote.bio-blurb{line-height:1.2;max-width:85rem;margin-top:2rem;padding:10px 20px;margin:0 0 20px;border-left:5px solid #acdde4}snt-wysiwyg blockquote.bio-blurb>p{font-size:14px;line-height:1.5}@media (min-width: 1024px){snt-wysiwyg blockquote.bio-blurb>p{font-size:16px}}snt-wysiwyg blockquote.bio-blurb>p::before,snt-wysiwyg blockquote.bio-blurb>p::after{content:\"\"}snt-wysiwyg .blog-icon-container{border:2px solid #acdde4;border-radius:150px;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;display:-ms-flexbox;display:flex}@media (min-width: 768px){snt-wysiwyg .blog-icon-container{width:60px;height:60px}}@media (min-width: 1024px){snt-wysiwyg .blog-icon-container{width:80px;height:80px}}snt-wysiwyg .blog-logo-item{display:block;padding:40px 0 40px 0}@media (min-width: 1024px){snt-wysiwyg .blog-logo-item{padding:60px 0 60px 0}}snt-wysiwyg blockquote{position:relative;margin:0 12px}snt-wysiwyg blockquote>p{font-family:\"Averta-RegularItalic\", Arial, Helvetica, sans-serif;font-style:italic;font-size:1rem;line-height:1.75rem}@media screen and (min-width: 768px){snt-wysiwyg blockquote>p{font-size:1.1875rem;line-height:1.875rem}}@media screen and (min-width: 1024px){snt-wysiwyg blockquote>p{font-size:1.3125rem;line-height:1.96875rem}}@media screen and (min-width: 1440px){snt-wysiwyg blockquote>p{font-size:1.75rem;line-height:2.8125rem}}snt-wysiwyg blockquote>p::before,snt-wysiwyg blockquote>p::after{position:absolute;display:inline-block;color:#147582;font-family:\"Averta-Bold\", Arial, Helvetica, sans-serif;line-height:90%}snt-wysiwyg blockquote>p::before{right:calc(100% + 0.25rem);content:open-quote}snt-wysiwyg blockquote>p::after{content:close-quote}snt-wysiwyg .sub-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}snt-wysiwyg .sub-header p{margin-bottom:0 !important;float:left !important}snt-wysiwyg .sub-header h2{margin:0 0 0 0}@media screen and (min-width: 768px){snt-wysiwyg .sub-header h2{margin:0 0 0 15px}}snt-wysiwyg .blue-circle{display:none;width:-webkit-max-content;width:-moz-max-content;width:max-content;border-radius:50%;border:3px solid #acdde4;margin-left:0}@media screen and (min-width: 768px){snt-wysiwyg .blue-circle{display:block}}snt-wysiwyg .no-bullet{list-style:none}snt-wysiwyg .bio-blurb{max-width:85rem;margin-top:2rem;padding:10px 20px;margin:0 0 20px;border-left:5px solid #acdde4}snt-wysiwyg .bio-blurb a[target=_blank]{margin-right:1.5rem}snt-wysiwyg .embed-container{position:relative;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}snt-wysiwyg .embed-container iframe,snt-wysiwyg .embed-container object,snt-wysiwyg .embed-container embed{position:absolute;top:0;left:0;width:100%;height:100%;border:0px}";

class WYSIWYGComponent {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("div", null, h("slot", null)));
    }
    static get style() { return wysiwygComponentCss; }
    static get cmpMeta() { return {
        "$flags$": 4,
        "$tagName$": "snt-wysiwyg",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}

class sntTabsExample {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    render() {
        return (h("snt-tabs", null, h("div", { class: "tab-header" }, h("div", { class: "tab-item" }, h("p", null, h("a", { class: "title selected", id: "faq", "data-text": "FAQs" }, "FAQs"))), h("div", { class: "tab-item" }, h("p", null, " ", h("a", { class: "title", id: "related", "data-text": "Related article" }, "Related article ")))), h("div", { class: "panel-wrapper" }, h("section", { class: "panel" }, h("snt-article-list", { articlesJson: '{ "articles": [\r\n                        {\r\n                            "href": "https://www.google.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google. Click here to go to Google"\r\n                        },\r\n                        {\r\n                            "href": "https://www.yahoo.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Yahoo"\r\n                        },\r\n                        {\r\n                            "href": "https://www.facebook.com",\r\n                            "ariaLabel": "aria label",\r\n                            "hiddenTitle": "",\r\n                            "copy": "Click here to go to Facebook"\r\n                        }\r\n                    ]}' })), h("section", { class: "panel" }, "content panel 2"))));
    }
    static get cmpMeta() { return {
        "$flags$": 0,
        "$tagName$": "snt-tabs-example",
        "$members$": undefined,
        "$listeners$": undefined,
        "$lazyBundleId$": "-",
        "$attrsToReflect$": []
    }; }
}
sntTabsExample.TAG_NAME = "snt-tabs-example";

registerComponents([
  AccordionBuilderComponent,
  AccordionComponent,
  AccordionExample,
  AccordionExample$1,
  AccordionGroupBuilderComponent,
  AccordionGroupComponent,
  ActionButtonComponent,
  ActionLinkComponent,
  AdComponent,
  AdExample,
  AlertsBanner,
  ArticleLinkComponent,
  ArticleListComponent,
  ArticleListExample,
  AsyncContent,
  BackdropComponent,
  BlogComponent,
  BlogExample,
  BlogFeaturedArticlesExample,
  BlogResultsExample,
  BreadcrumbComponent,
  BreadcrumbExample,
  ButtonComponent,
  ButtonLinkComponent,
  ButtonLinkExample,
  ButtonLinkGroupComponent,
  CommonStylesExample,
  ConnectOffersComponent,
  ConnectOffersExample,
  ContextConsumer,
  CtaHighlightComponent,
  CtaHightlightExample,
  CtaReminderComponent,
  CtaReminderExample,
  DataComponent,
  DemoApp,
  DemoAppHome,
  DropdownComponent,
  DropdownExample,
  EnhancedButtonComponent,
  EventComponent,
  FAQBlockComponent,
  FAQBlockExample,
  FAQBlockListComponent,
  FAQFilterSliderComponent,
  FAQFiltersliderExample,
  FAQPaginationComponent,
  FAQPaginationExample,
  FeatureLeftComponent,
  FeatureLeftExample,
  FeatureRightComponent,
  FeatureRightExample,
  FooterComponent,
  FooterExample,
  FooterExample$1,
  FormComponent,
  GetAQuoteExample,
  HeaderComponent,
  HeaderExample,
  HeroComponent,
  HeroExample,
  IconComponent,
  IconCopyComponent,
  IconCopyComponent$1,
  IconCopyExample,
  ImageComponent,
  ImageExample,
  ImageIconComponent,
  ImageIconExample,
  LayoutComponent,
  LinkComponent,
  LinkExample,
  LoginComponent,
  ModalComponent,
  MultiButtonComponent,
  MultiColumnComponent,
  MultiColumnExample,
  NavComponent,
  NavItemComponent,
  NavbarBrandComponent,
  NavbarCollapseComponent,
  NavbarComponent,
  NavbarToggleComponent,
  PageNotFoundExample,
  PaneComponent,
  PanelComponent,
  PanelExample,
  RecaptchaComponent,
  RecaptchaExample,
  Redirect,
  ResponsiveImagesExample,
  Route,
  RouteLink,
  RouteSwitch,
  RouteTitle,
  Router,
  SearchBarComponent,
  SearchComboboxComponent,
  SearchComboboxExample,
  SearchPanelComponent,
  SearchResultComponent,
  SearchResultListComponent,
  SearchResultsExample,
  SearchTypeaheadComponent,
  ShoppingCartComponent,
  SkipToMainComponent,
  SkipToMainExample,
  SntBlogFeaturedArticles,
  SntBlogInfo,
  SntBlogResultsComponent,
  SntTabs,
  SntVerticalTabs,
  SourceLinkComponent,
  SourceListComponent,
  SourceListExample,
  StencilRouterPrompt,
  TestimonialExample,
  TestimonialsComponent,
  TestimonialsGroupComponent,
  ThreeColumnComponent,
  ThreeColumnComponent$1,
  ThreeColumnExample,
  ThreeColumnExample$1,
  TipComponent,
  TipExample,
  TitleComponent,
  TitleCopyComponent,
  TitleCopyExample,
  TitleExample,
  ToggleComponent,
  TreeviewComponent,
  TreeviewExample,
  TwoColumnComponent,
  TwoColumnExample,
  TwoColumnFeatureComponent,
  TwoColumnFeatureExample,
  VerticalTabExample,
  VideoComponent,
  VideoExample,
  ViewportComponent,
  WYSIWYGComponent,
  sntTabsExample,
]);

exports.hydrateApp = hydrateApp;


  /*hydrateAppClosure end*/
  hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);
  }

  hydrateAppClosure($stencilWindow);
}

function createWindowFromHtml(e, t) {
  let r = templateWindows.get(t);
  return null == r && (r = new MockWindow(e), templateWindows.set(t, r)), cloneWindow(r);
}

function normalizeHydrateOptions(e) {
  const t = Object.assign({
    serializeToHtml: !1,
    destroyWindow: !1,
    destroyDocument: !1
  }, e || {});
  return "boolean" != typeof t.clientHydrateAnnotations && (t.clientHydrateAnnotations = !0), 
  "boolean" != typeof t.constrainTimeouts && (t.constrainTimeouts = !0), "number" != typeof t.maxHydrateCount && (t.maxHydrateCount = 300), 
  "boolean" != typeof t.runtimeLogging && (t.runtimeLogging = !1), "number" != typeof t.timeout && (t.timeout = 15e3), 
  Array.isArray(t.excludeComponents) ? t.excludeComponents = t.excludeComponents.filter(filterValidTags).map(mapValidTags) : t.excludeComponents = [], 
  Array.isArray(t.staticComponents) ? t.staticComponents = t.staticComponents.filter(filterValidTags).map(mapValidTags) : t.staticComponents = [], 
  t;
}

function filterValidTags(e) {
  return "string" == typeof e && e.includes("-");
}

function mapValidTags(e) {
  return e.trim().toLowerCase();
}

function generateHydrateResults(e) {
  "string" != typeof e.url && (e.url = "https://hydrate.stenciljs.com/");
  const t = {
    diagnostics: [],
    url: e.url,
    host: null,
    hostname: null,
    href: null,
    pathname: null,
    port: null,
    search: null,
    hash: null,
    html: null,
    httpStatus: null,
    hydratedCount: 0,
    anchors: [],
    components: [],
    imgs: [],
    scripts: [],
    styles: [],
    title: null
  };
  try {
    const r = new URL(e.url, "https://hydrate.stenciljs.com/");
    t.url = r.href, t.host = r.host, t.hostname = r.hostname, t.href = r.href, t.port = r.port, 
    t.pathname = r.pathname, t.search = r.search, t.hash = r.hash;
  } catch (e) {
    renderCatchError(t, e);
  }
  return t;
}

function renderBuildDiagnostic(e, t, r, s) {
  const n = {
    level: t,
    type: "build",
    header: r,
    messageText: s,
    relFilePath: null,
    absFilePath: null,
    lines: []
  };
  return e.pathname ? "/" !== e.pathname && (n.header += ": " + e.pathname) : e.url && (n.header += ": " + e.url), 
  e.diagnostics.push(n), n;
}

function renderBuildError(e, t) {
  return renderBuildDiagnostic(e, "error", "Hydrate Error", t);
}

function renderCatchError(e, t) {
  const r = renderBuildError(e, null);
  return null != t && (null != t.stack ? r.messageText = t.stack.toString() : null != t.message ? r.messageText = t.message.toString() : r.messageText = t.toString()), 
  r;
}

function runtimeLog(e, t, r) {
  global.console[t].apply(global.console, [ `[ ${e}  ${t} ] `, ...r ]);
}

function collectAttributes(e) {
  const t = {}, r = e.attributes;
  for (let e = 0, s = r.length; e < s; e++) {
    const s = r.item(e), n = s.nodeName.toLowerCase();
    if (SKIP_ATTRS.has(n)) continue;
    const o = s.nodeValue;
    "class" === n && "" === o || (t[n] = o);
  }
  return t;
}

function patchDomImplementation(e, t) {
  let r;
  if (null != e.defaultView ? (t.destroyWindow = !0, patchWindow(e.defaultView), r = e.defaultView) : (t.destroyWindow = !0, 
  t.destroyDocument = !1, r = new MockWindow(!1)), r.document !== e && (r.document = e), 
  e.defaultView !== r && (e.defaultView = r), "function" != typeof e.documentElement.constructor.prototype.getRootNode && (e.createElement("unknown-element").constructor.prototype.getRootNode = getRootNode), 
  "function" == typeof e.createEvent) {
    const t = e.createEvent("CustomEvent").constructor;
    r.CustomEvent !== t && (r.CustomEvent = t);
  }
  try {
    e.baseURI;
  } catch (t) {
    Object.defineProperty(e, "baseURI", {
      get() {
        const t = e.querySelector("base[href]");
        return t ? new URL(t.getAttribute("href"), r.location.href).href : r.location.href;
      }
    });
  }
  return r;
}

function getRootNode(e) {
  const t = null != e && !0 === e.composed;
  let r = this;
  for (;null != r.parentNode; ) r = r.parentNode, !0 === t && null == r.parentNode && null != r.host && (r = r.host);
  return r;
}

function renderToString(e, t) {
  const r = normalizeHydrateOptions(t);
  return r.serializeToHtml = !0, new Promise(t => {
    const s = generateHydrateResults(r);
    if (hasError(s.diagnostics)) t(s); else if ("string" == typeof e) try {
      r.destroyWindow = !0, r.destroyDocument = !0, render(new MockWindow(e), r, s, t);
    } catch (e) {
      renderCatchError(s, e), t(s);
    } else if (isValidDocument(e)) try {
      r.destroyDocument = !1, render(patchDomImplementation(e, r), r, s, t);
    } catch (e) {
      renderCatchError(s, e), t(s);
    } else renderBuildError(s, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
    t(s);
  });
}

function hydrateDocument(e, t) {
  const r = normalizeHydrateOptions(t);
  return r.serializeToHtml = !1, new Promise(t => {
    const s = generateHydrateResults(r);
    if (hasError(s.diagnostics)) t(s); else if ("string" == typeof e) try {
      r.destroyWindow = !0, r.destroyDocument = !0, render(new MockWindow(e), r, s, t);
    } catch (e) {
      renderCatchError(s, e), t(s);
    } else if (isValidDocument(e)) try {
      r.destroyDocument = !1, render(patchDomImplementation(e, r), r, s, t);
    } catch (e) {
      renderCatchError(s, e), t(s);
    } else renderBuildError(s, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
    t(s);
  });
}

function render(e, t, r, s) {
  if (process.__stencilErrors || (process.__stencilErrors = !0, process.on("unhandledRejection", e => {
    console.log("unhandledRejection", e);
  })), function n(e, t, r) {
    try {
      e.location.href = t.url;
    } catch (e) {
      renderCatchError(r, e);
    }
    if ("string" == typeof t.userAgent) try {
      e.navigator.userAgent = t.userAgent;
    } catch (e) {}
    if ("string" == typeof t.cookie) try {
      e.document.cookie = t.cookie;
    } catch (e) {}
    if ("string" == typeof t.referrer) try {
      e.document.referrer = t.referrer;
    } catch (e) {}
    if ("string" == typeof t.direction) try {
      e.document.documentElement.setAttribute("dir", t.direction);
    } catch (e) {}
    if ("string" == typeof t.language) try {
      e.document.documentElement.setAttribute("lang", t.language);
    } catch (e) {}
    try {
      e.customElements = null;
    } catch (e) {}
    return t.constrainTimeouts && constrainTimeouts(e), function s(e, t, r) {
      try {
        const s = e.location.pathname;
        e.console.error = (...e) => {
          renderCatchError(r, [ ...e ].join(", ")), t.runtimeLogging && runtimeLog(s, "error", e);
        }, e.console.debug = (...e) => {
          renderBuildDiagnostic(r, "debug", "Hydrate Debug", [ ...e ].join(", ")), t.runtimeLogging && runtimeLog(s, "debug", e);
        }, t.runtimeLogging && [ "log", "warn", "assert", "info", "trace" ].forEach(t => {
          e.console[t] = (...e) => {
            runtimeLog(s, t, e);
          };
        });
      } catch (e) {
        renderCatchError(r, e);
      }
    }(e, t, r), e;
  }(e, t, r), "function" == typeof t.beforeHydrate) try {
    const n = t.beforeHydrate(e.document);
    isPromise(n) ? n.then(() => {
      hydrateFactory(e, t, r, afterHydrate, s);
    }) : hydrateFactory(e, t, r, afterHydrate, s);
  } catch (n) {
    renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
  } else hydrateFactory(e, t, r, afterHydrate, s);
}

function afterHydrate(e, t, r, s) {
  if ("function" == typeof t.afterHydrate) try {
    const n = t.afterHydrate(e.document);
    isPromise(n) ? n.then(() => {
      finalizeHydrate(e, e.document, t, r, s);
    }) : finalizeHydrate(e, e.document, t, r, s);
  } catch (n) {
    renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
  } else finalizeHydrate(e, e.document, t, r, s);
}

function finalizeHydrate(e, t, r, s, n) {
  try {
    if (function e(t, r, s) {
      const n = r.children;
      for (let r = 0, o = n.length; r < o; r++) {
        const o = n[r], i = o.nodeName.toLowerCase();
        if (i.includes("-")) {
          const e = t.components.find(e => e.tag === i);
          null != e && (e.count++, s > e.depth && (e.depth = s));
        } else switch (i) {
         case "a":
          const e = collectAttributes(o);
          e.href = o.href, "string" == typeof e.href && (t.anchors.some(t => t.href === e.href) || t.anchors.push(e));
          break;

         case "img":
          const r = collectAttributes(o);
          r.src = o.src, "string" == typeof r.src && (t.imgs.some(e => e.src === r.src) || t.imgs.push(r));
          break;

         case "link":
          const s = collectAttributes(o);
          s.href = o.href, "string" == typeof s.rel && "stylesheet" === s.rel.toLowerCase() && "string" == typeof s.href && (t.styles.some(e => e.link === s.href) || (delete s.rel, 
          delete s.type, t.styles.push(s)));
          break;

         case "script":
          const n = collectAttributes(o);
          n.src = o.src, "string" == typeof n.src && (t.scripts.some(e => e.src === n.src) || t.scripts.push(n));
        }
        e(t, o, ++s);
      }
    }(s, t.documentElement, 0), !1 !== r.removeUnusedStyles) try {
      ((e, t) => {
        try {
          const r = e.head.querySelectorAll("style[data-styles]"), s = r.length;
          if (s > 0) {
            const n = (e => {
              const t = {
                attrs: new Set,
                classNames: new Set,
                ids: new Set,
                tags: new Set
              };
              return collectUsedSelectors(t, e), t;
            })(e.documentElement);
            for (let e = 0; e < s; e++) removeUnusedStyleText(n, t, r[e]);
          }
        } catch (e) {
          ((e, t, r) => {
            const s = {
              level: "error",
              type: "build",
              header: "Build Error",
              messageText: "build error",
              relFilePath: null,
              absFilePath: null,
              lines: []
            };
            null != t && (null != t.stack ? s.messageText = t.stack.toString() : null != t.message ? s.messageText = t.message.toString() : s.messageText = t.toString()), 
            null == e || shouldIgnoreError(s.messageText) || e.push(s);
          })(t, e);
        }
      })(t, s.diagnostics);
    } catch (e) {
      renderCatchError(s, e);
    }
    if ("string" == typeof r.title) try {
      t.title = r.title;
    } catch (e) {
      renderCatchError(s, e);
    }
    s.title = t.title, r.removeScripts && function e(t) {
      const r = t.children;
      for (let t = r.length - 1; t >= 0; t--) {
        const s = r[t];
        e(s), ("SCRIPT" === s.nodeName || "LINK" === s.nodeName && "modulepreload" === s.getAttribute("rel")) && s.remove();
      }
    }(t.documentElement);
    try {
      ((e, t) => {
        let r = e.head.querySelector('link[rel="canonical"]');
        "string" == typeof t ? (null == r && (r = e.createElement("link"), r.setAttribute("rel", "canonical"), 
        e.head.appendChild(r)), r.setAttribute("href", t)) : null != r && (r.getAttribute("href") || r.parentNode.removeChild(r));
      })(t, r.canonicalUrl);
    } catch (e) {
      renderCatchError(s, e);
    }
    try {
      (e => {
        const t = e.head;
        let r = t.querySelector("meta[charset]");
        null == r ? (r = e.createElement("meta"), r.setAttribute("charset", "utf-8")) : r.remove(), 
        t.insertBefore(r, t.firstChild);
      })(t);
    } catch (e) {}
    hasError(s.diagnostics) || (s.httpStatus = 200);
    try {
      const e = t.head.querySelector('meta[http-equiv="status"]');
      if (null != e) {
        const t = e.getAttribute("content");
        t && t.length > 0 && (s.httpStatus = parseInt(t, 10));
      }
    } catch (e) {}
    r.clientHydrateAnnotations && t.documentElement.classList.add("hydrated"), r.serializeToHtml && (s.html = serializeDocumentToString(t, r));
  } catch (e) {
    renderCatchError(s, e);
  }
  if (r.destroyWindow) try {
    r.destroyDocument || (e.document = null, t.defaultView = null), e.close();
  } catch (e) {
    renderCatchError(s, e);
  }
  n(s);
}

function serializeDocumentToString(e, t) {
  return serializeNodeToHtml(e, {
    approximateLineWidth: t.approximateLineWidth,
    outerHtml: !1,
    prettyHtml: t.prettyHtml,
    removeAttributeQuotes: t.removeAttributeQuotes,
    removeBooleanAttributeQuotes: t.removeBooleanAttributeQuotes,
    removeEmptyAttributes: t.removeEmptyAttributes,
    removeHtmlComments: t.removeHtmlComments,
    serializeShadowRoot: !1
  });
}

function isValidDocument(e) {
  return null != e && 9 === e.nodeType && null != e.documentElement && 1 === e.documentElement.nodeType && null != e.body && 1 === e.body.nodeType;
}

const templateWindows = new Map, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, IS_DENO_ENV = "undefined" != typeof Deno, IS_NODE_ENV = !(IS_DENO_ENV || "undefined" == typeof global || "function" != typeof require || !global.process || "string" != typeof __filename || global.origin && "string" == typeof global.origin), hasError = (IS_DENO_ENV && Deno.build.os, 
IS_NODE_ENV && global.process.platform, IS_NODE_ENV ? process.cwd : IS_DENO_ENV && Deno.cwd, 
IS_NODE_ENV ? process.exit : IS_DENO_ENV && Deno.exit, e => null != e && 0 !== e.length && e.some(e => "error" === e.level && "runtime" !== e.type)), shouldIgnoreError = e => e === TASK_CANCELED_MSG, TASK_CANCELED_MSG = "task canceled", SKIP_ATTRS = new Set([ "s-id", "c-id" ]), collectUsedSelectors = (e, t) => {
  if (null != t && 1 === t.nodeType) {
    const r = t.children, s = t.nodeName.toLowerCase();
    e.tags.add(s);
    const n = t.attributes;
    for (let r = 0, s = n.length; r < s; r++) {
      const s = n.item(r), o = s.name.toLowerCase();
      if (e.attrs.add(o), "class" === o) {
        const r = t.classList;
        for (let t = 0, s = r.length; t < s; t++) e.classNames.add(r.item(t));
      } else "id" === o && e.ids.add(s.value);
    }
    if (r) for (let t = 0, s = r.length; t < s; t++) collectUsedSelectors(e, r[t]);
  }
}, parseCss = (e, t) => {
  let r = 1, s = 1;
  const n = [], o = e => {
    const t = e.match(/\n/g);
    t && (r += t.length);
    const n = e.lastIndexOf("\n");
    s = ~n ? e.length - n : s + e.length;
  }, i = () => {
    const e = {
      line: r,
      column: s
    };
    return t => (t.position = new N(e), m(), t);
  }, a = o => {
    const i = e.split("\n"), a = {
      level: "error",
      type: "css",
      language: "css",
      header: "CSS Parse",
      messageText: o,
      absFilePath: t,
      lines: [ {
        lineIndex: r - 1,
        lineNumber: r,
        errorCharStart: s,
        text: e[r - 1]
      } ]
    };
    if (r > 1) {
      const t = {
        lineIndex: r - 1,
        lineNumber: r - 1,
        text: e[r - 2],
        errorCharStart: -1,
        errorLength: -1
      };
      a.lines.unshift(t);
    }
    if (r + 2 < i.length) {
      const e = {
        lineIndex: r,
        lineNumber: r + 1,
        text: i[r],
        errorCharStart: -1,
        errorLength: -1
      };
      a.lines.push(e);
    }
    return n.push(a), null;
  }, l = () => u(/^{\s*/), c = () => u(/^}/), u = t => {
    const r = t.exec(e);
    if (!r) return;
    const s = r[0];
    return o(s), e = e.slice(s.length), r;
  }, d = () => {
    let t;
    const r = [];
    for (m(), h(r); e.length && "}" !== e.charAt(0) && (t = w() || z()); ) !1 !== t && (r.push(t), 
    h(r));
    return r;
  }, m = () => u(/^\s*/), h = e => {
    let t;
    for (e = e || []; t = f(); ) !1 !== t && e.push(t);
    return e;
  }, f = () => {
    const t = i();
    if ("/" !== e.charAt(0) || "*" !== e.charAt(1)) return null;
    let r = 2;
    for (;"" !== e.charAt(r) && ("*" !== e.charAt(r) || "/" !== e.charAt(r + 1)); ) ++r;
    if (r += 2, "" === e.charAt(r - 1)) return a("End of comment missing");
    const n = e.slice(2, r - 2);
    return s += 2, o(n), e = e.slice(r), s += 2, t({
      type: "comment",
      comment: n
    });
  }, p = () => {
    const e = u(/^([^{]+)/);
    return e ? trim(e[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, (function(e) {
      return e.replace(/,/g, "‌");
    })).split(/\s*(?![^(]*\)),\s*/).map((function(e) {
      return e.replace(/\u200C/g, ",");
    })) : null;
  }, g = () => {
    const e = i();
    let t = u(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
    if (!t) return null;
    if (t = trim(t[0]), !u(/^:\s*/)) return a("property missing ':'");
    const r = u(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/), s = e({
      type: "declaration",
      property: t.replace(commentre, ""),
      value: r ? trim(r[0]).replace(commentre, "") : ""
    });
    return u(/^[;\s]*/), s;
  }, y = () => {
    const e = [];
    if (!l()) return a("missing '{'");
    let t;
    for (h(e); t = g(); ) !1 !== t && (e.push(t), h(e));
    return c() ? e : a("missing '}'");
  }, C = () => {
    let e;
    const t = [], r = i();
    for (;e = u(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/); ) t.push(e[1]), u(/^,\s*/);
    return t.length ? r({
      type: "keyframe",
      values: t,
      declarations: y()
    }) : null;
  }, S = e => {
    const t = new RegExp("^@" + e + "\\s*([^;]+);");
    return () => {
      const r = i(), s = u(t);
      if (!s) return null;
      const n = {
        type: e
      };
      return n[e] = s[1].trim(), r(n);
    };
  }, E = S("import"), b = S("charset"), T = S("namespace"), w = () => "@" !== e[0] ? null : (() => {
    const e = i();
    let t = u(/^@([-\w]+)?keyframes\s*/);
    if (!t) return null;
    const r = t[1];
    if (t = u(/^([-\w]+)\s*/), !t) return a("@keyframes missing name");
    const s = t[1];
    if (!l()) return a("@keyframes missing '{'");
    let n, o = h();
    for (;n = C(); ) o.push(n), o = o.concat(h());
    return c() ? e({
      type: "keyframes",
      name: s,
      vendor: r,
      keyframes: o
    }) : a("@keyframes missing '}'");
  })() || (() => {
    const e = i(), t = u(/^@media *([^{]+)/);
    if (!t) return null;
    const r = trim(t[1]);
    if (!l()) return a("@media missing '{'");
    const s = h().concat(d());
    return c() ? e({
      type: "media",
      media: r,
      rules: s
    }) : a("@media missing '}'");
  })() || (() => {
    const e = i(), t = u(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
    return t ? e({
      type: "custom-media",
      name: trim(t[1]),
      media: trim(t[2])
    }) : null;
  })() || (() => {
    const e = i(), t = u(/^@supports *([^{]+)/);
    if (!t) return null;
    const r = trim(t[1]);
    if (!l()) return a("@supports missing '{'");
    const s = h().concat(d());
    return c() ? e({
      type: "supports",
      supports: r,
      rules: s
    }) : a("@supports missing '}'");
  })() || E() || b() || T() || (() => {
    const e = i(), t = u(/^@([-\w]+)?document *([^{]+)/);
    if (!t) return null;
    const r = trim(t[1]), s = trim(t[2]);
    if (!l()) return a("@document missing '{'");
    const n = h().concat(d());
    return c() ? e({
      type: "document",
      document: s,
      vendor: r,
      rules: n
    }) : a("@document missing '}'");
  })() || (() => {
    const e = i();
    if (!u(/^@page */)) return null;
    const t = p() || [];
    if (!l()) return a("@page missing '{'");
    let r, s = h();
    for (;r = g(); ) s.push(r), s = s.concat(h());
    return c() ? e({
      type: "page",
      selectors: t,
      declarations: s
    }) : a("@page missing '}'");
  })() || (() => {
    const e = i();
    if (!u(/^@host\s*/)) return null;
    if (!l()) return a("@host missing '{'");
    const t = h().concat(d());
    return c() ? e({
      type: "host",
      rules: t
    }) : a("@host missing '}'");
  })() || (() => {
    const e = i();
    if (!u(/^@font-face\s*/)) return null;
    if (!l()) return a("@font-face missing '{'");
    let t, r = h();
    for (;t = g(); ) r.push(t), r = r.concat(h());
    return c() ? e({
      type: "font-face",
      declarations: r
    }) : a("@font-face missing '}'");
  })(), z = () => {
    const e = i(), t = p();
    return t ? (h(), e({
      type: "rule",
      selectors: t,
      declarations: y()
    })) : a("selector missing");
  };
  class N {
    constructor(e) {
      this.start = e, this.end = {
        line: r,
        column: s
      }, this.source = t;
    }
  }
  return N.prototype.content = e, Object.assign({
    diagnostics: n
  }, addParent((() => {
    const e = d();
    return {
      type: "stylesheet",
      stylesheet: {
        source: t,
        rules: e
      }
    };
  })()));
}, trim = e => e ? e.trim() : "", addParent = (e, t) => {
  const r = e && "string" == typeof e.type, s = r ? e : t;
  for (const t in e) {
    const r = e[t];
    Array.isArray(r) ? r.forEach((function(e) {
      addParent(e, s);
    })) : r && "object" == typeof r && addParent(r, s);
  }
  return r && Object.defineProperty(e, "parent", {
    configurable: !0,
    writable: !0,
    enumerable: !1,
    value: t || null
  }), e;
}, commentre = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, getCssSelectors = e => {
  SELECTORS.all.length = SELECTORS.tags.length = SELECTORS.classNames.length = SELECTORS.ids.length = SELECTORS.attrs.length = 0;
  const t = (e = e.replace(/\./g, " .").replace(/\#/g, " #").replace(/\[/g, " [").replace(/\>/g, " > ").replace(/\+/g, " + ").replace(/\~/g, " ~ ").replace(/\*/g, " * ").replace(/\:not\((.*?)\)/g, " ")).split(" ");
  for (let e = 0, r = t.length; e < r; e++) t[e] = t[e].split(":")[0], 0 !== t[e].length && ("." === t[e].charAt(0) ? SELECTORS.classNames.push(t[e].substr(1)) : "#" === t[e].charAt(0) ? SELECTORS.ids.push(t[e].substr(1)) : "[" === t[e].charAt(0) ? (t[e] = t[e].substr(1).split("=")[0].split("]")[0].trim(), 
  SELECTORS.attrs.push(t[e].toLowerCase())) : /[a-z]/g.test(t[e].charAt(0)) && SELECTORS.tags.push(t[e].toLowerCase()));
  return SELECTORS.classNames = SELECTORS.classNames.sort((e, t) => e.length < t.length ? -1 : e.length > t.length ? 1 : 0), 
  SELECTORS;
}, SELECTORS = {
  all: [],
  tags: [],
  classNames: [],
  ids: [],
  attrs: []
}, serializeCssVisitNode = (e, t, r, s) => {
  const n = t.type;
  return "declaration" === n ? serializeCssDeclaration(t, r, s) : "rule" === n ? serializeCssRule(e, t) : "comment" === n ? "!" === t.comment[0] ? `/*${t.comment}*/` : "" : "media" === n ? serializeCssMedia(e, t) : "keyframes" === n ? serializeCssKeyframes(e, t) : "keyframe" === n ? serializeCssKeyframe(e, t) : "font-face" === n ? serializeCssFontFace(e, t) : "supports" === n ? serializeCssSupports(e, t) : "import" === n ? "@import " + t.import + ";" : "charset" === n ? "@charset " + t.charset + ";" : "page" === n ? serializeCssPage(e, t) : "host" === n ? "@host{" + serializeCssMapVisit(e, t.rules) + "}" : "custom-media" === n ? "@custom-media " + t.name + " " + t.media + ";" : "document" === n ? serializeCssDocument(e, t) : "namespace" === n ? "@namespace " + t.namespace + ";" : "";
}, serializeCssRule = (e, t) => {
  const r = t.declarations, s = e.usedSelectors, n = t.selectors.slice();
  if (null == r || 0 === r.length) return "";
  if (s) {
    let t, r, o = !0;
    for (t = n.length - 1; t >= 0; t--) {
      const i = getCssSelectors(n[t]);
      o = !0;
      let a = i.classNames.length;
      if (a > 0 && e.hasUsedClassNames) for (r = 0; r < a; r++) if (!s.classNames.has(i.classNames[r])) {
        o = !1;
        break;
      }
      if (o && e.hasUsedTags && (a = i.tags.length, a > 0)) for (r = 0; r < a; r++) if (!s.tags.has(i.tags[r])) {
        o = !1;
        break;
      }
      if (o && e.hasUsedAttrs && (a = i.attrs.length, a > 0)) for (r = 0; r < a; r++) if (!s.attrs.has(i.attrs[r])) {
        o = !1;
        break;
      }
      if (o && e.hasUsedIds && (a = i.ids.length, a > 0)) for (r = 0; r < a; r++) if (!s.ids.has(i.ids[r])) {
        o = !1;
        break;
      }
      o || n.splice(t, 1);
    }
  }
  if (0 === n.length) return "";
  const o = [];
  let i = "";
  for (const e of t.selectors) i = removeSelectorWhitespace(e), o.includes(i) || o.push(i);
  return `${o}{${serializeCssMapVisit(e, r)}}`;
}, serializeCssDeclaration = (e, t, r) => "" === e.value ? "" : r - 1 === t ? e.property + ":" + e.value : e.property + ":" + e.value + ";", serializeCssMedia = (e, t) => {
  const r = serializeCssMapVisit(e, t.rules);
  return "" === r ? "" : "@media " + removeMediaWhitespace(t.media) + "{" + r + "}";
}, serializeCssKeyframes = (e, t) => {
  const r = serializeCssMapVisit(e, t.keyframes);
  return "" === r ? "" : "@" + (t.vendor || "") + "keyframes " + t.name + "{" + r + "}";
}, serializeCssKeyframe = (e, t) => t.values.join(",") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssFontFace = (e, t) => {
  const r = serializeCssMapVisit(e, t.declarations);
  return "" === r ? "" : "@font-face{" + r + "}";
}, serializeCssSupports = (e, t) => {
  const r = serializeCssMapVisit(e, t.rules);
  return "" === r ? "" : "@supports " + t.supports + "{" + r + "}";
}, serializeCssPage = (e, t) => "@page " + t.selectors.join(", ") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssDocument = (e, t) => {
  const r = serializeCssMapVisit(e, t.rules), s = "@" + (t.vendor || "") + "document " + t.document;
  return "" === r ? "" : s + "{" + r + "}";
}, serializeCssMapVisit = (e, t) => {
  let r = "";
  if (t) for (let s = 0, n = t.length; s < n; s++) r += serializeCssVisitNode(e, t[s], s, n);
  return r;
}, removeSelectorWhitespace = e => {
  let t = "", r = "", s = !1;
  for (let n = 0, o = (e = e.trim()).length; n < o; n++) if (r = e[n], "[" === r && "\\" !== t[t.length - 1] ? s = !0 : "]" === r && "\\" !== t[t.length - 1] && (s = !1), 
  !s && CSS_WS_REG.test(r)) {
    if (CSS_NEXT_CHAR_REG.test(e[n + 1])) continue;
    if (CSS_PREV_CHAR_REG.test(t[t.length - 1])) continue;
    t += " ";
  } else t += r;
  return t;
}, removeMediaWhitespace = e => {
  let t = "", r = "";
  for (let s = 0, n = (e = e.trim()).length; s < n; s++) if (r = e[s], CSS_WS_REG.test(r)) {
    if (CSS_WS_REG.test(t[t.length - 1])) continue;
    t += " ";
  } else t += r;
  return t;
}, CSS_WS_REG = /\s/, CSS_NEXT_CHAR_REG = /[>\(\)\~\,\+\s]/, CSS_PREV_CHAR_REG = /[>\(\~\,\+]/, removeUnusedStyleText = (e, t, r) => {
  try {
    const s = parseCss(r.innerHTML);
    if (t.push(...s.diagnostics), hasError(t)) return;
    try {
      r.innerHTML = ((e, t) => {
        const r = t.usedSelectors || null, s = {
          usedSelectors: r || null,
          hasUsedAttrs: !!r && r.attrs.size > 0,
          hasUsedClassNames: !!r && r.classNames.size > 0,
          hasUsedIds: !!r && r.ids.size > 0,
          hasUsedTags: !!r && r.tags.size > 0
        }, n = e.rules;
        if (!n) return "";
        const o = n.length, i = [];
        for (let e = 0; e < o; e++) i.push(serializeCssVisitNode(s, n[e], e, o));
        return i.join("");
      })(s.stylesheet, {
        usedSelectors: e
      });
    } catch (e) {
      t.push({
        level: "warn",
        type: "css",
        header: "CSS Stringify",
        messageText: e
      });
    }
  } catch (e) {
    t.push({
      level: "warn",
      type: "css",
      header: "CSS Parse",
      messageText: e
    });
  }
};

exports.createWindowFromHtml = createWindowFromHtml;
exports.hydrateDocument = hydrateDocument;
exports.renderToString = renderToString;
exports.serializeDocumentToString = serializeDocumentToString;
