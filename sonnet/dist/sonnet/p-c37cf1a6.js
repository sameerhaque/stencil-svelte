import{r as t,h as s,g as i}from"./p-75b8bc7c.js";import{S as n}from"./p-85cd1ecc.js";import{W as o}from"./p-d7b2933a.js";import{a as e,E as r}from"./p-a0d279ae.js";const h=class{constructor(s){t(this,s),this.actionReference=n.empty(),this.actionData=n.empty(),this.iconClassName=n.empty(),this.linkTitle=n.empty(),this.styleClasses=n.empty(),this.buttonId=n.empty(),this.eventConfiguration=null,this.actionDataJsonObj=null}async getEventConfiguration(){return this.eventConfiguration}onSntButtonClick(t){e.processEvent(t,this.eventConfiguration,this.actionReference,this.actionDataJsonObj)}onSntButtonKeyDown(t){e.processEvent(t,this.eventConfiguration,this.actionReference,this.actionDataJsonObj)}componentDidLoad(){if(n.isEmpty(this.actionReference))throw new Error("ActionButtonComponent must contain a valid action-reference attribute!");if(!n.isEmpty(this.actionData))try{this.actionDataJsonObj=JSON.parse(this.actionData)}catch(t){throw new Error("Invalid JSON string in ActionButtonComponent's action-data property.")}this.eventConfiguration=r.newInstanceof().withComponent(this.element).build()}render(){const t=n.notEmpty(this.iconClassName)?s("snt-icon",{styleClasses:this.iconClassName}):"",i=s("snt-button",{"button-id":this.buttonId,styleClasses:o.generateClasses([],this.styleClasses),"hidden-title":this.linkTitle},t,this.linkTitle);return[this.element.children.length>0?s("slot",null):[s("snt-event",{type:"click"}),s("snt-event",{type:"keydown",filters:"space"})],i]}get element(){return i(this)}};h.TAG_NAME="snt-action-button";export{h as A}